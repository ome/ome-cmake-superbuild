From 41eb076ad47944011bbe83f93e185483e75019a9 Mon Sep 17 00:00:00 2001
From: Roger Leigh <rleigh@dundee.ac.uk>
Date: Tue, 12 Jul 2016 08:14:51 +0000
Subject: [PATCH] cmake: Add CMake build system

- Reimplement the entirely of the autoconf, automake, libtool
  and pkg-config logic, including all feature tests
- Also include the MSVC logic missing from the above
- Include a full set of unit tests to reimplement the logic
  in sanityTest.pl and the data in sanityTest_ExpectedResult.logs
- Obtain versioning information from configure.ac and
  version.incl
- Generate and install exported CMake configuration for use by
  downstream projects using CMake, to replace FindXercesC.cmake
  provided by the CMake upstream
- Install documentation
- Add targets to regenerate the HTML manual and the Doxygen
  API reference portably, replacing the shell script and batch
  file for generating the manual
- Add targets for the documentation source files and
  substitute sources so that they are visible and editable in
  an IDE

This will allow building with any supported build system on any
UNIX-like platform or upon Windows, as an alternative to the GNU
autotools and MSVC version-specific project and solution files
which will behave consistently across all platforms.

The only feature of autoconf and automake which is not converted
is "make dist", and that's absolutely possible should it be
desired.
---
 CMakeLists.txt                                     |  164 +++
 Makefile.am                                        |    3 +
 cmake/FindICU.cmake                                |  359 ++++++
 cmake/RunTest.cmake                                |   88 ++
 cmake/XercesBool.cmake                             |   38 +
 cmake/XercesConst.cmake                            |   29 +
 cmake/XercesDLL.cmake                              |   58 +
 cmake/XercesFileMgrSelection.cmake                 |   42 +
 cmake/XercesFunctions.cmake                        |   55 +
 cmake/XercesICU.cmake                              |   22 +
 cmake/XercesIconvConst.cmake                       |   42 +
 cmake/XercesIncludes.cmake                         |   53 +
 cmake/XercesInline.cmake                           |   48 +
 cmake/XercesIntTypes.cmake                         |  142 +++
 cmake/XercesLFS.cmake                              |   27 +
 cmake/XercesLString.cmake                          |   31 +
 cmake/XercesMsgLoaderSelection.cmake               |   63 +
 cmake/XercesMutexMgrSelection.cmake                |   61 +
 cmake/XercesNamespaces.cmake                       |   37 +
 cmake/XercesNetAccessorSelection.cmake             |   96 ++
 cmake/XercesOperatorDelete.cmake                   |   43 +
 cmake/XercesPathDelimiters.cmake                   |   35 +
 cmake/XercesPathMax.cmake                          |   30 +
 cmake/XercesSSE2.cmake                             |  103 ++
 cmake/XercesStdLibs.cmake                          |   45 +
 cmake/XercesStdNamespace.cmake                     |   33 +
 cmake/XercesTest.cmake                             |   80 ++
 cmake/XercesTranscoderSelection.cmake              |  117 ++
 cmake/XercesVolatile.cmake                         |   29 +
 cmake/XercesWChar.cmake                            |   53 +
 cmake/XercesWarnings.cmake                         |   79 ++
 cmake/XercesXMLCh.cmake                            |   46 +
 config.h.cmake.in                                  |  493 ++++++++
 doc/CMakeLists.txt                                 |   95 ++
 doc/build.xml                                      |  245 ++++
 samples/CMakeLists.txt                             |  201 +++
 samples/Makefile.am                                |    6 +-
 samples/expected/CreateDOMDocument.log             |    1 +
 samples/expected/DOMCount.log                      |   20 +
 samples/expected/DOMCount1.log                     |    1 +
 samples/expected/DOMCount2.log                     |    1 +
 samples/expected/DOMCount3.log                     |    1 +
 samples/expected/DOMPrint.log                      |   30 +
 samples/expected/DOMPrint1.log                     |   61 +
 samples/expected/DOMPrint2.log                     |   61 +
 samples/expected/DOMPrint3.log                     |   61 +
 samples/expected/DOMPrint4.log                     |   61 +
 samples/expected/DOMPrint5.log                     |    1 +
 samples/expected/EnumVal.log                       |    9 +
 samples/expected/EnumVal1.log                      |   34 +
 samples/expected/MemParse.log                      |   23 +
 samples/expected/MemParse1.log                     |   23 +
 samples/expected/PParse.log                        |   20 +
 samples/expected/PParse1.log                       |    1 +
 samples/expected/PParse2.log                       |    1 +
 samples/expected/Redirect.log                      |   11 +
 samples/expected/Redirect1.log                     |    1 +
 samples/expected/SAX2Count.log                     |   25 +
 samples/expected/SAX2Count1.log                    |    1 +
 samples/expected/SAX2Count2.log                    |    1 +
 samples/expected/SAX2Count3.log                    |    1 +
 samples/expected/SAX2Print.log                     |   28 +
 samples/expected/SAX2Print1.log                    |   40 +
 samples/expected/SAX2Print2.log                    |   40 +
 samples/expected/SAX2Print3.log                    |   40 +
 samples/expected/SAX2Print4.log                    |  108 ++
 samples/expected/SAX2Print5.log                    |  108 ++
 samples/expected/SAXCount.log                      |   20 +
 samples/expected/SAXCount1.log                     |    1 +
 samples/expected/SAXCount2.log                     |    1 +
 samples/expected/SAXCount3.log                     |    1 +
 samples/expected/SAXPrint.log                      |   23 +
 samples/expected/SAXPrint1.log                     |   40 +
 samples/expected/SAXPrint2.log                     |   40 +
 samples/expected/SAXPrint3.log                     |   40 +
 samples/expected/SAXPrintLong.log                  |    2 +
 samples/expected/SEnumVal.log                      |    8 +
 samples/expected/SEnumVal1.log                     |  108 ++
 samples/expected/StdInParse1.log                   |    1 +
 samples/expected/StdInParse2.log                   |    1 +
 samples/expected/StdInParse3.log                   |    1 +
 src/CMakeLists.txt                                 | 1323 ++++++++++++++++++++
 src/Makefile.am                                    |    5 +-
 src/XercesCConfig.cmake.in                         |   11 +
 .../util/Xerces_autoconf_config.hpp.cmake.in       |  151 +++
 tests/CMakeLists.txt                               |  197 +++
 tests/Makefile.am                                  |    4 +-
 tests/expected/DOMMemTest.log                      |    1 +
 tests/expected/DOMTest.log                         |    1 +
 tests/expected/DOMTraversalTest.log                |    1 +
 tests/expected/DOMTypeInfoTest.log                 |    1 +
 tests/expected/InitTermTest.log                    |   12 +
 tests/expected/InitTermTest1.log                   |    1 +
 tests/expected/InitTermTest2.log                   |    1 +
 tests/expected/InitTermTest3.log                   |    1 +
 tests/expected/MemHandlerTest.log                  |   21 +
 tests/expected/MemHandlerTest1.log                 |    4 +
 tests/expected/MemHandlerTest2.log                 |    4 +
 tests/expected/RangeTest.log                       |    1 +
 tests/expected/ThreadTest.log                      |   20 +
 tests/expected/ThreadTest1.log                     |    1 +
 tests/expected/ThreadTest10.log                    |    1 +
 tests/expected/ThreadTest11.log                    |    1 +
 tests/expected/ThreadTest12.log                    |    1 +
 tests/expected/ThreadTest13.log                    |    1 +
 tests/expected/ThreadTest14.log                    |    1 +
 tests/expected/ThreadTest15.log                    |    1 +
 tests/expected/ThreadTest2.log                     |    1 +
 tests/expected/ThreadTest3.log                     |    1 +
 tests/expected/ThreadTest4.log                     |    1 +
 tests/expected/ThreadTest5.log                     |    1 +
 tests/expected/ThreadTest6.log                     |    1 +
 tests/expected/ThreadTest7.log                     |    1 +
 tests/expected/ThreadTest8.log                     |    1 +
 tests/expected/ThreadTest9.log                     |    1 +
 tests/expected/XSValueTest.log                     |    2 +
 tests/expected/XSerializerTest.log                 |   23 +
 tests/expected/XSerializerTest1.log                |    1 +
 tests/expected/XSerializerTest2.log                |    1 +
 tests/expected/XSerializerTest3.log                |    1 +
 tests/expected/XSerializerTest4.log                |    1 +
 tests/expected/XSerializerTest5.log                |    1 +
 122 files changed, 6093 insertions(+), 4 deletions(-)
 create mode 100644 CMakeLists.txt
 create mode 100644 cmake/FindICU.cmake
 create mode 100644 cmake/RunTest.cmake
 create mode 100644 cmake/XercesBool.cmake
 create mode 100644 cmake/XercesConst.cmake
 create mode 100644 cmake/XercesDLL.cmake
 create mode 100644 cmake/XercesFileMgrSelection.cmake
 create mode 100644 cmake/XercesFunctions.cmake
 create mode 100644 cmake/XercesICU.cmake
 create mode 100644 cmake/XercesIconvConst.cmake
 create mode 100644 cmake/XercesIncludes.cmake
 create mode 100644 cmake/XercesInline.cmake
 create mode 100644 cmake/XercesIntTypes.cmake
 create mode 100644 cmake/XercesLFS.cmake
 create mode 100644 cmake/XercesLString.cmake
 create mode 100644 cmake/XercesMsgLoaderSelection.cmake
 create mode 100644 cmake/XercesMutexMgrSelection.cmake
 create mode 100644 cmake/XercesNamespaces.cmake
 create mode 100644 cmake/XercesNetAccessorSelection.cmake
 create mode 100644 cmake/XercesOperatorDelete.cmake
 create mode 100644 cmake/XercesPathDelimiters.cmake
 create mode 100644 cmake/XercesPathMax.cmake
 create mode 100644 cmake/XercesSSE2.cmake
 create mode 100644 cmake/XercesStdLibs.cmake
 create mode 100644 cmake/XercesStdNamespace.cmake
 create mode 100644 cmake/XercesTest.cmake
 create mode 100644 cmake/XercesTranscoderSelection.cmake
 create mode 100644 cmake/XercesVolatile.cmake
 create mode 100644 cmake/XercesWChar.cmake
 create mode 100644 cmake/XercesWarnings.cmake
 create mode 100644 cmake/XercesXMLCh.cmake
 create mode 100644 config.h.cmake.in
 create mode 100644 doc/CMakeLists.txt
 create mode 100644 samples/CMakeLists.txt
 create mode 100644 samples/expected/CreateDOMDocument.log
 create mode 100644 samples/expected/DOMCount.log
 create mode 100644 samples/expected/DOMCount1.log
 create mode 100644 samples/expected/DOMCount2.log
 create mode 100644 samples/expected/DOMCount3.log
 create mode 100644 samples/expected/DOMPrint.log
 create mode 100644 samples/expected/DOMPrint1.log
 create mode 100644 samples/expected/DOMPrint2.log
 create mode 100644 samples/expected/DOMPrint3.log
 create mode 100644 samples/expected/DOMPrint4.log
 create mode 100644 samples/expected/DOMPrint5.log
 create mode 100644 samples/expected/EnumVal.log
 create mode 100644 samples/expected/EnumVal1.log
 create mode 100644 samples/expected/MemParse.log
 create mode 100644 samples/expected/MemParse1.log
 create mode 100644 samples/expected/PParse.log
 create mode 100644 samples/expected/PParse1.log
 create mode 100644 samples/expected/PParse2.log
 create mode 100644 samples/expected/Redirect.log
 create mode 100644 samples/expected/Redirect1.log
 create mode 100644 samples/expected/SAX2Count.log
 create mode 100644 samples/expected/SAX2Count1.log
 create mode 100644 samples/expected/SAX2Count2.log
 create mode 100644 samples/expected/SAX2Count3.log
 create mode 100644 samples/expected/SAX2Print.log
 create mode 100644 samples/expected/SAX2Print1.log
 create mode 100644 samples/expected/SAX2Print2.log
 create mode 100644 samples/expected/SAX2Print3.log
 create mode 100644 samples/expected/SAX2Print4.log
 create mode 100644 samples/expected/SAX2Print5.log
 create mode 100644 samples/expected/SAXCount.log
 create mode 100644 samples/expected/SAXCount1.log
 create mode 100644 samples/expected/SAXCount2.log
 create mode 100644 samples/expected/SAXCount3.log
 create mode 100644 samples/expected/SAXPrint.log
 create mode 100644 samples/expected/SAXPrint1.log
 create mode 100644 samples/expected/SAXPrint2.log
 create mode 100644 samples/expected/SAXPrint3.log
 create mode 100644 samples/expected/SAXPrintLong.log
 create mode 100644 samples/expected/SEnumVal.log
 create mode 100644 samples/expected/SEnumVal1.log
 create mode 100644 samples/expected/StdInParse1.log
 create mode 100644 samples/expected/StdInParse2.log
 create mode 100644 samples/expected/StdInParse3.log
 create mode 100644 src/CMakeLists.txt
 create mode 100644 src/XercesCConfig.cmake.in
 create mode 100644 src/xercesc/util/Xerces_autoconf_config.hpp.cmake.in
 create mode 100644 tests/CMakeLists.txt
 create mode 100644 tests/expected/DOMMemTest.log
 create mode 100644 tests/expected/DOMTest.log
 create mode 100644 tests/expected/DOMTraversalTest.log
 create mode 100644 tests/expected/DOMTypeInfoTest.log
 create mode 100644 tests/expected/InitTermTest.log
 create mode 100644 tests/expected/InitTermTest1.log
 create mode 100644 tests/expected/InitTermTest2.log
 create mode 100644 tests/expected/InitTermTest3.log
 create mode 100644 tests/expected/MemHandlerTest.log
 create mode 100644 tests/expected/MemHandlerTest1.log
 create mode 100644 tests/expected/MemHandlerTest2.log
 create mode 100644 tests/expected/RangeTest.log
 create mode 100644 tests/expected/ThreadTest.log
 create mode 100644 tests/expected/ThreadTest1.log
 create mode 100644 tests/expected/ThreadTest10.log
 create mode 100644 tests/expected/ThreadTest11.log
 create mode 100644 tests/expected/ThreadTest12.log
 create mode 100644 tests/expected/ThreadTest13.log
 create mode 100644 tests/expected/ThreadTest14.log
 create mode 100644 tests/expected/ThreadTest15.log
 create mode 100644 tests/expected/ThreadTest2.log
 create mode 100644 tests/expected/ThreadTest3.log
 create mode 100644 tests/expected/ThreadTest4.log
 create mode 100644 tests/expected/ThreadTest5.log
 create mode 100644 tests/expected/ThreadTest6.log
 create mode 100644 tests/expected/ThreadTest7.log
 create mode 100644 tests/expected/ThreadTest8.log
 create mode 100644 tests/expected/ThreadTest9.log
 create mode 100644 tests/expected/XSValueTest.log
 create mode 100644 tests/expected/XSerializerTest.log
 create mode 100644 tests/expected/XSerializerTest1.log
 create mode 100644 tests/expected/XSerializerTest2.log
 create mode 100644 tests/expected/XSerializerTest3.log
 create mode 100644 tests/expected/XSerializerTest4.log
 create mode 100644 tests/expected/XSerializerTest5.log

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..9645762
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,164 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Run "cmake" to generate the build files for your platform
+
+cmake_minimum_required(VERSION 3.2.0)
+
+# Use new variable expansion policy.
+if (POLICY CMP0053)
+  cmake_policy(SET CMP0053 NEW)
+endif(POLICY CMP0053)
+if (POLICY CMP0054)
+  cmake_policy(SET CMP0054 NEW)
+endif(POLICY CMP0054)
+
+# Use folders (for IDE project grouping)
+set_property(GLOBAL PROPERTY USE_FOLDERS ON)
+
+# Source additional modules from the "cmake" directory
+list(APPEND CMAKE_MODULE_PATH
+     "${CMAKE_CURRENT_LIST_DIR}/cmake")
+
+# Read version information from configure.ac.
+file(STRINGS "${CMAKE_CURRENT_LIST_DIR}/configure.ac" configure
+     REGEX "^AC_INIT\\(\\[xerces-c\\],\\[(.*)\\]\\)")
+foreach(line IN LISTS configure)
+  string(REGEX REPLACE "^AC_INIT\\(\\[xerces-c\\],\\[(.*)\\]\\)" "\\1" xerces_c_version "${line}")
+  break()
+endforeach()
+
+message(STATUS "Configuring Apache Xerces-C++ version ${xerces_c_version}")
+
+# Project version
+project(xerces-c
+        VERSION "${xerces_c_version}"
+        LANGUAGES C CXX)
+enable_testing()
+
+# For autotools header compatibility
+set(PACKAGE "${PROJECT_NAME}")
+set(PACKAGE_NAME "${PROJECT_NAME}")
+set(PACKAGE_TARNAME "${PROJECT_NAME}")
+set(PACKAGE_VERSION "${PROJECT_VERSION}")
+set(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
+set(PACKAGE_BUGREPORT "c-dev@xerces.apache.org")
+set(PACKAGE_URL "https://xerces.apache.org/xerces-c/")
+
+set(EXTRA_DIST
+  version.incl
+  xerces-c.spec
+  xerces-c.pc.in
+  CREDITS
+  INSTALL
+  KEYS
+  LICENSE
+  NOTICE
+  README
+  config/pretty-make
+  doc
+  projects
+  reconf
+  scripts/createBindingsFormatFromHPP.pl
+  scripts/makeStringDefinition.pl
+  scripts/sanityTest.pl
+  scripts/sanityTest_ExpectedResult.log
+  tools
+)
+
+include(GNUInstallDirs)
+include(XercesIncludes)
+include(XercesFunctions)
+include(XercesDLL)
+include(XercesIntTypes)
+include(XercesPathDelimiters)
+include(XercesICU)
+include(XercesMutexMgrSelection)
+include(XercesNetAccessorSelection)
+include(XercesMsgLoaderSelection)
+include(XercesTranscoderSelection)
+include(XercesFileMgrSelection)
+include(XercesXMLCh)
+include(XercesOperatorDelete)
+include(XercesBool)
+include(XercesConst)
+include(XercesInline)
+include(XercesVolatile)
+include(XercesLString)
+include(XercesNamespaces)
+include(XercesStdLibs)
+include(XercesStdNamespace)
+include(XercesSSE2)
+include(XercesPathMax)
+include(XercesWChar)
+include(XercesIconvConst)
+include(XercesLFS)
+
+# Generate headers
+configure_file(
+  ${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake.in
+  ${CMAKE_CURRENT_BINARY_DIR}/config.h
+  @ONLY)
+configure_file(
+  ${CMAKE_CURRENT_SOURCE_DIR}/src/xercesc/util/Xerces_autoconf_config.hpp.cmake.in
+  ${CMAKE_CURRENT_BINARY_DIR}/src/xercesc/util/Xerces_autoconf_config.hpp
+  @ONLY)
+
+# Generate pkg-config file
+set(pkgconfig-dir "${CMAKE_INSTALL_LIBDIR}/pkgconfig" CACHE STRING "pkg-config installation directory (default ${CMAKE_INSTALL_LIBDIR}/pkgconfig)")
+set(PKGCONFIGDIR "${pkgconfig-dir}")
+
+set(prefix "${CMAKE_INSTALL_PREFIX}")
+set(exec_prefix "${CMAKE_INSTALL_PREFIX}")
+set(libdir "${CMAKE_INSTALL_FULL_LIBDIR}")
+set(includedir "${CMAKE_INSTALL_FULL_INCLUDEDIR}")
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/xerces-c.pc.in
+               ${CMAKE_CURRENT_BINARY_DIR}/xerces-c.pc)
+install(
+  FILES ${CMAKE_CURRENT_BINARY_DIR}/xerces-c.pc
+  DESTINATION "${PKGCONFIGDIR}"
+  COMPONENT "development")
+
+# Process subdirectories
+add_subdirectory(doc)
+add_subdirectory(src)
+add_subdirectory(tests)
+add_subdirectory(samples)
+
+# Display configuration summary
+message(STATUS "")
+message(STATUS "Xerces-C++ configuration summary")
+message(STATUS "--------------------------------")
+message(STATUS "")
+message(STATUS "  Version:                     ${xerces-c_VERSION}")
+message(STATUS "  Library version:             ${LIB_VER}")
+message(STATUS "  Library interface version D: ${LIB_INTERFACE_VER_D}")
+message(STATUS "  Library interface version U: ${LIB_INTERFACE_VER_U}")
+message(STATUS "")
+message(STATUS "  Installation directory:      ${prefix}")
+message(STATUS "  C compiler:                  ${CMAKE_C_COMPILER}")
+message(STATUS "  C++ compiler:                ${CMAKE_CXX_COMPILER}")
+message(STATUS "")
+message(STATUS "  Build shared libraries:      ${BUILD_SHARED_LIBS}")
+message(STATUS "  Path delimiters:             \"${path_delims}\"")
+message(STATUS "  File Manager:                ${filemgr}")
+message(STATUS "  Mutex Manager:               ${mutexmgr}")
+message(STATUS "  Transcoder:                  ${transcoder}")
+message(STATUS "  NetAccessor:                 ${netaccessor}")
+message(STATUS "  Message Loader:              ${msgloader}")
diff --git a/Makefile.am b/Makefile.am
index d8960fc..0c64809 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -9,6 +9,9 @@ EXTRA_DIST = version.incl \
              LICENSE \
              NOTICE \
              README \
+             CMakeLists.txt \
+             cmake \
+             config.h.cmake.in \
              config/pretty-make \
              doc \
              projects \
diff --git a/cmake/FindICU.cmake b/cmake/FindICU.cmake
new file mode 100644
index 0000000..77fe9f5
--- /dev/null
+++ b/cmake/FindICU.cmake
@@ -0,0 +1,359 @@
+#.rst:
+# FindICU
+# -------
+#
+# Find the International Components for Unicode (ICU) libraries and
+# programs.
+#
+# This module supports multiple components.
+# Components can include any of: ``data``, ``i18n``, ``io``, ``le``,
+# ``lx``, ``test``, ``tu`` and ``uc``.
+#
+# Note that on Windows ``data`` is named ``dt`` and ``i18n`` is named
+# ``in`; any of the names may be used, and the appropriate
+# platform-specific library name will be automatically selected.
+#
+# This module reports information about the ICU installation in
+# several variables.  General variables::
+#
+#   ICU_VERSION - ICU release version
+#   ICU_FOUND - true if the main programs and libraries were found
+#   ICU_LIBRARIES - component libraries to be linked
+#   ICU_INCLUDE_DIRS - the directories containing the ICU headers
+#
+# Imported targets::
+#
+#   ICU::<C>
+#
+# Where ``<C>`` is the name of an ICU component, for example
+# ``ICU::i18n``.
+#
+# ICU programs are reported in::
+#
+#   ICU_GENCNVAL_EXECUTABLE - path to gencnval executable
+#   ICU_ICUINFO_EXECUTABLE - path to icuinfo executable
+#   ICU_GENBRK_EXECUTABLE - path to genbrk executable
+#   ICU_ICU-CONFIG_EXECUTABLE - path to icu-config executable
+#   ICU_GENRB_EXECUTABLE - path to genrb executable
+#   ICU_GENDICT_EXECUTABLE - path to gendict executable
+#   ICU_DERB_EXECUTABLE - path to derb executable
+#   ICU_PKGDATA_EXECUTABLE - path to pkgdata executable
+#   ICU_UCONV_EXECUTABLE - path to uconv executable
+#   ICU_GENCFU_EXECUTABLE - path to gencfu executable
+#   ICU_MAKECONV_EXECUTABLE - path to makeconv executable
+#   ICU_GENNORM2_EXECUTABLE - path to gennorm2 executable
+#   ICU_GENCCODE_EXECUTABLE - path to genccode executable
+#   ICU_GENSPREP_EXECUTABLE - path to gensprep executable
+#   ICU_ICUPKG_EXECUTABLE - path to icupkg executable
+#   ICU_GENCMN_EXECUTABLE - path to gencmn executable
+#
+# ICU component libraries are reported in::
+#
+#   ICU_<C>_FOUND - ON if component was found
+#   ICU_<C>_LIBRARIES - libraries for component
+#
+# Note that ``<C>`` is the uppercased name of the component.
+#
+# This module reads hints about search results from::
+#
+#   ICU_ROOT - the root of the ICU installation
+#
+# The environment variable ``ICU_ROOT`` may also be used; the
+# ICU_ROOT variable takes precedence.
+#
+# The following cache variables may also be set::
+#
+#   ICU_<P>_EXECUTABLE - the path to executable <P>
+#   ICU_INCLUDE_DIR - the directory containing the ICU headers
+#   ICU_<C>_LIBRARY - the library for component <C>
+#
+# .. note::
+#
+#   In most cases none of the above variables will require setting,
+#   unless multiple ICU versions are available and a specific version
+#   is required.
+#
+# Other variables one may set to control this module are::
+#
+#   ICU_DEBUG - Set to ON to enable debug output from FindICU.
+
+# Written by Roger Leigh <rleigh@codelibre.net>
+
+#=============================================================================
+# Copyright 2014-2016 University of Dundee
+#
+# Distributed under the OSI-approved BSD License (the "License");
+# see accompanying file Copyright.txt for details.
+#
+# This software is distributed WITHOUT ANY WARRANTY; without even the
+# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+# See the License for more information.
+#=============================================================================
+# (To distribute this file outside of CMake, substitute the full
+#  License text for the above reference.)
+
+set(icu_programs
+  gencnval
+  icuinfo
+  genbrk
+  icu-config
+  genrb
+  gendict
+  derb
+  pkgdata
+  uconv
+  gencfu
+  makeconv
+  gennorm2
+  genccode
+  gensprep
+  icupkg
+  gencmn)
+
+# The ICU checks are contained in a function due to the large number
+# of temporary variables needed.
+function(_ICU_FIND)
+  # Set up search paths, taking compiler into account.  Search ICU_ROOT,
+  # with ICU_ROOT in the environment as a fallback if unset.
+  if(ICU_ROOT)
+    list(APPEND icu_roots "${ICU_ROOT}")
+  else()
+    if(NOT "$ENV{ICU_ROOT}" STREQUAL "")
+      file(TO_CMAKE_PATH "$ENV{ICU_ROOT}" NATIVE_PATH)
+      list(APPEND icu_roots "${NATIVE_PATH}")
+      set(ICU_ROOT "${NATIVE_PATH}"
+          CACHE PATH "Location of the ICU installation" FORCE)
+    endif()
+  endif()
+
+  if(CMAKE_SIZEOF_VOID_P EQUAL 8)
+    # 64-bit binary directory
+    set(_bin64 "bin64")
+    # 64-bit library directory
+    set(_lib64 "lib64")
+  endif()
+
+  # Generic 64-bit and 32-bit directories
+  list(APPEND icu_binary_suffixes "${_bin64}" "bin")
+  list(APPEND icu_library_suffixes "${_lib64}" "lib")
+
+  # Find all ICU programs
+  foreach(program ${icu_programs})
+    string(TOUPPER "${program}" program_upcase)
+    set(cache_var "ICU_${program_upcase}_EXECUTABLE")
+    set(program_var "ICU_${program_upcase}_EXECUTABLE")
+    find_program("${cache_var}" "${program}"
+      HINTS ${icu_roots}
+      PATH_SUFFIXES ${icu_binary_suffixes}
+      DOC "ICU ${program} executable")
+    mark_as_advanced(cache_var)
+    set("${program_var}" "${${cache_var}}" PARENT_SCOPE)
+  endforeach()
+
+  # Find include directory
+  find_path(ICU_INCLUDE_DIR
+            NAMES "unicode/utypes.h"
+            HINTS ${icu_roots}
+            PATH_SUFFIXES ${icu_include_suffixes}
+            DOC "ICU include directory")
+  set(ICU_INCLUDE_DIR "${ICU_INCLUDE_DIR}" PARENT_SCOPE)
+
+  # Get version
+  if(ICU_INCLUDE_DIR AND EXISTS "${ICU_INCLUDE_DIR}/unicode/uvernum.h")
+    file(STRINGS "${ICU_INCLUDE_DIR}/unicode/uvernum.h" icu_header_str
+      REGEX "^#define[\t ]+U_ICU_VERSION[\t ]+\".*\".*")
+
+    string(REGEX REPLACE "^#define[\t ]+U_ICU_VERSION[\t ]+\"([^ \\n]*)\".*"
+      "\\1" icu_version_string "${icu_header_str}")
+    set(ICU_VERSION "${icu_version_string}" PARENT_SCOPE)
+    unset(icu_header_str)
+    unset(icu_version_string)
+  endif()
+
+  # Find all ICU libraries
+  set(ICU_REQUIRED_LIBS_FOUND ON)
+  foreach(component ${ICU_FIND_COMPONENTS})
+    string(TOUPPER "${component}" component_upcase)
+    set(component_cache "ICU_${component_upcase}_LIBRARY")
+    set(component_cache_release "${component_cache}_RELEASE")
+    set(component_cache_debug "${component_cache}_DEBUG")
+    set(component_found "${component_upcase}_FOUND")
+    set(component_libnames "icu${component}")
+    set(component_debug_libnames "icu${component}d")
+
+    # Special case deliberate library naming mismatches between Unix
+    # and Windows builds
+    unset(component_libnames)
+    unset(component_debug_libnames)
+    list(APPEND component_libnames "icu${component}")
+    list(APPEND component_debug_libnames "icu${component}d")
+    if(component STREQUAL "data")
+      list(APPEND component_libnames "icudt")
+      # Note there is no debug variant at present
+      list(APPEND component_debug_libnames "icudtd")
+    endif()
+    if(component STREQUAL "dt")
+      list(APPEND component_libnames "icudata")
+      # Note there is no debug variant at present
+      list(APPEND component_debug_libnames "icudatad")
+    endif()
+    if(component STREQUAL "i18n")
+      list(APPEND component_libnames "icuin")
+      list(APPEND component_debug_libnames "icuind")
+    endif()
+    if(component STREQUAL "in")
+      list(APPEND component_libnames "icui18n")
+      list(APPEND component_debug_libnames "icui18nd")
+    endif()
+
+    find_library("${component_cache_release}" ${component_libnames}
+      HINTS ${icu_roots}
+      PATH_SUFFIXES ${icu_library_suffixes}
+      DOC "ICU ${component} library (release)")
+    find_library("${component_cache_debug}" ${component_debug_libnames}
+      HINTS ${icu_roots}
+      PATH_SUFFIXES ${icu_library_suffixes}
+      DOC "ICU ${component} library (debug)")
+    include(SelectLibraryConfigurations)
+    select_library_configurations(ICU_${component_upcase})
+    mark_as_advanced("${component_cache_release}" "${component_cache_debug}")
+    if(${component_cache})
+      set("${component_found}" ON)
+      list(APPEND ICU_LIBRARY "${${component_cache}}")
+    endif()
+    mark_as_advanced("${component_found}")
+    set("${component_cache}" "${${component_cache}}" PARENT_SCOPE)
+    set("${component_found}" "${${component_found}}" PARENT_SCOPE)
+    if(${component_found})
+      if (ICU_FIND_REQUIRED_${component})
+        list(APPEND ICU_LIBS_FOUND "${component} (required)")
+      else()
+        list(APPEND ICU_LIBS_FOUND "${component} (optional)")
+      endif()
+    else()
+      if (ICU_FIND_REQUIRED_${component})
+        set(ICU_REQUIRED_LIBS_FOUND OFF)
+        list(APPEND ICU_LIBS_NOTFOUND "${component} (required)")
+      else()
+        list(APPEND ICU_LIBS_NOTFOUND "${component} (optional)")
+      endif()
+    endif()
+  endforeach()
+  set(_ICU_REQUIRED_LIBS_FOUND "${ICU_REQUIRED_LIBS_FOUND}" PARENT_SCOPE)
+  set(ICU_LIBRARY "${ICU_LIBRARY}" PARENT_SCOPE)
+
+  if(NOT ICU_FIND_QUIETLY)
+    if(ICU_LIBS_FOUND)
+      message(STATUS "Found the following ICU libraries:")
+      foreach(found ${ICU_LIBS_FOUND})
+        message(STATUS "  ${found}")
+      endforeach()
+    endif()
+    if(ICU_LIBS_NOTFOUND)
+      message(STATUS "The following ICU libraries were not found:")
+      foreach(notfound ${ICU_LIBS_NOTFOUND})
+        message(STATUS "  ${notfound}")
+      endforeach()
+    endif()
+  endif()
+
+  if(ICU_DEBUG)
+    message(STATUS "--------FindICU.cmake search debug--------")
+    message(STATUS "ICU binary path search order: ${icu_roots}")
+    message(STATUS "ICU include path search order: ${icu_roots}")
+    message(STATUS "ICU library path search order: ${icu_roots}")
+    message(STATUS "----------------")
+  endif()
+endfunction()
+
+_ICU_FIND()
+
+include(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(ICU
+                                  FOUND_VAR ICU_FOUND
+                                  REQUIRED_VARS ICU_INCLUDE_DIR
+                                                ICU_LIBRARY
+                                                _ICU_REQUIRED_LIBS_FOUND
+                                  VERSION_VAR ICU_VERSION
+                                  FAIL_MESSAGE "Failed to find all ICU components")
+
+unset(_ICU_REQUIRED_LIBS_FOUND)
+
+if(ICU_FOUND)
+  set(ICU_INCLUDE_DIRS "${ICU_INCLUDE_DIR}")
+  set(ICU_LIBRARIES "${ICU_LIBRARY}")
+  foreach(_ICU_component ${ICU_FIND_COMPONENTS})
+    string(TOUPPER "${_ICU_component}" _ICU_component_upcase)
+    set(_ICU_component_cache "ICU_${_ICU_component_upcase}_LIBRARY")
+    set(_ICU_component_cache_release "ICU_${_ICU_component_upcase}_LIBRARY_RELEASE")
+    set(_ICU_component_cache_debug "ICU_${_ICU_component_upcase}_LIBRARY_DEBUG")
+    set(_ICU_component_lib "ICU_${_ICU_component_upcase}_LIBRARIES")
+    set(_ICU_component_found "${_ICU_component_upcase}_FOUND")
+    set(_ICU_imported_target "ICU::${_ICU_component}")
+    if(${_ICU_component_found})
+      set("${_ICU_component_lib}" "${${_ICU_component_cache}}")
+      if(NOT TARGET ${_ICU_imported_target})
+        add_library(${_ICU_imported_target} UNKNOWN IMPORTED)
+        if(ICU_INCLUDE_DIR)
+          set_target_properties(${_ICU_imported_target} PROPERTIES
+            INTERFACE_INCLUDE_DIRECTORIES "${ICU_INCLUDE_DIR}")
+        endif()
+        if(EXISTS "${${_ICU_component_cache}}")
+          set_target_properties(${_ICU_imported_target} PROPERTIES
+            IMPORTED_LINK_INTERFACE_LANGUAGES "CXX"
+            IMPORTED_LOCATION "${${_ICU_component_cache}}")
+        endif()
+        if(EXISTS "${${_ICU_component_cache_release}}")
+          set_property(TARGET ${_ICU_imported_target} APPEND PROPERTY
+            IMPORTED_CONFIGURATIONS RELEASE)
+          set_target_properties(${_ICU_imported_target} PROPERTIES
+            IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
+            IMPORTED_LOCATION_RELEASE "${${_ICU_component_cache_release}}")
+        endif()
+        if(EXISTS "${${_ICU_component_cache_debug}}")
+          set_property(TARGET ${_ICU_imported_target} APPEND PROPERTY
+            IMPORTED_CONFIGURATIONS DEBUG)
+          set_target_properties(${_ICU_imported_target} PROPERTIES
+            IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
+            IMPORTED_LOCATION_DEBUG "${${_ICU_component_cache_debug}}")
+        endif()
+      endif()
+    endif()
+    unset(_ICU_component_upcase)
+    unset(_ICU_component_cache)
+    unset(_ICU_component_lib)
+    unset(_ICU_component_found)
+    unset(_ICU_imported_target)
+  endforeach()
+endif()
+
+if(ICU_DEBUG)
+  message(STATUS "--------FindICU.cmake results debug--------")
+  message(STATUS "ICU found: ${ICU_FOUND}")
+  message(STATUS "ICU_VERSION number: ${ICU_VERSION}")
+  message(STATUS "ICU_ROOT directory: ${ICU_ROOT}")
+  message(STATUS "ICU_INCLUDE_DIR directory: ${ICU_INCLUDE_DIR}")
+  message(STATUS "ICU_LIBRARIES: ${ICU_LIBRARIES}")
+
+  foreach(program IN LISTS icu_programs)
+    string(TOUPPER "${program}" program_upcase)
+    set(program_lib "ICU_${program_upcase}_EXECUTABLE")
+    message(STATUS "${program} program: ${${program_lib}}")
+    unset(program_upcase)
+    unset(program_lib)
+  endforeach()
+
+  foreach(component IN LISTS ICU_FIND_COMPONENTS)
+    string(TOUPPER "${component}" component_upcase)
+    set(component_lib "ICU_${component_upcase}_LIBRARIES")
+    set(component_found "${component_upcase}_FOUND")
+    message(STATUS "${component} library found: ${${component_found}}")
+    message(STATUS "${component} library: ${${component_lib}}")
+    unset(component_upcase)
+    unset(component_lib)
+    unset(component_found)
+  endforeach()
+  message(STATUS "----------------")
+endif()
+
+unset(icu_programs)
diff --git a/cmake/RunTest.cmake b/cmake/RunTest.cmake
new file mode 100644
index 0000000..2c68471
--- /dev/null
+++ b/cmake/RunTest.cmake
@@ -0,0 +1,88 @@
+# CMake tests for libtiff (common functionality)
+#
+# Copyright © 2015 Open Microscopy Environment / University of Dundee
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Permission to use, copy, modify, distribute, and sell this software and
+# its documentation for any purpose is hereby granted without fee, provided
+# that (i) the above copyright notices and this permission notice appear in
+# all copies of the software and related documentation, and (ii) the names of
+# Sam Leffler and Silicon Graphics may not be used in any advertising or
+# publicity relating to the software without the specific, prior written
+# permission of Sam Leffler and Silicon Graphics.
+#
+# THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND,
+# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY
+# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
+#
+# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
+# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
+# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF
+# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE
+# OF THIS SOFTWARE.
+
+# Run a test command, and print out any observed output discrepancies
+macro(test_command command)
+  file(MAKE_DIRECTORY "${OBSERVED_DIR}")
+
+  if(STDIN)
+    set(input INPUT_FILE "${STDIN}")
+  endif()
+
+  string(REGEX REPLACE ";" " " display_args "${ARGN}")
+  message(STATUS "Running ${command} ${display_args}")
+
+  set(ENV{XERCESC_NLS_HOME} "${NLS_HOME}")
+
+  execute_process(
+    COMMAND "${command}" ${ARGN}
+    RESULT_VARIABLE TEST_STATUS
+    ${input}
+    OUTPUT_FILE "${OBSERVED_DIR}/${NAME}.log"
+    ERROR_FILE "${OBSERVED_DIR}/${NAME}.log"
+    WORKING_DIRECTORY "${WORKDIR}")
+  if(TEST_STATUS AND NOT EXPECT_FAIL)
+    message(FATAL_ERROR "Returned failed status ${TEST_STATUS}")
+  endif()
+  if(NOT TEST_STATUS AND EXPECT_FAIL)
+    message(FATAL_ERROR "Unexpected success")
+  endif()
+
+  # Replace timings in output, and convert newlines for safe comparison
+  file(READ "${OBSERVED_DIR}/${NAME}.log" output)
+  string(REGEX REPLACE " *[0-9]+ *ms *" "{timing removed}" output "${output}")
+  file(WRITE "${OBSERVED_DIR}/${NAME}-mod.log" ${output})
+  configure_file("${OBSERVED_DIR}/${NAME}-mod.log" "${OBSERVED_DIR}/${NAME}.log"
+    @ONLY NEWLINE_STYLE UNIX)
+  configure_file("${EXPECTED_DIR}/${NAME}.log" "${OBSERVED_DIR}/${NAME}-exp.log"
+    @ONLY NEWLINE_STYLE UNIX)
+  file(REMOVE "${OBSERVED_DIR}/${NAME}-mod.log")
+
+  file(READ "${OBSERVED_DIR}/${NAME}.log" observed)
+  file(READ "${OBSERVED_DIR}/${NAME}-exp.log" expected)
+
+  # If the observed and expected logs differ, output a diff and fail
+  if(NOT observed STREQUAL expected)
+    if(DIFF)
+      execute_process(COMMAND ${DIFF} -u "${OBSERVED_DIR}/${NAME}-exp.log" "${OBSERVED_DIR}/${NAME}.log")
+    endif()
+    file(REMOVE "${OBSERVED_DIR}/${NAME}-exp.log")
+    message(FATAL_ERROR "Observed output does not match expected output")
+  endif()
+  file(REMOVE "${OBSERVED_DIR}/${NAME}-exp.log")
+endmacro()
+
+# Add the directory containing libxerces-c to the PATH (Windows only)
+if(WIN32)
+  get_filename_component(LIBXERCES_C_DIR "${LIBXERCES_C}" DIRECTORY)
+  file(TO_NATIVE_PATH "${LIBXERCES_C_DIR}" LIBXERCES_C_DIR)
+  set(ENV{PATH} "${LIBXERCES_C_DIR};$ENV{PATH}")
+endif()
+if(CYGWIN)
+  get_filename_component(LIBXERCES_C_DIR "${LIBXERCES_C}" DIRECTORY)
+  file(TO_NATIVE_PATH "${LIBXERCES_C_DIR}" LIBXERCES_C_DIR)
+  set(ENV{PATH} "${LIBXERCES_C_DIR}:$ENV{PATH}")
+endif()
+
+test_command("${PROGRAM}" ${ARGS})
diff --git a/cmake/XercesBool.cmake b/cmake/XercesBool.cmake
new file mode 100644
index 0000000..3cc49d2
--- /dev/null
+++ b/cmake/XercesBool.cmake
@@ -0,0 +1,38 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# bool type
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+int f(int  x){return 1;}
+int f(char x){return 1;}
+int f(bool x){return 1;}
+
+int main() {
+  bool b = true;
+  return f(b);
+}"
+  HAVE_BOOL)
+
+set(XERCES_NO_NATIVE_BOOL 0)
+if(NOT HAVE_BOOL)
+  set(XERCES_NO_NATIVE_BOOL 1)
+endif()
diff --git a/cmake/XercesConst.cmake b/cmake/XercesConst.cmake
new file mode 100644
index 0000000..fa78435
--- /dev/null
+++ b/cmake/XercesConst.cmake
@@ -0,0 +1,29 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# const keyword
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+int main() {
+  const char *s = \"Test\";
+  return 0;
+}"
+  HAVE_CONST)
diff --git a/cmake/XercesDLL.cmake b/cmake/XercesDLL.cmake
new file mode 100644
index 0000000..c6a7e28
--- /dev/null
+++ b/cmake/XercesDLL.cmake
@@ -0,0 +1,58 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Option for selection of shared or static libraries, exported as
+# cache variable
+
+set(BUILD_SHARED_LIBS ON CACHE BOOL "Build shared libraries")
+
+# Add a d postfix to Debug libraries on Windows
+
+if(MSVC)
+  set(CMAKE_DEBUG_POSTFIX "d")
+endif()
+
+# DLL export and import macros
+
+set(XERCES_PLATFORM_EXPORT)
+set(XERCES_PLATFORM_IMPORT)
+set(XERCES_DLL_EXPORT)
+set(XERCES_STATIC_LIBRARY)
+if(NOT BUILD_SHARED_LIBS)
+  set(XERCES_STATIC_LIBRARY 1)
+else()
+  if(WIN32)
+    set(XERCES_PLATFORM_EXPORT "__declspec(dllexport)")
+    set(XERCES_PLATFORM_IMPORT "__declspec(dllimport)")
+    set(XERCES_DLL_EXPORT 1)
+  endif()
+endif()
+
+# Versioning information
+
+file(STRINGS "${PROJECT_SOURCE_DIR}/version.incl" icu_verinfo
+  REGEX "^[^#].*=.*")
+
+foreach(item IN LISTS icu_verinfo)
+  string(REGEX REPLACE "^([^=]+)=(.*)"
+    "\\1" lib_key "${item}")
+  string(REGEX REPLACE "^([^=]+)=(.*)"
+    "\\2" lib_value "${item}")
+  set(LIB_${lib_key} "${lib_value}")
+endforeach()
diff --git a/cmake/XercesFileMgrSelection.cmake b/cmake/XercesFileMgrSelection.cmake
new file mode 100644
index 0000000..59037da
--- /dev/null
+++ b/cmake/XercesFileMgrSelection.cmake
@@ -0,0 +1,42 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# file manager
+
+set(xerces_filemgr_default "POSIX")
+if(WIN32)
+  set(xerces_filemgr_default "windows")
+endif()
+
+set(file-manager "${xerces_filemgr_default}" CACHE STRING "File manager")
+set(filemgr "${file-manager}")
+
+if(NOT file-manager STREQUAL "POSIX" AND NOT file-manager STREQUAL "windows")
+  message(FATAL_ERROR "Invalid file manager type \"${file-manager}\"")
+endif()
+
+set(XERCES_USE_FILEMGR_POSIX 0)
+set(XERCES_USE_FILEMGR_WINDOWS 0)
+
+if(file-manager STREQUAL "POSIX")
+  set(XERCES_USE_FILEMGR_POSIX 1)
+endif()
+if(file-manager STREQUAL "windows")
+  set(XERCES_USE_FILEMGR_WINDOWS 1)
+endif()
diff --git a/cmake/XercesFunctions.cmake b/cmake/XercesFunctions.cmake
new file mode 100644
index 0000000..125e64a
--- /dev/null
+++ b/cmake/XercesFunctions.cmake
@@ -0,0 +1,55 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# function checks
+
+include(CheckFunctionExists)
+
+check_function_exists(getcwd HAVE_GETCWD)
+check_function_exists(pathconf HAVE_PATHCONF)
+check_function_exists(realpath HAVE_REALPATH)
+check_function_exists(getaddrinfo HAVE_GETADDRINFO)
+check_function_exists(gethostbyaddr HAVE_GETHOSTBYADDR)
+check_function_exists(gethostbyname HAVE_GETHOSTBYNAME)
+check_function_exists(socket HAVE_SOCKET)
+check_function_exists(clock_gettime HAVE_CLOCK_GETTIME)
+check_function_exists(ftime HAVE_FTIME)
+check_function_exists(gettimeofday HAVE_GETTIMEOFDAY)
+check_function_exists(memmove HAVE_MEMMOVE)
+check_function_exists(memset HAVE_MEMSET)
+check_function_exists(nl_langinfo HAVE_NL_LANGINFO)
+check_function_exists(setlocale HAVE_SETLOCALE)
+check_function_exists(localeconv HAVE_LOCALECONV)
+check_function_exists(strcasecmp HAVE_STRCASECMP)
+check_function_exists(strncasecmp HAVE_STRNCASECMP)
+check_function_exists(stricmp HAVE_STRICMP)
+check_function_exists(strnicmp HAVE_STRNICMP)
+check_function_exists(strchr HAVE_STRCHR)
+check_function_exists(strdup HAVE_STRDUP)
+check_function_exists(strrchr HAVE_STRRCHR)
+check_function_exists(strstr HAVE_STRSTR)
+check_function_exists(strtol HAVE_STRTOL)
+check_function_exists(strtoul HAVE_STRTOUL)
+check_function_exists(towupper HAVE_TOWUPPER)
+check_function_exists(towlower HAVE_TOWLOWER)
+check_function_exists(mblen HAVE_MBLEN)
+check_function_exists(wcsupr HAVE_WCSUPR)
+check_function_exists(wcslwr HAVE_WCSLWR)
+check_function_exists(wcsnicmp HAVE_WCSNICMP)
+check_function_exists(wcsicmp HAVE_WCSICMP)
diff --git a/cmake/XercesICU.cmake b/cmake/XercesICU.cmake
new file mode 100644
index 0000000..aecde10
--- /dev/null
+++ b/cmake/XercesICU.cmake
@@ -0,0 +1,22 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Determine if ICU is available
+
+find_package(ICU COMPONENTS uc data)
diff --git a/cmake/XercesIconvConst.cmake b/cmake/XercesIconvConst.cmake
new file mode 100644
index 0000000..5148b47
--- /dev/null
+++ b/cmake/XercesIconvConst.cmake
@@ -0,0 +1,42 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# iconv const pointer
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+#include <iconv.h>
+
+int main(void) {
+  const char *fromPtr=0;
+  size_t     fromLen=0;
+  char       *toPtr=0;
+  size_t     toLen=0;
+  iconv_t    cv=0;
+  iconv(cv, &fromPtr, &fromLen, &toPtr, &toLen);
+  return 0;
+}"
+  ICONV_USES_CONST_POINTER)
+
+if(ICONV_USES_CONST_POINTER)
+  set(ICONV_USES_CONST_POINTER 1)
+else()
+  set(ICONV_USES_CONST_POINTER 0)
+endif()
diff --git a/cmake/XercesIncludes.cmake b/cmake/XercesIncludes.cmake
new file mode 100644
index 0000000..88ba63a
--- /dev/null
+++ b/cmake/XercesIncludes.cmake
@@ -0,0 +1,53 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# include checks
+
+include(CheckIncludeFileCXX)
+
+check_include_file_cxx(arpa/inet.h                 HAVE_ARPA_INET_H)
+check_include_file_cxx(dlfcn.h                     HAVE_DLFCN_H)
+check_include_file_cxx(fcntl.h                     HAVE_FCNTL_H)
+check_include_file_cxx(float.h                     HAVE_FLOAT_H)
+check_include_file_cxx(langinfo.h                  HAVE_LANGINFO_H)
+check_include_file_cxx(limits.h                    HAVE_LIMITS_H)
+check_include_file_cxx(locale.h                    HAVE_LOCALE_H)
+check_include_file_cxx(memory.h                    HAVE_MEMORY_H)
+check_include_file_cxx(netdb.h                     HAVE_NETDB_H)
+check_include_file_cxx(netinet/in.h                HAVE_NETINET_IN_H)
+check_include_file_cxx(nl_types.h                  HAVE_NL_TYPES_H)
+check_include_file_cxx(stdbool.h                   HAVE_STDBOOL_H)
+check_include_file_cxx(stddef.h                    HAVE_STDDEF_H)
+check_include_file_cxx(stdlib.h                    HAVE_STDLIB_H)
+check_include_file_cxx(string.h                    HAVE_STRING_H)
+check_include_file_cxx(strings.h                   HAVE_STRINGS_H)
+check_include_file_cxx(sys/param.h                 HAVE_SYS_PARAM_H)
+check_include_file_cxx(sys/socket.h                HAVE_SYS_SOCKET_H)
+check_include_file_cxx(sys/stat.h                  HAVE_SYS_STAT_H)
+check_include_file_cxx(sys/time.h                  HAVE_SYS_TIME_H)
+check_include_file_cxx(sys/timeb.h                 HAVE_SYS_TIMEB_H)
+check_include_file_cxx(sys/types.h                 HAVE_SYS_TYPES_H)
+check_include_file_cxx(unistd.h                    HAVE_UNISTD_H)
+check_include_file_cxx(wchar.h                     HAVE_WCHAR_H)
+check_include_file_cxx(wctype.h                    HAVE_WCTYPE_H)
+check_include_file_cxx(endian.h                    HAVE_ENDIAN_H)
+check_include_file_cxx(machine/endian.h            HAVE_MACHINE_ENDIAN_H)
+check_include_file_cxx(arpa/nameser_compat.h       HAVE_ARPA_NAMESER_COMPAT_H)
+
+set(XERCES_HAVE_SYS_TYPES_H ${HAVE_SYS_TYPES_H})
diff --git a/cmake/XercesInline.cmake b/cmake/XercesInline.cmake
new file mode 100644
index 0000000..2ea6597
--- /dev/null
+++ b/cmake/XercesInline.cmake
@@ -0,0 +1,48 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# inline keyword
+
+include(CheckCXXSourceCompiles)
+
+unset(inline_keyword)
+set(NEED_INLINE "0")
+
+# Inspired from /usr/share/autoconf/autoconf/c.m4
+foreach(test_keyword "inline" "__inline__" "__inline")
+  set(CMAKE_REQUIRED_DEFINITIONS_SAVE ${CMAKE_REQUIRED_DEFINITIONS})
+  set(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS}
+    "-Dinline=${test_keyword}")
+  check_cxx_source_compiles("
+        typedef int foo_t;
+        static inline foo_t static_foo() {return 0;}
+        foo_t foo(){return 0;}
+        int main(int argc, char *argv[]) {return 0;}"
+    CXX_HAS_${test_keyword})
+  set(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS_SAVE})
+  if(CXX_HAS_${test_keyword})
+    if(NOT test_keyword STREQUAL "inline")
+      set(NEED_INLINE 1)
+    else()
+      set(HAVE_INLINE 1)
+    endif()
+    set(inline_keyword "${test_keyword}")
+    break()
+  endif()
+endforeach()
diff --git a/cmake/XercesIntTypes.cmake b/cmake/XercesIntTypes.cmake
new file mode 100644
index 0000000..47079cb
--- /dev/null
+++ b/cmake/XercesIntTypes.cmake
@@ -0,0 +1,142 @@
+
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Integer type checks.
+
+include(CheckIncludeFileCXX)
+include(CheckTypeSize)
+
+check_include_file_cxx(cstdint  HAVE_CSTDINT)
+check_include_file_cxx(stdint.h HAVE_STDINT_H)
+check_include_file_cxx(inttypes.h HAVE_INTTYPES_H)
+set(XERCES_HAVE_CSTDINT ${HAVE_CSTDINT})
+set(XERCES_HAVE_STDINT_H ${HAVE_STDINT_H})
+set(XERCES_HAVE_INTTYPES_H ${HAVE_INTTYPES_H})
+
+# Standard typedefs
+set(CMAKE_EXTRA_INCLUDE_FILES_SAVE ${CMAKE_EXTRA_INCLUDE_FILES})
+set(CMAKE_EXTRA_INCLUDE_FILES ${CMAKE_EXTRA_INCLUDE_FILES} "stddef.h")
+check_type_size("off_t" SIZEOF_OFF_T)
+check_type_size("size_t" SIZEOF_SIZE_T)
+check_type_size("ssize_t" SIZEOF_SSIZE_T)
+check_type_size("wchar_t" SIZEOF_WCHAR_T)
+set(CMAKE_EXTRA_INCLUDE_FILES ${CMAKE_EXTRA_INCLUDE_FILES_SAVE})
+set(HAVE_OFF_T ${SIZEOF_OFF_T})
+set(HAVE_SIZE_T ${SIZEOF_SIZE_T})
+set(HAVE_SSIZE_T ${SSIZEOF_SSIZE_T})
+set(HAVE_WCHAR_T ${WCHAROF_WCHAR_T})
+if(SIZEOF_SIZE_T)
+  set(XERCES_SIZE_T size_t)
+else()
+  set(XERCES_SIZE_T unsigned long)
+endif()
+if(SIZEOF_SSIZE_T)
+  set(XERCES_SSIZE_T ssize_t)
+else()
+  set(XERCES_SSIZE_T long)
+endif()
+
+# Check type sizes
+check_type_size("short"              SIZEOF_SHORT)
+check_type_size("unsigned short"     SIZEOF_UNSIGNED_SHORT)
+check_type_size("int"                SIZEOF_INT)
+check_type_size("unsigned int"       SIZEOF_UNSIGNED_INT)
+check_type_size("long"               SIZEOF_LONG)
+check_type_size("unsigned long"      SIZEOF_UNSIGNED_LONG)
+check_type_size("long long"          SIZEOF_LONG_LONG)
+check_type_size("unsigned long long" SIZEOF_UNSIGNED_LONG_LONG)
+check_type_size("__int64"            SIZEOF___INT64)
+check_type_size("unsigned __int64"   SIZEOF_UNSIGNED__INT64)
+check_type_size("unsigned char *"    SIZEOF_UNSIGNED_CHAR_P)
+
+# If this failed, set size to zero to match autoconf
+if(NOT SIZEOF___INT64)
+  set(SIZEOF___INT64 0)
+endif()
+if(NOT SIZEOF_UNSIGNED__INT64)
+  set(SIZEOF_UNSIGNED__INT64 0)
+endif()
+
+if(HAVE_CSTDINT OR HAVE_STDINT_H OR HAVE_INTTYPES_H)
+  # Use standard sized types if possible
+  set(XERCES_S16BIT_INT "int16_t")
+  set(XERCES_U16BIT_INT "uint16_t")
+  set(XERCES_S32BIT_INT "int32_t")
+  set(XERCES_U32BIT_INT "uint32_t")
+  set(XERCES_S64BIT_INT "int64_t")
+  set(XERCES_U64BIT_INT "uint64_t")
+else()
+  # Fallback to basic language types
+  if(SIZEOF_SIGNED_SHORT EQUAL 2)
+    set(XERCES_S16BIT_INT "signed short")
+  elseif(SIZEOF_INT EQUAL 2)
+    set(XERCES_S16BIT_INT "int")
+  else()
+    message(FATAL_ERROR "Couldn't find a signed 16-bit type")
+  endif()
+
+  if(SIZEOF_UNSIGNED_SHORT EQUAL 2)
+    set(XERCES_U16BIT_INT "unsigned short")
+  elseif(SIZEOF_UNSIGNED_INT EQUAL 2)
+    set(XERCES_U16BIT_INT "unsigned int")
+  else()
+    message(FATAL_ERROR "Couldn't find an unsigned 16-bit type")
+  endif()
+
+  if(SIZEOF_SIGNED_INT EQUAL 4)
+    set(XERCES_S32BIT_INT "signed int")
+  elseif(SIZEOF_SIGNED_LONG EQUAL 4)
+    set(XERCES_S32BIT_INT "signed long")
+  else()
+    message(FATAL_ERROR "Couldn't find a signed 32-bit type")
+  endif()
+
+  if(SIZEOF_UNSIGNED_INT EQUAL 4)
+    set(XERCES_U32BIT_INT "unsigned int")
+  elseif(SIZEOF_UNSIGNED_LONG EQUAL 4)
+    set(XERCES_U32BIT_INT "unsigned long")
+  else()
+    message(FATAL_ERROR "Couldn't find an unsigned 32-bit type")
+  endif()
+
+  if(SIZEOF_INT EQUAL 8)
+    set(XERCES_S64BIT_INT "int")
+  elseif(SIZEOF_LONG EQUAL 8)
+    set(XERCES_S64BIT_INT "long")
+  elseif(SIZEOF_LONG_LONG EQUAL 8)
+    set(XERCES_S64BIT_INT "long long")
+  elseif(SIZEOF___INT64 EQUAL 8)
+    set(XERCES_S64BIT_INT "__int64")
+  else()
+    message(FATAL_ERROR "Couldn't find a signed 64-bit type")
+  endif()
+
+  if(SIZEOF_UNSIGNED_INT EQUAL 8)
+    set(XERCES_U64BIT_INT "unsigned int")
+  elseif(SIZEOF_UNSIGNED_LONG EQUAL 8)
+    set(XERCES_U64BIT_INT "unsigned long")
+  elseif(SIZEOF_UNSIGNED_LONG_LONG EQUAL 8)
+    set(XERCES_U64BIT_INT "unsigned long long")
+  elseif(SIZEOF_UNSIGNED__INT64 EQUAL 8)
+    set(XERCES_U64BIT_INT "unsigned __int64")
+  else()
+    message(FATAL_ERROR "Couldn't find an unsigned 64-bit type")
+  endif()
+endif()
diff --git a/cmake/XercesLFS.cmake b/cmake/XercesLFS.cmake
new file mode 100644
index 0000000..8835d93
--- /dev/null
+++ b/cmake/XercesLFS.cmake
@@ -0,0 +1,27 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Large file support
+
+if (UNIX)
+  # This might not catch every possibility catered for by
+  # AC_SYS_LARGEFILE.
+  add_definitions(-D_FILE_OFFSET_BITS=64)
+  set(FILE_OFFSET_BITS 64)
+endif()
diff --git a/cmake/XercesLString.cmake b/cmake/XercesLString.cmake
new file mode 100644
index 0000000..81975cb
--- /dev/null
+++ b/cmake/XercesLString.cmake
@@ -0,0 +1,31 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Wide string literals
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+int main() {
+  const wchar_t* s=L\"wide string\";
+  return 0;
+}"
+  HAVE_LSTRING)
+
+set(XERCES_LSTRSUPPORT ${HAVE_LSTRING})
diff --git a/cmake/XercesMsgLoaderSelection.cmake b/cmake/XercesMsgLoaderSelection.cmake
new file mode 100644
index 0000000..f0d9b0d
--- /dev/null
+++ b/cmake/XercesMsgLoaderSelection.cmake
@@ -0,0 +1,63 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# message loader selection
+
+# message loaders in order of preference
+list(APPEND msgloaders inmemory)
+
+if(ICU_FOUND)
+  list(APPEND msgloaders icu)
+endif()
+
+include(CheckIncludeFileCXX)
+include(CheckFunctionExists)
+check_include_file_cxx(nl_types.h HAVE_NLTYPES_H)
+check_function_exists(catopen HAVE_CATOPEN)
+check_function_exists(catclose HAVE_CATCLOSE)
+check_function_exists(catgets HAVE_CATGETS)
+if(HAVE_NLTYPES_H AND HAVE_CATOPEN AND HAVE_CATCLOSE AND HAVE_CATGETS)
+  set(iconv_available 1)
+endif()
+if(iconv_available)
+  list(APPEND msgloaders iconv)
+endif()
+
+string(REPLACE ";" "|" msgloader_help "${msgloaders}")
+list(GET msgloaders 0 xerces_msgloader_default)
+set(message-loader "${xerces_msgloader_default}" CACHE STRING "Message loader (${msgloader_help})")
+set(msgloader "${message-loader}")
+
+list(FIND msgloaders "${msgloader}" msgloader_found)
+if(msgloader_found EQUAL -1)
+  message(FATAL_ERROR "${msgloader} message loader unavailable")
+endif()
+
+set(XERCES_USE_MSGLOADER_ICU 0)
+set(XERCES_USE_MSGLOADER_ICONV 0)
+set(XERCES_USE_MSGLOADER_INMEMORY 0)
+if(msgloader STREQUAL "icu")
+  set(XERCES_USE_MSGLOADER_ICU 1)
+elseif(msgloader STREQUAL "iconv")
+  set(XERCES_USE_MSGLOADER_ICONV 1)
+elseif(msgloader STREQUAL "inmemory")
+  set(XERCES_USE_MSGLOADER_INMEMORY 1)
+else()
+  message(FATAL_ERROR "Invalid message loader: \"${msgloader}\"")
+endif()
diff --git a/cmake/XercesMutexMgrSelection.cmake b/cmake/XercesMutexMgrSelection.cmake
new file mode 100644
index 0000000..26a2a01
--- /dev/null
+++ b/cmake/XercesMutexMgrSelection.cmake
@@ -0,0 +1,61 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# mutexmgr selection
+
+option(threads "Threading support" ON)
+
+if(threads)
+  find_package(Threads)
+
+  if(TARGET Threads::Threads)
+    if(WIN32)
+      list(APPEND mutexmgrs windows)
+    else()
+      list(APPEND mutexmgrs POSIX)
+      set(HAVE_PTHREAD 1)
+    endif()
+  endif()
+else()
+  set(mutexmgr nothreads)
+endif(threads)
+list(APPEND mutexmgrs nothreads)
+
+string(REPLACE ";" "|" mutexmgr_help "${mutexmgrs}")
+list(GET mutexmgrs 0 xerces_mutexmgr_default)
+set(mutex-manager "${xerces_mutexmgr_default}" CACHE STRING "Mutex manager (${mutexmgr_help})")
+set(mutexmgr "${mutex-manager}")
+
+list(FIND mutexmgrs "${mutexmgr}" mutexmgr_found)
+if(mutexmgr_found EQUAL -1)
+  message(FATAL_ERROR "${mutexmgr} mutexmgr unavailable")
+endif()
+
+set(XERCES_USE_MUTEXMGR_POSIX 0)
+set(XERCES_USE_MUTEXMGR_WINDOWS 0)
+set(XERCES_USE_MUTEXMGR_NOTHREADS 0)
+if(mutexmgr STREQUAL "POSIX")
+  set(XERCES_USE_MUTEXMGR_POSIX 1)
+elseif(mutexmgr STREQUAL "windows")
+  set(XERCES_USE_MUTEXMGR_WINDOWS 1)
+elseif(mutexmgr STREQUAL "nothreads")
+  set(XERCES_USE_MUTEXMGR_NOTHREADS 1)
+else()
+  message(FATAL_ERROR "Invalid mutex manager: \"${mutexmgr}\"")
+endif()
diff --git a/cmake/XercesNamespaces.cmake b/cmake/XercesNamespaces.cmake
new file mode 100644
index 0000000..1acbd79
--- /dev/null
+++ b/cmake/XercesNamespaces.cmake
@@ -0,0 +1,37 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# namespace keyword
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+namespace Outer {
+  namespace Inner {
+    int i = 0;
+  }
+}
+
+int main() {
+  using namespace Outer::Inner;
+  return i;
+}"
+  HAVE_NAMESPACES)
+
+set(XERCES_HAS_CPP_NAMESPACE ${HAVE_NAMESPACES})
diff --git a/cmake/XercesNetAccessorSelection.cmake b/cmake/XercesNetAccessorSelection.cmake
new file mode 100644
index 0000000..42644a7
--- /dev/null
+++ b/cmake/XercesNetAccessorSelection.cmake
@@ -0,0 +1,96 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# netaccessor selection
+
+option(network "Network support" ON)
+
+if(network)
+  find_library(SOCKET_LIBRARY socket)
+  find_library(NSL_LIBRARY nsl)
+
+  # netaccessors in order of preference
+
+  # CURL
+
+  # Requires select() which is UNIX only
+  if(UNIX)
+    find_package(CURL COMPONENTS uc data)
+    if(CURL_FOUND)
+      list(APPEND netaccessors curl)
+    endif()
+  endif()
+
+  # Windows
+
+  if(WIN32)
+    check_include_file_cxx(winsock2.h HAVE_WINSOCK2_H)
+    if(HAVE_WINSOCK2_H)
+      set(winsock_available 1)
+      list(APPEND netaccessors winsock)
+    endif()
+  endif()
+
+  # socket
+
+  check_include_file_cxx(sys/socket.h HAVE_SYS_SOCKET_H)
+  if(HAVE_SYS_SOCKET_H)
+    list(APPEND netaccessors socket)
+  endif()
+
+  # MacOS X CFURL
+
+  set(cfurl_available 0)
+  if(CMAKE_HOST_APPLE)
+    check_include_file_cxx(CoreServices/CoreServices.h HAVE_CORESERVICES_CORESERVICES_H)
+  find_library(CORE_SERVICES_LIBRARY CoreServices )
+    if (HAVE_CORESERVICES_CORESERVICES_H AND CORE_SERVICES_LIBRARY)
+      list(APPEND netaccessors cfurl)
+      set(cfurl 1)
+    endif()
+  endif()
+
+  string(REPLACE ";" "|" netaccessor_help "${netaccessors}")
+  list(GET netaccessors 0 xerces_netaccessor_default)
+  set(network-accessor "${xerces_netaccessor_default}" CACHE STRING "Network accessor (${netaccessor_help})")
+  set(netaccessor "${network-accessor}")
+
+  list(FIND netaccessors "${netaccessor}" netaccessor_found)
+  if(netaccessor_found EQUAL -1)
+    message(FATAL_ERROR "${netaccessor} netaccessor unavailable")
+  endif()
+
+  set(XERCES_USE_NETACCESSOR_CURL 0)
+  set(XERCES_USE_NETACCESSOR_SOCKET 0)
+  set(XERCES_USE_NETACCESSOR_CFURL 0)
+  set(XERCES_USE_NETACCESSOR_WINSOCK 0)
+  if(netaccessor STREQUAL "curl")
+    set(XERCES_USE_NETACCESSOR_CURL 1)
+  elseif(netaccessor STREQUAL "socket")
+    set(XERCES_USE_NETACCESSOR_SOCKET 1)
+  elseif(netaccessor STREQUAL "cfurl")
+    set(XERCES_USE_NETACCESSOR_CFURL 1)
+  elseif(netaccessor STREQUAL "winsock")
+    set(XERCES_USE_NETACCESSOR_WINSOCK 1)
+  else()
+    message(FATAL_ERROR "Invalid netaccessor: \"${netaccessor}\"")
+  endif()
+else()
+  set(netaccessor OFF)
+endif(network)
diff --git a/cmake/XercesOperatorDelete.cmake b/cmake/XercesOperatorDelete.cmake
new file mode 100644
index 0000000..0ab9d1f
--- /dev/null
+++ b/cmake/XercesOperatorDelete.cmake
@@ -0,0 +1,43 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Check whether the compiler chokes on a placement operator delete
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+#include <stdlib.h>
+
+class XMemory {
+public:
+  void* operator new(size_t s) { return 0; }
+  void* operator new(size_t s, void* ptr) { return 0; }
+  void operator delete(void* p) {}
+  void operator delete(void* p, void* ptr) {}
+};
+
+int main() {
+  return 0;
+}"
+  CXX_matching-delete-operator)
+
+set(XERCES_NO_MATCHING_DELETE_OPERATOR 0)
+if(NOT CXX_matching-delete-operator)
+  set(XERCES_NO_MATCHING_DELETE_OPERATOR 1)
+endif()
diff --git a/cmake/XercesPathDelimiters.cmake b/cmake/XercesPathDelimiters.cmake
new file mode 100644
index 0000000..36804d6
--- /dev/null
+++ b/cmake/XercesPathDelimiters.cmake
@@ -0,0 +1,35 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# path delimiters
+
+set(path_delims /)
+
+set(xerces_path_delimiter_backslash_default OFF)
+if(WIN32)
+  set(xerces_path_delimiter_backslash_default ON)
+endif()
+
+option(path-delimiter-backslash "Accept backslash as a path delimiter" ${xerces_path_delimiter_backslash_default})
+
+set(XERCES_PATH_DELIMITER_BACKSLASH 0)
+if(path-delimiter-backslash)
+  set(path_delims "${path_delims}\\")
+  set(XERCES_PATH_DELIMITER_BACKSLASH 1)
+endif()
diff --git a/cmake/XercesPathMax.cmake b/cmake/XercesPathMax.cmake
new file mode 100644
index 0000000..49c44a3
--- /dev/null
+++ b/cmake/XercesPathMax.cmake
@@ -0,0 +1,30 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# PATH_MAX
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+#include <limits.h>
+int main(void) {
+  char dummy[PATH_MAX];
+  return 0;
+}"
+  HAVE_PATH_MAX)
diff --git a/cmake/XercesSSE2.cmake b/cmake/XercesSSE2.cmake
new file mode 100644
index 0000000..0f66560
--- /dev/null
+++ b/cmake/XercesSSE2.cmake
@@ -0,0 +1,103 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# SSE2 support
+
+include(CheckCXXSourceCompiles)
+
+option(sse2 "SSE2 support" ON)
+if(sse2)
+  set(CMAKE_CXX_FLAGS_SAVE "${CMAKE_CXX_FLAGS}")
+  if (CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+    set(CMAKE_CXX_FLAGS_SAVE "${CMAKE_CXX_FLAGS}")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse2")
+    check_cxx_source_compiles("
+#include <emmintrin.h>
+
+int main() {
+  __m128i one;
+  return 0;
+}"
+      CXX_NEEDS_msse2)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_SAVE}")
+    if(CXX_NEEDS_msse2)
+      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -msse2")
+    endif()
+  endif()
+
+    check_cxx_source_compiles("
+#include <intrin.h>
+
+int main() {
+  return 0;
+}"
+    XERCES_HAVE_INTRIN_H)
+    check_cxx_source_compiles("
+#include <emmintrin.h>
+
+int main() {
+  return 0;
+}"
+    XERCES_HAVE_EMMINTRIN_H)
+    check_cxx_source_compiles("
+#include <cpuid.h>
+
+int main() {
+  return 0;
+}"
+    HAVE_CPUID_H)
+    check_cxx_source_compiles("
+#include <intrin.h>
+
+int main() {
+  int CPUInfo[4];
+  __cpuid(CPUInfo, 1);
+  return 0;
+}"
+    XERCES_HAVE_CPUID_INTRINSIC)
+    check_cxx_source_compiles("
+#include <cpuid.h>
+
+int main() {
+  unsigned int eax, ebx, ecx, edx;
+  __get_cpuid (1, &eax, &ebx, &ecx, &edx);
+  return 0;
+}"
+    XERCES_HAVE_GETCPUID)
+    check_cxx_source_compiles("
+#include <emmintrin.h>
+
+int main() {
+  __m128i* one=(__m128i*)_mm_malloc(4, 16);
+  __m128i* two=(__m128i*)_mm_malloc(4, 16);
+  __m128i xmm1 = _mm_load_si128(one);
+  __m128i xmm2 = _mm_load_si128(two);
+  __m128i xmm3 = _mm_or_si128(xmm1, xmm2);
+  _mm_store_si128(one, xmm3);
+  _mm_free(one);
+  _mm_free(two);
+  return 0;
+}"
+    XERCES_HAVE_SSE2_INTRINSIC)
+
+  # SSE2 not functional; restore flags
+  if(NOT XERCES_HAVE_SSE2_INTRINSIC)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS_SAVE}")
+  endif()
+endif()
diff --git a/cmake/XercesStdLibs.cmake b/cmake/XercesStdLibs.cmake
new file mode 100644
index 0000000..c898d03
--- /dev/null
+++ b/cmake/XercesStdLibs.cmake
@@ -0,0 +1,45 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# C++ standard library includes
+
+include(CheckCXXSourceCompiles)
+include(XercesNamespaces)
+
+set(CMAKE_REQUIRED_DEFINITIONS_SAVE ${CMAKE_REQUIRED_DEFINITIONS})
+if(HAVE_NAMESPACES)
+  set(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS} -DHAVE_NAMESPACES)
+endif()
+
+check_cxx_source_compiles("
+#include <map>
+#include <iomanip>
+#include <cmath>
+#ifdef HAVE_NAMESPACES
+using namespace std;
+#endif
+
+int main() {
+  return 0;
+}"
+  HAVE_STD_LIBS)
+
+set(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS_SAVE})
+
+set(XERCES_NEW_IOSTREAMS ${HAVE_STD_LIBS})
diff --git a/cmake/XercesStdNamespace.cmake b/cmake/XercesStdNamespace.cmake
new file mode 100644
index 0000000..fc68fb3
--- /dev/null
+++ b/cmake/XercesStdNamespace.cmake
@@ -0,0 +1,33 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# C++ standard library std:: namespace
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+#include <iostream>
+std::istream& is = std::cin;
+
+int main() {
+  return 0;
+}"
+  HAVE_STD_NAMESPACE)
+
+set(XERCES_STD_NAMESPACE ${HAVE_STD_NAMESPACE})
diff --git a/cmake/XercesTest.cmake b/cmake/XercesTest.cmake
new file mode 100644
index 0000000..2cb488c
--- /dev/null
+++ b/cmake/XercesTest.cmake
@@ -0,0 +1,80 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# test macros
+
+find_program(DIFF_EXECUTABLE diff)
+
+set(xerces_test_dir "${CMAKE_CURRENT_LIST_DIR}")
+
+macro(add_generic_xerces_test name)
+  set(options EXPECT_FAIL)
+  set(oneValueArgs WORKING_DIRECTORY OBSERVED_DIR EXPECTED_DIR STDIN)
+  set(multiValueArgs COMMAND)
+  cmake_parse_arguments(AXT "${options}" "${oneValueArgs}"
+    "${multiValueArgs}" ${ARGN})
+
+  list(GET AXT_COMMAND 0 command)
+  list(REMOVE_AT AXT_COMMAND 0)
+
+  if(NOT AXT_WORKING_DIRECTORY)
+    set(AXT_WORKING_DIRECTORY "${PROJECT_SOURCE_DIR}/samples/data")
+  endif()
+
+  unset(xerces_test_extra_args)
+  if(WIN32)
+    list(APPEND xerces_test_extra_args "-DWIN32=${WIN32}")
+  endif()
+  if(CYGWIN)
+    list(APPEND xerces_test_extra_args "-DCYGWIN=${CYGWIN}")
+  endif()
+
+  add_test(NAME "${name}"
+    COMMAND "${CMAKE_COMMAND}"
+    "-DNAME=${name}"
+    "-DPROGRAM=$<TARGET_FILE:${command}>"
+    "-DARGS=${AXT_COMMAND}"
+    "-DLIBXERCES_C=$<TARGET_FILE:xerces-c>"
+    "-DWORKDIR=${AXT_WORKING_DIRECTORY}"
+    "-DSTDIN=${AXT_STDIN}"
+    "-DEXPECT_FAIL=${AXT_EXPECT_FAIL}"
+    "-DOBSERVED_DIR=${CMAKE_CURRENT_BINARY_DIR}/observed"
+    "-DEXPECTED_DIR=${CMAKE_CURRENT_SOURCE_DIR}/expected"
+    "-DDIFF=${DIFF_EXECUTABLE}"
+    "-DNLS_HOME=${PROJECT_BINARY_DIR}/src"
+    ${xerces_test_extra_args}
+    -P "${xerces_test_dir}/RunTest.cmake"
+    )
+endmacro()
+
+macro(add_xerces_test name)
+  add_generic_xerces_test(
+    ${name}
+    OBSERVED_DIR "${PROJECT_BINARY_DIR}/tests/observed"
+    EXPECTED_DIR "${PROJECT_SOURCE_DIR}/tests/expected"
+    ${ARGN})
+endmacro()
+
+macro(add_xerces_sample_test name)
+  add_generic_xerces_test(
+    ${name}
+    OBSERVED_DIR "${PROJECT_BINARY_DIR}/samples/observed"
+    EXPECTED_DIR "${PROJECT_SOURCE_DIR}/samples/expected"
+    ${ARGN})
+endmacro()
diff --git a/cmake/XercesTranscoderSelection.cmake b/cmake/XercesTranscoderSelection.cmake
new file mode 100644
index 0000000..614b673
--- /dev/null
+++ b/cmake/XercesTranscoderSelection.cmake
@@ -0,0 +1,117 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# transcoder selection
+
+# transcoders in order of preference
+
+# ICU
+
+if(ICU_FOUND)
+  list(APPEND transcoders icu)
+endif()
+
+# MacOS
+
+set(macosunicodeconverter_available 0)
+if(CMAKE_HOST_APPLE)
+  check_include_file_cxx(CoreServices/CoreServices.h HAVE_CORESERVICES_CORESERVICES_H)
+  find_library(CORE_SERVICES_LIBRARY CoreServices )
+  if (HAVE_CORESERVICES_CORESERVICES_H AND CORE_SERVICES_LIBRARY)
+    list(APPEND transcoders macosunicodeconverter)
+    set(macosunicodeconverter_available 1)
+  endif()
+endif()
+
+# GNU iconv
+
+check_include_file_cxx(iconv.h HAVE_ICONV_H)
+check_include_file_cxx(wchar.h HAVE_WCHAR_H)
+check_include_file_cxx(string.h HAVE_STRING_H)
+check_include_file_cxx(stdlib.h HAVE_STDLIB_H)
+check_include_file_cxx(stdio.h HAVE_STDIO_H)
+check_include_file_cxx(ctype.h HAVE_CTYPE_H)
+check_include_file_cxx(locale.h HAVE_LOCALE_H)
+check_include_file_cxx(errno.h HAVE_ERRNO_H)
+check_include_file_cxx(endian.h HAVE_ENDIAN_H)
+check_include_file_cxx(machine/endian.h HAVE_MACHINE_ENDIAN_H)
+check_include_file_cxx(arpa/nameser_compat.h HAVE_ARPA_NAMESER_COMPAT_H)
+check_function_exists(iconv_open HAVE_ICONV_OPEN)
+check_function_exists(iconv_close HAVE_ICONV_CLOSE)
+check_function_exists(iconv HAVE_ICONV)
+
+set(gnuiconv_available 0)
+if(HAVE_ICONV_H AND HAVE_WCHAR_H AND HAVE_STRING_H AND HAVE_STDLIB_H AND
+    HAVE_STDIO_H AND HAVE_CTYPE_H AND HAVE_LOCALE_H AND HAVE_ERRNO_H)
+  if (HAVE_ENDIAN_H OR HAVE_MACHINE/ENDIAN_H OR HAVE_ARPA/NAMESER_COMPAT_H)
+    if(HAVE_ICONV_OPEN AND HAVE_ICONV_CLOSE AND HAVE_ICONV)
+      set(gnuiconv_available 1)
+      list(APPEND transcoders gnuiconv)
+    endif()
+  endif()
+endif()
+
+# Windows
+
+if(WIN32)
+  set(windows_available 1)
+  list(APPEND transcoders windows)
+endif()
+
+# iconv
+
+check_include_file_cxx(wchar.h HAVE_WCHAR_H)
+check_function_exists(mblen HAVE_MBLEN)
+check_function_exists(wcstombs HAVE_WCSTOMBS)
+check_function_exists(mbstowcs HAVE_MBSTOWCS)
+
+set(iconv_available 0)
+if(HAVE_WCHAR_H AND HAVE_MBLEN AND HAVE_WCSTOMBS AND HAVE_MBSTOWCS)
+  set(iconv_available 1)
+  list(APPEND transcoders iconv)
+endif()
+
+string(REPLACE ";" "|" transcoder_help "${transcoders}")
+list(GET transcoders 0 xerces_transcoder_default)
+set(transcoder "${xerces_transcoder_default}" CACHE STRING "Transcoder (${transcoder_help})")
+set(transcoder "${transcoder}")
+
+list(FIND transcoders "${transcoder}" transcoder_found)
+if(transcoder_found EQUAL -1)
+  message(FATAL_ERROR "${transcoder} transcoder unavailable")
+endif()
+
+set(XERCES_USE_TRANSCODER_ICU 0)
+set(XERCES_USE_TRANSCODER_ICONV 0)
+set(XERCES_USE_TRANSCODER_GNUICONV 0)
+set(XERCES_USE_TRANSCODER_MACOSUNICODECONVERTER 0)
+set(XERCES_USE_TRANSCODER_WINDOWS 0)
+if(transcoder STREQUAL "icu")
+  set(XERCES_USE_TRANSCODER_ICU 1)
+elseif(transcoder STREQUAL "iconv")
+  set(XERCES_USE_TRANSCODER_ICONV 1)
+elseif(transcoder STREQUAL "gnuiconv")
+  set(XERCES_USE_TRANSCODER_GNUICONV 1)
+elseif(transcoder STREQUAL "macosunicodeconverter")
+  set(XERCES_USE_TRANSCODER_MACOSUNICODECONVERTER 1)
+elseif(transcoder STREQUAL "windows")
+  set(XERCES_USE_TRANSCODER_WINDOWS 1)
+else()
+  message(FATAL_ERROR "Invalid transcoder: \"${transcoder}\"")
+endif()
diff --git a/cmake/XercesVolatile.cmake b/cmake/XercesVolatile.cmake
new file mode 100644
index 0000000..6029fe6
--- /dev/null
+++ b/cmake/XercesVolatile.cmake
@@ -0,0 +1,29 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# volatile keyword
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+int main() {
+  volatile int i = 1;
+  return 0;
+}"
+  HAVE_VOLATILE)
diff --git a/cmake/XercesWChar.cmake b/cmake/XercesWChar.cmake
new file mode 100644
index 0000000..3972ed6
--- /dev/null
+++ b/cmake/XercesWChar.cmake
@@ -0,0 +1,53 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Wide character functions
+
+include(CheckCXXSourceCompiles)
+
+check_cxx_source_compiles("
+#include <wchar.h>
+int main(void) {
+  mbstate_t st;
+  mbrlen( \"t\", 5, &st );
+  return 0;
+}"
+  HAVE_MBRLEN)
+
+check_cxx_source_compiles("
+#include <wchar.h>
+int main(void) {
+  mbstate_t st;
+  char buffer[2];
+  const wchar_t* src=0;
+  wcsrtombs(buffer, &src, 2, &st);
+  return 0;
+}"
+  HAVE_WCSRTOMBS)
+
+check_cxx_source_compiles("
+#include <wchar.h>
+int main(void) {
+  mbstate_t st;
+  wchar_t buffer[2];
+  const char* src=0;
+  mbsrtowcs(buffer, &src, 2, &st);
+  return 0;
+}"
+  HAVE_MBSRTOWCS)
diff --git a/cmake/XercesWarnings.cmake b/cmake/XercesWarnings.cmake
new file mode 100644
index 0000000..91f9dfd
--- /dev/null
+++ b/cmake/XercesWarnings.cmake
@@ -0,0 +1,79 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# compiler warnings
+
+# These are annoyingly verbose, produce false positives or don't work
+# nicely with all supported compiler versions, so are disabled unless
+# explicitly enabled.
+option(extra-warnings "Enable extra compiler warnings" OFF)
+
+# This will cause the compiler to fail when an error occurs.
+option(fatal-warnings "Compiler warnings are errors" OFF)
+
+# Check if the compiler supports each of the following additional
+# flags, and enable them if supported.  This greatly improves the
+# quality of the build by checking for a number of common problems,
+# some of which are quite serious.
+if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR
+   CMAKE_CXX_COMPILER_ID MATCHES "Clang")
+  set(test_flags
+      -Wall
+      -Winline
+      -W
+      -Wformat-security
+      -Wpointer-arith
+      -Wdisabled-optimization
+      -Wno-unknown-pragmas
+      -fstrict-aliasing)
+  if(extra-warnings)
+    list(APPEND test_flags
+        -Wfloat-equal
+        -Wmissing-prototypes
+        -Wunreachable-code)
+  endif()
+  if(fatal-warnings)
+    list(APPEND test_flags
+         -Werror)
+  endif()
+elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
+  set(test_flags)
+  if(extra-warnings)
+    list(APPEND test_flags
+         /W4)
+  else()
+    list(APPEND test_flags
+         /W3)
+  endif()
+  if (fatal-warnings)
+    list(APPEND test_flags
+         /WX)
+  endif()
+endif()
+
+include(CheckCXXCompilerFlag)
+
+foreach(flag ${test_flags})
+  string(REGEX REPLACE "[^A-Za-z0-9]" "_" flag_var "${flag}")
+  set(test_c_flag "CXX_FLAG${flag_var}")
+  CHECK_CXX_COMPILER_FLAG(${flag} "${test_c_flag}")
+  if (${test_c_flag})
+     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${flag}")
+  endif (${test_c_flag})
+endforeach(flag ${test_flags})
diff --git a/cmake/XercesXMLCh.cmake b/cmake/XercesXMLCh.cmake
new file mode 100644
index 0000000..bf584a1
--- /dev/null
+++ b/cmake/XercesXMLCh.cmake
@@ -0,0 +1,46 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# check if the Windows API is defined as using wchar_t or unsigned
+# short; if it's wchar_t, we need to map XMLCh to be wchar_t (this is
+# safe because on Windows wchar_t is used to store UTF-16 codepoints,
+# while it is not true on Unix)
+
+include(CheckCXXSourceCompiles)
+include(XercesIntTypes)
+
+set(XERCES_XMLCH_T ${XERCES_U16BIT_INT})
+set(XERCES_INCLUDE_WCHAR_H 0)
+if(WIN32)
+  check_cxx_source_compiles("
+#include <windows.h>
+
+wchar_t file[] = L\"dummy.file\";
+
+int main() {
+  DeleteFileW(file);
+  return 0;
+}"
+    WINDOWS_wchar)
+
+  if(WINDOWS_wchar)
+    set(XERCES_XMLCH_T wchar_t)
+    set(XERCES_INCLUDE_WCHAR_H 1)
+  endif()
+endif()
diff --git a/config.h.cmake.in b/config.h.cmake.in
new file mode 100644
index 0000000..0fb6689
--- /dev/null
+++ b/config.h.cmake.in
@@ -0,0 +1,493 @@
+/* config.h.cmake.in.  Not generated, but originated from autoheader.  */
+/* This file must be kept up-to-date with needed substitutions from config.h.in. */
+
+/* Define to 1 if you have the <cstdint> header file. */
+#cmakedefine HAVE_CSTDINT 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#cmakedefine HAVE_STDINT_H 1
+
+#if defined(__cplusplus) && defined(HAVE_CSTDINT)
+#include <cstdint>
+#elif HAVE_STDINT_H
+#include <stdint.h>
+#elif HAVE_INTTYPES_H
+#include <inttypes.h>
+#endif
+
+/* Define to specify no threading is used */
+#cmakedefine APP_NO_THREADS 1
+
+/* Define to 1 if you have the <arpa/inet.h> header file. */
+#cmakedefine HAVE_ARPA_INET_H 1
+
+/* Define to 1 if you have the <arpa/nameser_compat.h> header file. */
+#cmakedefine HAVE_ARPA_NAMESER_COMPAT_H 1
+
+/* define if bool is a built-in type */
+#cmakedefine HAVE_BOOL 1
+
+/* Define to 1 if you have the `catclose' function. */
+#cmakedefine HAVE_CATCLOSE 1
+
+/* Define to 1 if you have the `catgets' function. */
+#cmakedefine HAVE_CATGETS 1
+
+/* Define to 1 if you have the `catopen' function. */
+#cmakedefine HAVE_CATOPEN 1
+
+/* Define to 1 if you have the `clock_gettime' function. */
+#cmakedefine HAVE_CLOCK_GETTIME 1
+
+/* Define to 1 if you have the <CoreServices/CoreServices.h> header file. */
+#cmakedefine HAVE_CORESERVICES_CORESERVICES_H 1
+
+/* Define to 1 if you have cpuid.h */
+#cmakedefine HAVE_CPUID_H 1
+
+/* Define to 1 if you have the <ctype.h> header file. */
+#cmakedefine HAVE_CTYPE_H 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#cmakedefine HAVE_DLFCN_H 1
+
+/* Define to 1 if you have the <endian.h> header file. */
+#cmakedefine HAVE_ENDIAN_H 1
+
+/* Define to 1 if you have the <errno.h> header file. */
+#cmakedefine HAVE_ERRNO_H 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#cmakedefine HAVE_FCNTL_H 1
+
+/* Define to 1 if you have the <float.h> header file. */
+#cmakedefine HAVE_FLOAT_H 1
+
+/* Define to 1 if you have the `ftime' function. */
+#cmakedefine HAVE_FTIME 1
+
+/* Define to 1 if you have the `getaddrinfo' function. */
+#cmakedefine HAVE_GETADDRINFO 1
+
+/* Define to 1 if you have the `getcwd' function. */
+#cmakedefine HAVE_GETCWD 1
+
+/* Define to 1 if you have the `gethostbyaddr' function. */
+#cmakedefine HAVE_GETHOSTBYADDR 1
+
+/* Define to 1 if you have the `gethostbyname' function. */
+#cmakedefine HAVE_GETHOSTBYNAME 1
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#cmakedefine HAVE_GETTIMEOFDAY 1
+
+/* Define to 1 if you have the `iconv' function. */
+#cmakedefine HAVE_ICONV 1
+
+/* Define to 1 if you have the `iconv_close' function. */
+#cmakedefine HAVE_ICONV_CLOSE 1
+
+/* Define to 1 if you have the <iconv.h> header file. */
+#cmakedefine HAVE_ICONV_H 1
+
+/* Define to 1 if you have the `iconv_open' function. */
+#cmakedefine HAVE_ICONV_OPEN 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#cmakedefine HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <langinfo.h> header file. */
+#cmakedefine HAVE_LANGINFO_H 1
+
+/* Define to 1 if you have the `nsl' library (-lnsl). */
+#cmakedefine HAVE_LIBNSL 1
+
+/* Define to 1 if you have the `socket' library (-lsocket). */
+#cmakedefine HAVE_LIBSOCKET 1
+
+/* Define to 1 if you have the <limits.h> header file. */
+#cmakedefine HAVE_LIMITS_H 1
+
+/* Define to 1 if you have the `localeconv' function. */
+#cmakedefine HAVE_LOCALECONV 1
+
+/* Define to 1 if you have the <locale.h> header file. */
+#cmakedefine HAVE_LOCALE_H 1
+
+/* define if the compiler implements L"widestring" */
+#cmakedefine HAVE_LSTRING 1
+
+/* Define to 1 if you have the <machine/endian.h> header file. */
+#cmakedefine HAVE_MACHINE_ENDIAN_H 1
+
+/* Define to 1 if you have the `mblen' function. */
+#cmakedefine HAVE_MBLEN 1
+
+/* Define to 1 if you have the `mbrlen' function. */
+#cmakedefine HAVE_MBRLEN 1
+
+/* Define to 1 if you have the `mbsrtowcs' function. */
+#cmakedefine HAVE_MBSRTOWCS 1
+
+/* Define to 1 if you have the `mbstowcs' function. */
+#cmakedefine HAVE_MBSTOWCS 1
+
+/* Define to 1 if you have the `memmove' function. */
+#cmakedefine HAVE_MEMMOVE 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#cmakedefine HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the `memset' function. */
+#cmakedefine HAVE_MEMSET 1
+
+/* define if the compiler implements namespaces */
+#cmakedefine HAVE_NAMESPACES 1
+
+/* Define to 1 if you have the <netdb.h> header file. */
+#cmakedefine HAVE_NETDB_H 1
+
+/* Define to 1 if you have the <netinet/in.h> header file. */
+#cmakedefine HAVE_NETINET_IN_H 1
+
+/* Define to 1 if you have the `nl_langinfo' function. */
+#cmakedefine HAVE_NL_LANGINFO 1
+
+/* Define to 1 if you have the <nl_types.h> header file. */
+#cmakedefine HAVE_NL_TYPES_H 1
+
+/* Define to 1 if you have the `pathconf' function. */
+#cmakedefine HAVE_PATHCONF 1
+
+/* Define to 1 if you have the PATH_MAX macro. */
+#cmakedefine HAVE_PATH_MAX 1
+
+/* Define if you have POSIX threads libraries and header files. */
+#cmakedefine HAVE_PTHREAD 1
+
+/* Define to 1 if you have the `realpath' function. */
+#cmakedefine HAVE_REALPATH 1
+
+/* Define to 1 if you have the `setlocale' function. */
+#cmakedefine HAVE_SETLOCALE 1
+
+/* Define to 1 if you have the `socket' function. */
+#cmakedefine HAVE_SOCKET 1
+
+/* Define to 1 if stdbool.h conforms to C99. */
+#cmakedefine HAVE_STDBOOL_H 1
+
+/* Define to 1 if you have the <stddef.h> header file. */
+#cmakedefine HAVE_STDDEF_H 1
+
+/* Define to 1 if you have the <stdio.h> header file. */
+#cmakedefine HAVE_STDIO_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#cmakedefine HAVE_STDLIB_H 1
+
+/* define if the compiler supports ISO C++ standard library */
+#cmakedefine HAVE_STD_LIBS 1
+
+/* define if the compiler supports the std namespace */
+#cmakedefine HAVE_STD_NAMESPACE 1
+
+/* Define to 1 if you have the `strcasecmp' function. */
+#cmakedefine HAVE_STRCASECMP 1
+
+/* Define to 1 if you have the `strchr' function. */
+#cmakedefine HAVE_STRCHR 1
+
+/* Define to 1 if you have the `strdup' function. */
+#cmakedefine HAVE_STRDUP 1
+
+/* Define to 1 if you have the `stricmp' function. */
+#cmakedefine HAVE_STRICMP 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#cmakedefine HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#cmakedefine HAVE_STRING_H 1
+
+/* Define to 1 if you have the `strncasecmp' function. */
+#cmakedefine HAVE_STRNCASECMP 1
+
+/* Define to 1 if you have the `strnicmp' function. */
+#cmakedefine HAVE_STRNICMP 1
+
+/* Define to 1 if you have the `strrchr' function. */
+#cmakedefine HAVE_STRRCHR 1
+
+/* Define to 1 if you have the `strstr' function. */
+#cmakedefine HAVE_STRSTR 1
+
+/* Define to 1 if you have the `strtol' function. */
+#cmakedefine HAVE_STRTOL 1
+
+/* Define to 1 if you have the `strtoul' function. */
+#cmakedefine HAVE_STRTOUL 1
+
+/* Define to 1 if you have the <sys/param.h> header file. */
+#cmakedefine HAVE_SYS_PARAM_H 1
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#cmakedefine HAVE_SYS_SOCKET_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#cmakedefine HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/timeb.h> header file. */
+#cmakedefine HAVE_SYS_TIMEB_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#cmakedefine HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#cmakedefine HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the `towlower' function. */
+#cmakedefine HAVE_TOWLOWER 1
+
+/* Define to 1 if you have the `towupper' function. */
+#cmakedefine HAVE_TOWUPPER 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#cmakedefine HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the <wchar.h> header file. */
+#cmakedefine HAVE_WCHAR_H 1
+
+/* Define to 1 if you have the `wcsicmp' function. */
+#cmakedefine HAVE_WCSICMP 1
+
+/* Define to 1 if you have the `wcslwr' function. */
+#cmakedefine HAVE_WCSLWR 1
+
+/* Define to 1 if you have the `wcsnicmp' function. */
+#cmakedefine HAVE_WCSNICMP 1
+
+/* Define to 1 if you have the `wcsrtombs' function. */
+#cmakedefine HAVE_WCSRTOMBS 1
+
+/* Define to 1 if you have the `wcstombs' function. */
+#cmakedefine HAVE_WCSTOMBS 1
+
+/* Define to 1 if you have the `wcsupr' function. */
+#cmakedefine HAVE_WCSUPR 1
+
+/* Define to 1 if you have the <wctype.h> header file. */
+#cmakedefine HAVE_WCTYPE_H 1
+
+/* Define to 1 if you have the <winsock2.h> header file. */
+#cmakedefine HAVE_WINSOCK2_H 1
+
+/* Define to 1 if you have to use const char* with iconv, to 0 if you must use
+   char*. */
+#define ICONV_USES_CONST_POINTER @ICONV_USES_CONST_POINTER@
+
+/* Define to 1 if your C compiler doesn't accept -c and -o together. */
+#cmakedefine NO_MINUS_C_MINUS_O 1
+
+/* Name of package */
+#define PACKAGE "@PACKAGE@"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "@PACKAGE_NAME@"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "@PACKAGE_STRING@"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "@PACKAGE_TARNAME@"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL "@PACKAGE_URL@"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "@PACKAGE_VERSION@"
+
+/* The size of `int', as computed by sizeof. */
+#define SIZEOF_INT @SIZEOF_INT@
+
+/* The size of `long', as computed by sizeof. */
+#define SIZEOF_LONG @SIZEOF_LONG@
+
+/* The size of `long long', as computed by sizeof. */
+#define SIZEOF_LONG_LONG @SIZEOF_LONG_LONG@
+
+/* The size of `short', as computed by sizeof. */
+#define SIZEOF_SHORT @SIZEOF_SHORT@
+
+/* The size of `wchar_t', as computed by sizeof. */
+#define SIZEOF_WCHAR_T @SIZEOF_WCHAR_T@
+
+/* The size of `__int64', as computed by sizeof. */
+#define SIZEOF___INT64 @SIZEOF___INT64@
+
+/* Version number of package */
+#define VERSION "@PACKAGE_VERSION@"
+
+/* Define if DLL symbols should be exported */
+#cmakedefine XERCES_DLL_EXPORT 1
+
+/* Define if namespaces is supported by the compiler */
+#cmakedefine XERCES_HAS_CPP_NAMESPACE 1
+
+/* Define to have SSE2 instruction support detected at runtime using __cpuid
+   */
+#cmakedefine XERCES_HAVE_CPUID_INTRINSIC 1
+
+/* Define to 1 if you have emmintrin.h */
+#cmakedefine XERCES_HAVE_EMMINTRIN_H 1
+
+/* Define to have SSE2 instruction support detected at runtime using
+   __get_cpuid */
+#cmakedefine XERCES_HAVE_GETCPUID 1
+
+/* Define to 1 if you have intrin.h */
+#cmakedefine XERCES_HAVE_INTRIN_H 1
+
+/* Define to 1 if we have inttypes.h */
+#cmakedefine XERCES_HAVE_INTTYPES_H 1
+
+/* Define to have SSE2 instruction used at runtime */
+#cmakedefine XERCES_HAVE_SSE2_INTRINSIC 1
+
+/* Define to 1 if we have sys/types.h */
+#cmakedefine XERCES_HAVE_SYS_TYPES_H 1
+
+/* Define to have Xerces_autoconf_config.hpp include wchar.h */
+#cmakedefine XERCES_INCLUDE_WCHAR_H 1
+
+/* Define if there is support for L"widestring" */
+#cmakedefine XERCES_LSTRSUPPORT 1
+
+/* Define if the isstream library can be included as <iostream> */
+#cmakedefine XERCES_NEW_IOSTREAMS 1
+
+/* Define to have XMemory.hpp avoid declaring a matching operator delete for
+   the placement operator new */
+#cmakedefine XERCES_NO_MATCHING_DELETE_OPERATOR 1
+
+/* Define if there is no native bool support in this environment */
+#cmakedefine XERCES_NO_NATIVE_BOOL 1
+
+/* Define to use backslash as an extra path delimiter character */
+#cmakedefine XERCES_PATH_DELIMITER_BACKSLASH 1
+
+/* Define as the platform's export attribute */
+#define XERCES_PLATFORM_EXPORT @XERCES_PLATFORM_EXPORT@
+
+/* Define as the platform's import attribute */
+#define XERCES_PLATFORM_IMPORT @XERCES_PLATFORM_IMPORT@
+
+/* An appropriate signed 16 bit integer type */
+#define XERCES_S16BIT_INT @XERCES_S16BIT_INT@
+
+/* An appropriate signed 32 bit integer type */
+#define XERCES_S32BIT_INT @XERCES_S32BIT_INT@
+
+/* An appropriate signed 64 bit integer type */
+#define XERCES_S64BIT_INT @XERCES_S64BIT_INT@
+
+/* Define as the appropriate size_t type */
+#define XERCES_SIZE_T @XERCES_SIZE_T@
+
+/* Define as the appropriate ssize_t type */
+#define XERCES_SSIZE_T @XERCES_SSIZE_T@
+
+/* Define if building a static library */
+#cmakedefine XERCES_STATIC_LIBRARY 1
+
+/* Define if the std namespace is supported */
+#cmakedefine XERCES_STD_NAMESPACE 1
+
+/* An appropriate unsigned 16 bit integer type */
+#define XERCES_U16BIT_INT @XERCES_U16BIT_INT@
+
+/* An appropriate unsigned 32 bit integer type */
+#define XERCES_U32BIT_INT @XERCES_U32BIT_INT@
+
+/* An appropriate unsigned 64 bit integer type */
+#define XERCES_U64BIT_INT @XERCES_U64BIT_INT@
+
+/* Define to use the POSIX file mgr */
+#cmakedefine XERCES_USE_FILEMGR_POSIX 1
+
+/* Define to use the Windows file mgr */
+#cmakedefine XERCES_USE_FILEMGR_WINDOWS 1
+
+/* Define to use the iconv-based MsgLoader */
+#cmakedefine XERCES_USE_MSGLOADER_ICONV 1
+
+/* Define to use the ICU-based MsgLoader */
+#cmakedefine XERCES_USE_MSGLOADER_ICU 1
+
+/* Define to use the InMemory MsgLoader */
+#cmakedefine XERCES_USE_MSGLOADER_INMEMORY 1
+
+/* Define to use the NoThread mutex mgr */
+#cmakedefine XERCES_USE_MUTEXMGR_NOTHREAD 1
+
+/* Define to use the POSIX mutex mgr */
+#cmakedefine XERCES_USE_MUTEXMGR_POSIX 1
+
+/* Define to use the Windows mutex mgr */
+#cmakedefine XERCES_USE_MUTEXMGR_WINDOWS 1
+
+/* Define to use the Mac OS X CFURL NetAccessor */
+#cmakedefine XERCES_USE_NETACCESSOR_CFURL 1
+
+/* Define to use the CURL NetAccessor */
+#cmakedefine XERCES_USE_NETACCESSOR_CURL 1
+
+/* Define to use the Sockets-based NetAccessor */
+#cmakedefine XERCES_USE_NETACCESSOR_SOCKET 1
+
+/* Define to use the WinSock NetAccessor */
+#cmakedefine XERCES_USE_NETACCESSOR_WINSOCK 1
+
+/* Define to use the GNU iconv transcoder */
+#cmakedefine XERCES_USE_TRANSCODER_GNUICONV 1
+
+/* Define to use the iconv transcoder */
+#cmakedefine XERCES_USE_TRANSCODER_ICONV 1
+
+/* Define to use the ICU-based transcoder */
+#cmakedefine XERCES_USE_TRANSCODER_ICU 1
+
+/* Define to use the Mac OS UnicodeConverter-based transcoder */
+#cmakedefine XERCES_USE_TRANSCODER_MACOSUNICODECONVERTER 1
+
+/* Define to use the Windows transcoder */
+#cmakedefine XERCES_USE_TRANSCODER_WINDOWS 1
+
+/* Define to the 16 bit type used to represent Xerces UTF-16 characters */
+#define XERCES_XMLCH_T @XERCES_XMLCH_T@
+
+/* Define to empty if `const' does not conform to ANSI C. */
+#if !@HAVE_CONST@
+#define const
+#endif
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+#if !@HAVE_INLINE@
+#if @NEED_INLINE@
+#define inline @inline_keyword@
+#else
+#define inline
+#endif
+#endif
+#endif
+
+/* Define to empty if the keyword `volatile' does not work. Warning: valid
+code using `volatile' can become incorrect without. Disable with care. */
+#if !@HAVE_VOLATILE@
+#define volatile
+#endif
diff --git a/doc/CMakeLists.txt b/doc/CMakeLists.txt
new file mode 100644
index 0000000..8673a0a
--- /dev/null
+++ b/doc/CMakeLists.txt
@@ -0,0 +1,95 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Install docs
+install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/html"
+  DESTINATION "${CMAKE_INSTALL_DOCDIR}"
+  COMPONENT "development")
+
+# Add createdocs target (if Java is available, plus the needed jars)
+find_package(Java COMPONENTS Runtime)
+if(Java_FOUND
+    AND EXISTS "${PROJECT_SOURCE_DIR}/tools/jars/stylebook-1.0-b2.jar"
+    AND EXISTS "${PROJECT_SOURCE_DIR}/tools/jars/xalan.jar"
+    AND EXISTS "${PROJECT_SOURCE_DIR}/tools/jars/xerces.jar")
+  if(UNIX)
+    set(cpsep ":")
+  else()
+    set(cpsep ";")
+  endif()
+  set(classpath "${PROJECT_SOURCE_DIR}/tools/jars/stylebook-1.0-b2.jar${cpsep}${PROJECT_SOURCE_DIR}/tools/jars/xalan.jar${cpsep}${PROJECT_SOURCE_DIR}/tools/jars/xerces.jar")
+  add_custom_target(createdocs
+    COMMAND "${Java_JAVA_EXECUTABLE}" -Djava.awt.headless=true
+    -classpath "${classpath}"
+    org.apache.stylebook.StyleBook
+    "targetDirectory=${CMAKE_CURRENT_SOURCE_DIR}/html"
+    ${CMAKE_CURRENT_SOURCE_DIR}/xerces-c_book.xml
+    ${CMAKE_CURRENT_SOURCE_DIR}/style
+    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
+    )
+  set_target_properties(createdocs PROPERTIES FOLDER "Documentation")
+endif()
+
+# Add createapidocs target (if doxygen is available)
+find_program(DOXYGEN_EXECUTABLE doxygen)
+if(DOXYGEN_EXECUTABLE)
+  add_custom_target(createapidocs
+    COMMAND "${DOXYGEN_EXECUTABLE}" Doxyfile
+    WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}"
+    )
+  set_target_properties(createapidocs PROPERTIES FOLDER "Documentation")
+endif()
+
+# Add docs to IDE
+file(GLOB doc_xml
+  "${CMAKE_CURRENT_SOURCE_DIR}/*.xml")
+file(GLOB doc_style
+  "${CMAKE_CURRENT_SOURCE_DIR}/style/dtd/*.ent"
+  "${CMAKE_CURRENT_SOURCE_DIR}/style/graphics/*.gif"
+  "${CMAKE_CURRENT_SOURCE_DIR}/style/*.xml"
+  "${CMAKE_CURRENT_SOURCE_DIR}/style/resources/*.gif"
+  "${CMAKE_CURRENT_SOURCE_DIR}/style/stylesheets/*.xsl")
+
+add_custom_target(doc-xml SOURCES ${doc_xml})
+set_target_properties(doc-xml PROPERTIES FOLDER "Documentation")
+add_custom_target(doc-style SOURCES ${doc_style})
+set_target_properties(doc-style PROPERTIES FOLDER "Documentation")
+
+# Source file grouping (for IDE project layout)
+set(source_files ${doc_style})
+list(SORT source_files)
+unset(group_dir)
+unset(group_files)
+foreach(file IN LISTS source_files)
+  get_filename_component(dir "${file}" PATH)
+  file(RELATIVE_PATH dir "${CMAKE_CURRENT_SOURCE_DIR}" "${dir}")
+  if(group_dir AND NOT dir STREQUAL group_dir)
+    if(group_files)
+      source_group("${group_dir}" FILES ${group_files})
+    endif()
+    unset(group_files)
+  endif()
+  list(APPEND group_files "${file}")
+  set(group_dir "${dir}")
+endforeach()
+if(group_files)
+  source_group("${group_dir}" FILES ${group_files})
+endif()
+unset(group_dir)
+unset(group_files)
diff --git a/doc/build.xml b/doc/build.xml
index a0ce397..83f3d42 100644
--- a/doc/build.xml
+++ b/doc/build.xml
@@ -25,11 +25,256 @@
        compilers:</p>
 
     <ul>
+       <li><link anchor="CMake">All platforms</link></li>
        <li><link anchor="UNIX">UNIX/Linux/Mac OS X/Cygwin/MinGW</link></li>
        <li><link anchor="Windows">Windows using Microsoft Visual C++</link></li>
        <li><link anchor="BorlandCC">Windows using Borland C++</link></li>
     </ul>
 
+    <anchor name="CMake"/>
+    <s3 title="Building on all platforms with CMake">
+
+        <p>For building on any platform with any supported build
+           system &XercesCName; uses the CMake build generator and
+           requires that you have <jump
+           href="https://cmake.org/">CMake</jump> installed.
+           Additionally, a build tool such as <jump
+           href="http://www.gnu.org/software/make/make.html">GNU
+           make</jump> or <jump
+           href="https://ninja-build.org/">Ninja</jump> is required for
+           building.  CMake supports a wide range of generators for
+           several different compilers, build tools and popular IDEs,
+           including Eclipse, Kate, Visual Studio, Sublime Text and more.
+           Any of these may be used to build &XercesCName;.  Run
+           <code>cmake --help</code> to display the full list of
+           supported generators for your platform.</p>
+
+        <p>As with all CMake projects, the build process is divided
+           into several parts: configuration and building, followed by
+           (optional) testing and installation. The configuration part is
+           performed by running the <code>cmake</code> command.  The
+           build part is performed by invoking the chosen build tool
+           such as <code>make</code> or <code>ninja</code>, or by opening
+           the generated project files in your IDE, and building from
+           within the IDE.</p>
+
+        <p>Besides the standard <code>cmake</code> <jump
+           href="https://cmake.org/cmake/help/latest/manual/cmake-variables.7.html">variables</jump>,
+           &XercesCName; provides a number of project-specific options
+           that are worth mentioning. You can specify one option for each
+           category outlined below. If you do not specify anything for a
+           particular category then <code>cmake</code> will select the
+           most appropriate default, based upon the available options for
+           your system. At the end of its execution <code>cmake</code>
+           prints the selected values for each category.</p>
+
+
+	<p>Net Accessor (used to access network resources):</p>
+
+        <table>
+          <tr>
+            <th>Option</th>
+            <th>Description</th>
+          </tr>
+          <tr>
+            <td><code>-Dnetwork-accessor=curl</code></td>
+            <td>use the libcurl library (only on UNIX)</td>
+          </tr>
+          <tr>
+            <td><code>-Dnetwork-accessor=socket</code></td>
+            <td>use plain sockets (only on UNIX)</td>
+          </tr>
+	  <tr>
+            <td><code>-Dnetwork-accessor=cfurl</code></td>
+            <td>use the CFURL API (only on Mac OS X)</td>
+          </tr>
+	  <tr>
+            <td><code>-Dnetwork-accessor=winsock</code></td>
+            <td>use WinSock (only on Windows and MinGW)</td>
+          </tr>
+          <tr>
+            <td><code>-Dnetwork:BOOL=OFF</code></td>
+            <td>disable network support</td>
+          </tr>
+        </table>
+
+	<p>Transcoder (used to convert between internal UTF-16 and other encodings):</p>
+
+        <table>
+          <tr>
+            <th>Option</th>
+            <th>Description</th>
+          </tr>
+          <tr>
+            <td><code>-Dtranscoder=gnuiconv</code></td>
+            <td>use the GNU iconv library</td>
+          </tr>
+          <tr>
+            <td><code>-Dtranscoder=iconv</code></td>
+            <td>use the iconv library</td>
+          </tr>
+          <tr>
+            <td><code>-Dtranscoder=icu</code></td>
+            <td>use the ICU library</td>
+          </tr>
+          <tr>
+            <td><code>-Dtranscoder=macosunicodeconverter</code></td>
+            <td>use Mac OS X APIs (only on Mac OS X)</td>
+          </tr>
+          <tr>
+            <td><code>-Dtranscoder=windows</code></td>
+            <td>use Windows APIs (only on Windows and MinGW)</td>
+          </tr>
+        </table>
+
+	<p>Message Loader (used to access diagnostics messages):</p>
+
+        <table>
+          <tr>
+            <th>Option</th>
+            <th>Description</th>
+          </tr>
+          <tr>
+            <td><code>-Dmessage-loader=inmemory</code></td>
+            <td>store the messages in memory</td>
+          </tr>
+          <tr>
+            <td><code>-Dmessage-loader=icu</code></td>
+            <td>store the messages using the ICU resource bundles</td>
+          </tr>
+          <tr>
+            <td><code>-Dmessage-loader=iconv</code></td>
+            <td>store the messages in the iconv message catalog</td>
+          </tr>
+        </table>
+
+        <p>Thread support is enabled by default and can be disabled
+           with the <code>-Dthreads:BOOL=OFF</code> option.  If disabled,
+           it will not be possible to select a mutex manager other than
+           <code>nothreads</code>.</p>
+
+        <p>Shared libraries are built by default. You can use the
+           <code>-DBUILD_SHARED_LIBS:BOOL=OFF</code> option to build
+           static libraries.</p>
+
+         <p>If you need to specify compiler executables that should be
+            used to build &XercesCName;, you can set the CC and CXX
+            environment variables when invoking
+            <code>cmake</code>. Similarly, if you need to specify
+            additional compiler or linker options, you can set the
+            CFLAGS, CXXFLAGS, and LDFLAGS environment variables.  For
+            example:</p>
+
+         <source>CC=gcc-5.3 CXX=g++-5.3 CFLAGS=-O3 CXXFLAGS=-O3 cmake ...</source>
+
+         <note>
+           If building on Windows, the specific Visual Studio version
+           may be selected with some generators, and this may be run
+           from a normal command prompt.  If using a generic generator
+           such as <code>Ninja</code>, then <code>cmake</code> should
+           be run from a Visual Studio command prompt, or in a
+           suitably configured environment, so that the correct
+           compiler will be detected.
+         </note>
+
+         <p>Once the configuration part is complete you can run the
+            build tool of choice.  This may be done generically using
+            <code>cmake --build . [--config=Debug|Release]</code>.
+            Alternatively, a specific build tool, e.g. <code>make</code>,
+            <code>gmake</code>, <code>ninja</code> or
+            <code>msbuild</code> corresponding to the chosen generator
+            may be used directly.  When invoked without a specific
+            target, it will build the &XercesCName; library, all examples
+            and all unit tests.</p>
+
+         <p>If you would like to run the automated test suite, run
+            <code>ctest [-V] [-C Debug|Release]</code>.  This will run
+            all tests.  Additional <jump
+            href="https://cmake.org/cmake/help/latest/manual/ctest.1.html">options</jump>
+            are available, such as running a subset of the tests and
+            running the tests in parallel.  If any discrepancies in the
+            output are detected, the differences will be displayed if a
+            <code>diff</code> program is available.</p>
+
+         <p>Finally, install the library and examples.  This may be
+            done generically using <code>cmake --build . --target
+            install</code>.  Alternatively, a specific build tool may be
+            used, e.g. <code>make install</code>.  To change the
+            installation directory, use the
+            <code>-DCMAKE_INSTALL_PREFIX=prefix</code> <code>cmake</code>
+            option.</p>
+
+         <p>Some platforms and configurations may require extra
+            <code>cmake</code> options.  Run <code>cmake -LH</code> to
+            list the additional options, along with a short description
+            for each.  For each of the selection categories mentioned
+            above, the help text will list the valid choices detected for
+            your platform.  Run <code>cmake -LAH</code> for all the
+            additional advanced settings.</p>
+
+         <p>Several examples of configuring, building, testing and
+            installing with CMake using different platforms, generators,
+            and installation options are shown below:</p>
+
+      <table>
+        <tr>
+          <th>Platform</th>
+          <th>Generator</th>
+          <th>Example</th>
+        </tr>
+        <tr>
+          <td>Any</td>
+          <td>Ninja</td>
+          <td><code>mkdir build</code><br/>
+          <code>cd build</code><br/>
+          <code>cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/opt/xerces-c -DCMAKE_BUILD_TYPE=Release -Dnetwork-accessor=curl /path/to/xerces-c/source</code><br/>
+          <code>ninja</code><br/>
+          <code>ctest -V -j 8</code><br/>
+          <code>ninja install</code></td>
+        </tr>
+        <tr>
+          <td>Unix</td>
+          <td>Unix Makefiles</td>
+          <td><code>mkdir build</code><br/>
+          <code>cd build</code><br/>
+          <code>cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/opt/xerces-c -DCMAKE_BUILD_TYPE=Debug -Dmessage-loader=icu /path/to/xerces-c/source</code><br/>
+          <code>make -j8</code><br/>
+          <code>make test</code><br/>
+          <code>make install</code></td>
+        </tr>
+        <tr>
+          <td>Windows</td>
+          <td>msbuild with VS2015 x64</td>
+          <td><code>mkdir build</code><br/>
+          <code>cd build</code><br/>
+          <code>cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_INSTALL_PREFIX=D:\libs \path\to\xerces-c\source</code><br/>
+          <code>cmake --build . --config Debug</code><br/>
+          <code>ctest -V -C Debug -j 4</code><br/>
+          <code>cmake --build . --config Debug --target install</code></td>
+        </tr>
+        </table>
+        <p/>
+
+        <note>
+          Note that different UNIX platforms use different system
+          environment variables for finding shared libraries. On Linux
+          and Solaris, the environment variable name is
+          <code>LD_LIBRARY_PATH</code>, on AIX it is
+          <code>LIBPATH</code>, on Mac OS X it is
+          <code>DYLD_FALLBACK_LIBRARY_PATH</code>, and on HP-UX it is
+          <code>SHLIB_PATH</code>.
+        </note>
+
+	<note>
+          Note that Windows is different from the UNIX platforms in
+          the way it finds shared libraries at run time.  While UNIX
+          platforms may use the <code>LD_LIBRARY_PATH</code>
+          environment variable, Windows uses the <code>PATH</code>
+          environment variable if the library is not in the same
+          directory as the executable.
+        </note>
+    </s3>
+
     <anchor name="UNIX"/>
     <s3 title="Building on UNIX/Linux/Mac OS X/Cygwin/MinGW platforms">
 
diff --git a/samples/CMakeLists.txt b/samples/CMakeLists.txt
new file mode 100644
index 0000000..90ee449
--- /dev/null
+++ b/samples/CMakeLists.txt
@@ -0,0 +1,201 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Definitions required for building
+add_definitions(
+  -DHAVE_CONFIG_H
+)
+
+# Search the project binary dir for config.h
+include_directories(
+  ${PROJECT_BINARY_DIR}
+  ${PROJECT_SOURCE_DIR}/src
+  ${PROJECT_BINARY_DIR}/src
+  ${CMAKE_CURRENT_SOURCE_DIR}
+)
+
+set(EXTRA_DIST
+  data/personal.dtd
+  data/personal.xml
+  data/personal.xsd
+  data/personal-schema.xml
+  data/redirect.dtd
+  data/long.xml
+  )
+
+macro(add_sample_executable name)
+  add_executable(${name} ${ARGN})
+  target_link_libraries(${name} xerces-c)
+  set_target_properties(${name} PROPERTIES FOLDER "Samples")
+  list(APPEND sample_programs ${name})
+endmacro()
+
+add_sample_executable(CreateDOMDocument
+  src/CreateDOMDocument/CreateDOMDocument.cpp
+  )
+
+add_sample_executable(DOMCount
+  src/DOMCount/DOMCount.cpp
+  src/DOMCount/DOMCount.hpp
+  )
+
+add_sample_executable(DOMPrint
+  src/DOMPrint/DOMPrint.cpp
+  src/DOMPrint/DOMPrintErrorHandler.cpp
+  src/DOMPrint/DOMPrintErrorHandler.hpp
+  src/DOMPrint/DOMPrintFilter.cpp
+  src/DOMPrint/DOMPrintFilter.hpp
+  src/DOMPrint/DOMTreeErrorReporter.cpp
+  src/DOMPrint/DOMTreeErrorReporter.hpp
+  )
+
+add_sample_executable(EnumVal
+  src/EnumVal/EnumVal.cpp
+  )
+
+add_sample_executable(MemParse
+  src/MemParse/MemParse.cpp
+  src/MemParse/MemParse.hpp
+  src/MemParse/MemParseHandlers.cpp
+  src/MemParse/MemParseHandlers.hpp
+  )
+
+add_sample_executable(PParse
+  src/PParse/PParse.cpp
+  src/PParse/PParse.hpp
+  src/PParse/PParseHandlers.cpp
+  src/PParse/PParseHandlers.hpp
+  )
+
+add_sample_executable(PSVIWriter
+  src/PSVIWriter/PSVIWriter.cpp
+  src/PSVIWriter/PSVIWriter.hpp
+  src/PSVIWriter/PSVIWriterHandlers.cpp
+  src/PSVIWriter/PSVIWriterHandlers.hpp
+  )
+
+add_sample_executable(Redirect
+  src/Redirect/Redirect.cpp
+  src/Redirect/Redirect.hpp
+  src/Redirect/RedirectHandlers.cpp
+  src/Redirect/RedirectHandlers.hpp
+  )
+
+add_sample_executable(SAX2Count
+  src/SAX2Count/SAX2Count.cpp
+  src/SAX2Count/SAX2Count.hpp
+  src/SAX2Count/SAX2CountHandlers.cpp
+  src/SAX2Count/SAX2CountHandlers.hpp
+  )
+
+add_sample_executable(SAX2Print
+  src/SAX2Print/SAX2FilterHandlers.cpp
+  src/SAX2Print/SAX2FilterHandlers.hpp
+  src/SAX2Print/SAX2Print.cpp
+  src/SAX2Print/SAX2Print.hpp
+  src/SAX2Print/SAX2PrintHandlers.cpp
+  src/SAX2Print/SAX2PrintHandlers.hpp
+  )
+
+add_sample_executable(SAXCount
+  src/SAXCount/SAXCount.cpp
+  src/SAXCount/SAXCount.hpp
+  src/SAXCount/SAXCountHandlers.cpp
+  src/SAXCount/SAXCountHandlers.hpp
+  )
+
+add_sample_executable(SAXPrint
+  src/SAXPrint/SAXPrint.cpp
+  src/SAXPrint/SAXPrint.hpp
+  src/SAXPrint/SAXPrintHandlers.cpp
+  src/SAXPrint/SAXPrintHandlers.hpp
+  )
+
+add_sample_executable(SCMPrint
+  src/SCMPrint/SCMPrint.cpp
+  )
+
+add_sample_executable(SEnumVal
+  src/SEnumVal/SEnumVal.cpp
+  )
+
+add_sample_executable(StdInParse
+  src/StdInParse/StdInParse.cpp
+  src/StdInParse/StdInParse.hpp
+  src/StdInParse/StdInParseHandlers.cpp
+  src/StdInParse/StdInParseHandlers.hpp
+  )
+
+add_sample_executable(XInclude
+  src/XInclude/XInclude.cpp
+  src/XInclude/XInclude.hpp
+  )
+
+install(
+  TARGETS ${sample_programs}
+  RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+  COMPONENT "runtime")
+
+# Run tests
+include(XercesTest)
+
+add_xerces_sample_test(SAXCount          COMMAND SAXCount EXPECT_FAIL)
+add_xerces_sample_test(SAXCount1         COMMAND SAXCount -v=never personal.xml)
+add_xerces_sample_test(SAXCount2         COMMAND SAXCount          personal.xml)
+add_xerces_sample_test(SAXCount3         COMMAND SAXCount -n -s    personal-schema.xml)
+add_xerces_sample_test(SAXPrint          COMMAND SAXPrint EXPECT_FAIL)
+add_xerces_sample_test(SAXPrint1         COMMAND SAXPrint -v=never personal.xml)
+add_xerces_sample_test(SAXPrint2         COMMAND SAXPrint          personal.xml)
+add_xerces_sample_test(SAXPrint3         COMMAND SAXPrint -n -s    personal-schema.xml)
+add_xerces_sample_test(SAX2Count         COMMAND SAX2Count EXPECT_FAIL)
+add_xerces_sample_test(SAX2Count1        COMMAND SAX2Count -v=never personal.xml)
+add_xerces_sample_test(SAX2Count2        COMMAND SAX2Count          personal.xml)
+add_xerces_sample_test(SAX2Count3        COMMAND SAX2Count -p       personal-schema.xml)
+add_xerces_sample_test(SAX2Print         COMMAND SAX2Print EXPECT_FAIL)
+add_xerces_sample_test(SAX2Print1        COMMAND SAX2Print -v=never personal.xml)
+add_xerces_sample_test(SAX2Print2        COMMAND SAX2Print          personal.xml)
+add_xerces_sample_test(SAX2Print3        COMMAND SAX2Print -p       personal-schema.xml)
+add_xerces_sample_test(SAX2Print4        COMMAND SAX2Print          personal.xsd)
+add_xerces_sample_test(SAX2Print5        COMMAND SAX2Print -sa      personal.xsd)
+add_xerces_sample_test(MemParse          COMMAND MemParse)
+add_xerces_sample_test(MemParse1         COMMAND MemParse -v=never)
+add_xerces_sample_test(Redirect          COMMAND Redirect EXPECT_FAIL)
+add_xerces_sample_test(Redirect1         COMMAND Redirect personal.xml)
+add_xerces_sample_test(DOMCount          COMMAND DOMCount EXPECT_FAIL)
+add_xerces_sample_test(DOMCount1         COMMAND DOMCount -v=never personal.xml)
+add_xerces_sample_test(DOMCount2         COMMAND DOMCount          personal.xml)
+add_xerces_sample_test(DOMCount3         COMMAND DOMCount -n -s    personal-schema.xml)
+add_xerces_sample_test(DOMPrint          COMMAND DOMPrint EXPECT_FAIL)
+add_xerces_sample_test(DOMPrint1         COMMAND DOMPrint -wfpp=on -wddc=off -v=never personal.xml)
+add_xerces_sample_test(DOMPrint2         COMMAND DOMPrint -wfpp=on -wddc=off          personal.xml)
+add_xerces_sample_test(DOMPrint3         COMMAND DOMPrint -wfpp=on -wddc=on           personal.xml)
+add_xerces_sample_test(DOMPrint4         COMMAND DOMPrint -wfpp=on -wddc=off -n -s    personal-schema.xml)
+add_xerces_sample_test(DOMPrint5         COMMAND DOMPrint -v=never -xpath=//name      personal.xml)
+add_xerces_sample_test(StdInParse1       COMMAND StdInParse STDIN personal.xml)
+add_xerces_sample_test(StdInParse2       COMMAND StdInParse STDIN personal.xml)
+add_xerces_sample_test(StdInParse3       COMMAND StdInParse STDIN personal-schema.xml)
+add_xerces_sample_test(PParse            COMMAND PParse EXPECT_FAIL)
+add_xerces_sample_test(PParse1           COMMAND PParse       personal.xml)
+add_xerces_sample_test(PParse2           COMMAND PParse -n -s personal-schema.xml)
+add_xerces_sample_test(EnumVal           COMMAND EnumVal EXPECT_FAIL)
+add_xerces_sample_test(EnumVal1          COMMAND EnumVal personal.xml)
+add_xerces_sample_test(SEnumVal          COMMAND SEnumVal EXPECT_FAIL)
+add_xerces_sample_test(SEnumVal1         COMMAND SEnumVal personal-schema.xml)
+add_xerces_sample_test(CreateDOMDocument COMMAND CreateDOMDocument)
+add_xerces_sample_test(SAXPrintLong      COMMAND SAXPrint -v=never long.xml)
diff --git a/samples/Makefile.am b/samples/Makefile.am
index 622d2cf..d9c231b 100644
--- a/samples/Makefile.am
+++ b/samples/Makefile.am
@@ -26,12 +26,14 @@ LDADD =                             ${top_builddir}/src/libxerces-c.la
 # header file when doing out-of-tree builds
 AM_CPPFLAGS =                       -I${top_builddir}/src -I${top_srcdir}/src
 
-EXTRA_DIST =                        data/personal.dtd \
+EXTRA_DIST =                        CMakeLists.txt \
+                                    data/personal.dtd \
                                     data/personal.xml \
                                     data/personal.xsd \
                                     data/personal-schema.xml \
                                     data/redirect.dtd \
-                                    data/long.xml
+                                    data/long.xml \
+                                    expected
 
 sampleprogs =
 
diff --git a/samples/expected/CreateDOMDocument.log b/samples/expected/CreateDOMDocument.log
new file mode 100644
index 0000000..878344e
--- /dev/null
+++ b/samples/expected/CreateDOMDocument.log
@@ -0,0 +1 @@
+The tree just created contains: 4 elements.
diff --git a/samples/expected/DOMCount.log b/samples/expected/DOMCount.log
new file mode 100644
index 0000000..a23dcdd
--- /dev/null
+++ b/samples/expected/DOMCount.log
@@ -0,0 +1,20 @@
+
+Usage:
+    DOMCount [options] <XML file | List file>
+
+This program invokes the DOMLSParser, builds the DOM tree,
+and then prints the number of elements found in each XML file.
+
+Options:
+    -l          Indicate the input file is a List File that has a list of xml files.
+                Default to off (Input file is an XML file).
+    -v=xxx      Validation scheme [always | never | auto*].
+    -n          Enable namespace processing. Defaults to off.
+    -s          Enable schema processing. Defaults to off.
+    -f          Enable full schema constraint checking. Defaults to off.
+    -locale=ll_CC specify the locale, default: en_US.
+    -p          Print out names of elements and attributes encountered.
+    -?          Show this help.
+
+  * = Default if not provided explicitly.
+
diff --git a/samples/expected/DOMCount1.log b/samples/expected/DOMCount1.log
new file mode 100644
index 0000000..6d3af3f
--- /dev/null
+++ b/samples/expected/DOMCount1.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems).
diff --git a/samples/expected/DOMCount2.log b/samples/expected/DOMCount2.log
new file mode 100644
index 0000000..6d3af3f
--- /dev/null
+++ b/samples/expected/DOMCount2.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems).
diff --git a/samples/expected/DOMCount3.log b/samples/expected/DOMCount3.log
new file mode 100644
index 0000000..e6caff2
--- /dev/null
+++ b/samples/expected/DOMCount3.log
@@ -0,0 +1 @@
+personal-schema.xml:{timing removed}(37 elems).
diff --git a/samples/expected/DOMPrint.log b/samples/expected/DOMPrint.log
new file mode 100644
index 0000000..6e69998
--- /dev/null
+++ b/samples/expected/DOMPrint.log
@@ -0,0 +1,30 @@
+
+Usage:
+    DOMPrint [options] <XML file>
+
+This program invokes the DOM parser, and builds the DOM tree.
+It then asks the DOMLSSerializer to serialize the DOM tree.
+Options:
+    -e          create entity reference nodes. Default is no expansion.
+    -v=xxx      Validation scheme [always | never | auto*].
+    -n          Enable namespace processing. Default is off.
+    -s          Enable schema processing. Default is off.
+    -f          Enable full schema constraint checking. Defaults is off.
+    -wenc=XXX   Use a particular encoding for output. Default is
+                the same encoding as the input XML file. UTF-8 if
+                input XML file has not XML declaration.
+    -wfile=xxx  Write to a file instead of stdout.
+    -wscs=xxx   Enable/Disable split-cdata-sections.      Default on
+    -wddc=xxx   Enable/Disable discard-default-content.   Default on
+    -wflt=xxx   Enable/Disable filtering.                 Default off
+    -wfpp=xxx   Enable/Disable format-pretty-print.       Default off
+    -wbom=xxx   Enable/Disable write Byte-Order-Mark      Default off
+    -xpath=xxx  Prints only the nodes matching the given XPath.
+    -?          Show this help.
+
+  * = Default if not provided explicitly.
+
+The parser has intrinsic support for the following encodings:
+    UTF-8, US-ASCII, ISO8859-1, UTF-16[BL]E, UCS-4[BL]E,
+    WINDOWS-1252, IBM1140, IBM037, IBM1047.
+
diff --git a/samples/expected/DOMPrint1.log b/samples/expected/DOMPrint1.log
new file mode 100644
index 0000000..1f2b7e9
--- /dev/null
+++ b/samples/expected/DOMPrint1.log
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="iso-8859-1" standalone="no" ?>
+<!DOCTYPE personnel SYSTEM "personal.dtd">
+<!-- @version: -->
+<personnel>
+
+  <person id="Big.Boss">
+    <name>
+      <family>Boss</family> 
+      <given>Big</given>
+    </name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"/>
+  </person>
+
+  <person id="one.worker">
+    <name>
+      <family>Worker</family> 
+      <given>One</given>
+    </name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="two.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Two</given>
+    </name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="three.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Three</given>
+    </name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="four.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Four</given>
+    </name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="five.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Five</given>
+    </name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+
+</personnel>
diff --git a/samples/expected/DOMPrint2.log b/samples/expected/DOMPrint2.log
new file mode 100644
index 0000000..1f2b7e9
--- /dev/null
+++ b/samples/expected/DOMPrint2.log
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="iso-8859-1" standalone="no" ?>
+<!DOCTYPE personnel SYSTEM "personal.dtd">
+<!-- @version: -->
+<personnel>
+
+  <person id="Big.Boss">
+    <name>
+      <family>Boss</family> 
+      <given>Big</given>
+    </name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"/>
+  </person>
+
+  <person id="one.worker">
+    <name>
+      <family>Worker</family> 
+      <given>One</given>
+    </name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="two.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Two</given>
+    </name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="three.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Three</given>
+    </name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="four.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Four</given>
+    </name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="five.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Five</given>
+    </name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+
+</personnel>
diff --git a/samples/expected/DOMPrint3.log b/samples/expected/DOMPrint3.log
new file mode 100644
index 0000000..1f2b7e9
--- /dev/null
+++ b/samples/expected/DOMPrint3.log
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="iso-8859-1" standalone="no" ?>
+<!DOCTYPE personnel SYSTEM "personal.dtd">
+<!-- @version: -->
+<personnel>
+
+  <person id="Big.Boss">
+    <name>
+      <family>Boss</family> 
+      <given>Big</given>
+    </name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"/>
+  </person>
+
+  <person id="one.worker">
+    <name>
+      <family>Worker</family> 
+      <given>One</given>
+    </name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="two.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Two</given>
+    </name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="three.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Three</given>
+    </name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="four.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Four</given>
+    </name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person id="five.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Five</given>
+    </name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+
+</personnel>
diff --git a/samples/expected/DOMPrint4.log b/samples/expected/DOMPrint4.log
new file mode 100644
index 0000000..a016923
--- /dev/null
+++ b/samples/expected/DOMPrint4.log
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
+<?proc-inst-1 'foo' ?>
+<personnel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="personal.xsd">
+
+  <person contr="false" id="Big.Boss">
+    <name xml:base="foo/bar">
+      <family xml:base="bar/bar">Boss</family> 
+      <given xml:base="car/bar">Big</given>
+      <?proc-inst-2 'foobar' ?>
+    </name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"/>
+  </person>
+
+  <person contr="false" id="one.worker" xml:base="/auto/bar">
+    <name xml:base="/car/foo/">
+      <family xml:base="bar/bar">Worker</family> 
+      <given>One</given>
+    </name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person contr="false" id="two.worker" xml:base="http://www.example.com/car/car">
+    <name xml:base="/bar/foo/">
+      <family xml:base="foo/bar">Worker</family> 
+      <given>Two</given>
+    </name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person contr="false" id="three.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Three</given>
+    </name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person contr="false" id="four.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Four</given>
+    </name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+  <person contr="false" id="five.worker">
+    <name>
+      <family>Worker</family> 
+      <given>Five</given>
+    </name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"/>
+  </person>
+
+
+</personnel>
diff --git a/samples/expected/DOMPrint5.log b/samples/expected/DOMPrint5.log
new file mode 100644
index 0000000..58c382e
--- /dev/null
+++ b/samples/expected/DOMPrint5.log
@@ -0,0 +1 @@
+<name><family>Boss</family> <given>Big</given></name><name><family>Worker</family> <given>One</given></name><name><family>Worker</family> <given>Two</given></name><name><family>Worker</family> <given>Three</given></name><name><family>Worker</family> <given>Four</given></name><name><family>Worker</family> <given>Five</given></name>
diff --git a/samples/expected/EnumVal.log b/samples/expected/EnumVal.log
new file mode 100644
index 0000000..a24ca1e
--- /dev/null
+++ b/samples/expected/EnumVal.log
@@ -0,0 +1,9 @@
+
+Usage:
+    EnumVal <XML file>
+
+This program parses the specified XML file, then shows how to
+enumerate the contents of the DTD Grammar. Essentially,
+shows how one can access the DTD information stored in internal
+data structures.
+
diff --git a/samples/expected/EnumVal1.log b/samples/expected/EnumVal1.log
new file mode 100644
index 0000000..a00b4ac
--- /dev/null
+++ b/samples/expected/EnumVal1.log
@@ -0,0 +1,34 @@
+
+ELEMENTS:
+----------------------------
+  Name: personnel
+  Content Model: (person)+
+
+  Name: person
+  Content Model: (name,email*,url*,link?)
+  Attributes:
+    Name:id, Type: ID
+
+  Name: name
+  Content Model: (#PCDATA|family|given)*
+
+  Name: email
+  Content Model: (#PCDATA)
+
+  Name: url
+  Content Model: EMPTY
+  Attributes:
+    Name:href, Type: CDATA
+
+  Name: link
+  Content Model: EMPTY
+  Attributes:
+    Name:manager, Type: IDREF(S)
+    Name:subordinates, Type: IDREF(S)
+
+  Name: family
+  Content Model: (#PCDATA)
+
+  Name: given
+  Content Model: (#PCDATA)
+
diff --git a/samples/expected/MemParse.log b/samples/expected/MemParse.log
new file mode 100644
index 0000000..93f0d35
--- /dev/null
+++ b/samples/expected/MemParse.log
@@ -0,0 +1,23 @@
+
+Finished parsing the memory buffer containing the following XML statements:
+
+<?xml version='1.0' encoding='ascii'?>
+<!DOCTYPE company [
+<!ELEMENT company     (product,category,developedAt)>
+<!ELEMENT product     (#PCDATA)>
+<!ELEMENT category    (#PCDATA)>
+<!ATTLIST category idea CDATA #IMPLIED>
+<!ELEMENT developedAt (#PCDATA)>
+]>
+
+<company>
+    <product>XML4C</product>
+    <category idea='great'>XML Parsing Tools</category>
+    <developedAt>
+      IBM Center for Java Technology, Silicon Valley, Cupertino, CA
+    </developedAt>
+</company>
+
+
+Parsing took{timing removed}(4 elements, 1 attributes, 16 spaces, 95 characters).
+
diff --git a/samples/expected/MemParse1.log b/samples/expected/MemParse1.log
new file mode 100644
index 0000000..5f445cc
--- /dev/null
+++ b/samples/expected/MemParse1.log
@@ -0,0 +1,23 @@
+
+Finished parsing the memory buffer containing the following XML statements:
+
+<?xml version='1.0' encoding='ascii'?>
+<!DOCTYPE company [
+<!ELEMENT company     (product,category,developedAt)>
+<!ELEMENT product     (#PCDATA)>
+<!ELEMENT category    (#PCDATA)>
+<!ATTLIST category idea CDATA #IMPLIED>
+<!ELEMENT developedAt (#PCDATA)>
+]>
+
+<company>
+    <product>XML4C</product>
+    <category idea='great'>XML Parsing Tools</category>
+    <developedAt>
+      IBM Center for Java Technology, Silicon Valley, Cupertino, CA
+    </developedAt>
+</company>
+
+
+Parsing took{timing removed}(4 elements, 1 attributes, 0 spaces, 111 characters).
+
diff --git a/samples/expected/PParse.log b/samples/expected/PParse.log
new file mode 100644
index 0000000..65e6af4
--- /dev/null
+++ b/samples/expected/PParse.log
@@ -0,0 +1,20 @@
+
+Usage:
+    PParse [options] <XML file>
+
+This program demonstrates the progressive parse capabilities of
+the parser system. It allows you to do a scanFirst() call followed by
+a loop which calls scanNext(). You can drop out when you've found what
+ever it is you want. In our little test, our event handler looks for
+16 new elements then sets a flag to indicate its found what it wants.
+At that point, our progressive parse loop exits.
+
+Options:
+      -v=xxx        - Validation scheme [always | never | auto*].
+      -n            - Enable namespace processing [default is off].
+      -s            - Enable schema processing [default is off].
+      -f            - Enable full schema constraint checking [default is off].
+      -?            - Show this help.
+
+  * = Default if not provided explicitly.
+
diff --git a/samples/expected/PParse1.log b/samples/expected/PParse1.log
new file mode 100644
index 0000000..553e03c
--- /dev/null
+++ b/samples/expected/PParse1.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems, 12 attrs, 134 spaces, 134 chars)
diff --git a/samples/expected/PParse2.log b/samples/expected/PParse2.log
new file mode 100644
index 0000000..48ddba3
--- /dev/null
+++ b/samples/expected/PParse2.log
@@ -0,0 +1 @@
+personal-schema.xml:{timing removed}(37 elems, 29 attrs, 140 spaces, 128 chars)
diff --git a/samples/expected/Redirect.log b/samples/expected/Redirect.log
new file mode 100644
index 0000000..9dcb535
--- /dev/null
+++ b/samples/expected/Redirect.log
@@ -0,0 +1,11 @@
+
+Usage:
+    Redirect <XML file>
+
+This program installs an entity resolver, traps the call to
+the external DTD file and redirects it to another application
+specific file which contains the actual dtd.
+
+The program then counts and reports the number of elements and
+attributes in the given XML file.
+
diff --git a/samples/expected/Redirect1.log b/samples/expected/Redirect1.log
new file mode 100644
index 0000000..d930474
--- /dev/null
+++ b/samples/expected/Redirect1.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems, 12 attrs, 0 spaces, 268 chars)
diff --git a/samples/expected/SAX2Count.log b/samples/expected/SAX2Count.log
new file mode 100644
index 0000000..de2435f
--- /dev/null
+++ b/samples/expected/SAX2Count.log
@@ -0,0 +1,25 @@
+
+Usage:
+    SAX2Count [options] <XML file | List file>
+
+This program invokes the SAX2XMLReader, and then prints the
+number of elements, attributes, spaces and characters found
+in each XML file, using SAX2 API.
+
+Options:
+    -l          Indicate the input file is a List File that has a list of xml files.
+                Default to off (Input file is an XML file).
+    -v=xxx      Validation scheme [always | never | auto*].
+    -f          Enable full schema constraint checking processing. Defaults to off.
+    -p          Enable namespace-prefixes feature. Defaults to off.
+    -n          Disable namespace processing. Defaults to on.
+                NOTE: THIS IS OPPOSITE FROM OTHER SAMPLES.
+    -s          Disable schema processing. Defaults to on.
+                NOTE: THIS IS OPPOSITE FROM OTHER SAMPLES.
+    -i          Disable identity constraint checking. Defaults to on.
+                NOTE: THIS IS OPPOSITE FROM OTHER SAMPLES.
+    -locale=ll_CC specify the locale, default: en_US.
+    -?          Show this help.
+
+  * = Default if not provided explicitly.
+
diff --git a/samples/expected/SAX2Count1.log b/samples/expected/SAX2Count1.log
new file mode 100644
index 0000000..d930474
--- /dev/null
+++ b/samples/expected/SAX2Count1.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems, 12 attrs, 0 spaces, 268 chars)
diff --git a/samples/expected/SAX2Count2.log b/samples/expected/SAX2Count2.log
new file mode 100644
index 0000000..553e03c
--- /dev/null
+++ b/samples/expected/SAX2Count2.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems, 12 attrs, 134 spaces, 134 chars)
diff --git a/samples/expected/SAX2Count3.log b/samples/expected/SAX2Count3.log
new file mode 100644
index 0000000..48ddba3
--- /dev/null
+++ b/samples/expected/SAX2Count3.log
@@ -0,0 +1 @@
+personal-schema.xml:{timing removed}(37 elems, 29 attrs, 140 spaces, 128 chars)
diff --git a/samples/expected/SAX2Print.log b/samples/expected/SAX2Print.log
new file mode 100644
index 0000000..f93e81d
--- /dev/null
+++ b/samples/expected/SAX2Print.log
@@ -0,0 +1,28 @@
+
+Usage:
+    SAX2Print [options] <XML file>
+
+This program invokes the SAX2XMLReader, and then prints the
+data returned by the various SAX2 handlers for the specified
+XML file.
+
+Options:
+    -u=xxx      Handle unrepresentable chars [fail | rep | ref*].
+    -v=xxx      Validation scheme [always | never | auto*].
+    -e          Expand Namespace Alias with URI's. Defaults to off.
+    -x=XXX      Use a particular encoding for output (LATIN1*).
+    -f          Enable full schema constraint checking processing. Defaults to off.
+    -p          Enable namespace-prefixes feature. Defaults to off.
+    -n          Disable namespace processing. Defaults to on.
+                NOTE: THIS IS OPPOSITE FROM OTHER SAMPLES.
+    -s          Disable schema processing. Defaults to on.
+                NOTE: THIS IS OPPOSITE FROM OTHER SAMPLES.
+    -sa         Print the attributes in alphabetic order. Defaults to off.
+    -?          Show this help.
+
+  * = Default if not provided explicitly.
+
+The parser has intrinsic support for the following encodings:
+    UTF-8, US-ASCII, ISO8859-1, UTF-16[BL]E, UCS-4[BL]E,
+    WINDOWS-1252, IBM1140, IBM037, IBM1047.
+
diff --git a/samples/expected/SAX2Print1.log b/samples/expected/SAX2Print1.log
new file mode 100644
index 0000000..602d4bf
--- /dev/null
+++ b/samples/expected/SAX2Print1.log
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<personnel>
+
+  <person id="Big.Boss">
+    <name><family>Boss</family> <given>Big</given></name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"></link>
+  </person>
+
+  <person id="one.worker">
+    <name><family>Worker</family> <given>One</given></name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="two.worker">
+    <name><family>Worker</family> <given>Two</given></name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="three.worker">
+    <name><family>Worker</family> <given>Three</given></name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="four.worker">
+    <name><family>Worker</family> <given>Four</given></name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="five.worker">
+    <name><family>Worker</family> <given>Five</given></name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+</personnel>
diff --git a/samples/expected/SAX2Print2.log b/samples/expected/SAX2Print2.log
new file mode 100644
index 0000000..602d4bf
--- /dev/null
+++ b/samples/expected/SAX2Print2.log
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<personnel>
+
+  <person id="Big.Boss">
+    <name><family>Boss</family> <given>Big</given></name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"></link>
+  </person>
+
+  <person id="one.worker">
+    <name><family>Worker</family> <given>One</given></name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="two.worker">
+    <name><family>Worker</family> <given>Two</given></name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="three.worker">
+    <name><family>Worker</family> <given>Three</given></name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="four.worker">
+    <name><family>Worker</family> <given>Four</given></name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="five.worker">
+    <name><family>Worker</family> <given>Five</given></name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+</personnel>
diff --git a/samples/expected/SAX2Print3.log b/samples/expected/SAX2Print3.log
new file mode 100644
index 0000000..2314836
--- /dev/null
+++ b/samples/expected/SAX2Print3.log
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<?proc-inst-1 'foo' ?><personnel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="personal.xsd">
+
+  <person id="Big.Boss" contr="false">
+    <name xml:base="foo/bar"><family xml:base="bar/bar">Boss</family> <given xml:base="car/bar">Big</given><?proc-inst-2 'foobar' ?></name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"></link>
+  </person>
+
+  <person id="one.worker" xml:base="/auto/bar" contr="false">
+    <name xml:base="/car/foo/"><family xml:base="bar/bar">Worker</family> <given>One</given></name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="two.worker" xml:base="http://www.example.com/car/car" contr="false">
+    <name xml:base="/bar/foo/"><family xml:base="foo/bar">Worker</family> <given>Two</given></name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="three.worker" contr="false">
+    <name><family>Worker</family> <given>Three</given></name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="four.worker" contr="false">
+    <name><family>Worker</family> <given>Four</given></name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="five.worker" contr="false">
+    <name><family>Worker</family> <given>Five</given></name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+</personnel>
diff --git a/samples/expected/SAX2Print4.log b/samples/expected/SAX2Print4.log
new file mode 100644
index 0000000..60dceff
--- /dev/null
+++ b/samples/expected/SAX2Print4.log
@@ -0,0 +1,108 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<xs:schema>
+
+ <xs:import namespace="http://www.w3.org/XML/1998/namespace">
+   <xs:annotation>
+     <xs:documentation>
+        The schemaLocation of the relevant file is
+        "http://www.w3.org/2001/xml.xsd" however,
+        we don't want to assume people are always
+        connected to the 'net when playing with this file.
+     </xs:documentation>
+   </xs:annotation>
+ </xs:import>
+
+ <xs:element name="personnel">
+  <xs:complexType>
+   <xs:sequence>
+     <xs:element ref="person" minOccurs="1" maxOccurs="unbounded"></xs:element>
+   </xs:sequence>
+  </xs:complexType>
+
+  <xs:unique name="unique1">
+   <xs:selector xpath="person"></xs:selector>
+   <xs:field xpath="name/given"></xs:field>
+   <xs:field xpath="name/family"></xs:field>
+  </xs:unique>
+  <xs:key name="empid">
+   <xs:selector xpath="person"></xs:selector>
+   <xs:field xpath="@id"></xs:field>
+  </xs:key>
+  <xs:keyref name="keyref1" refer="empid">
+   <xs:selector xpath="person"></xs:selector> 
+   <xs:field xpath="link/@manager"></xs:field>  
+  </xs:keyref>
+
+ </xs:element>
+
+ <xs:element name="person">
+  <xs:complexType>
+   <xs:sequence>
+     <xs:element ref="name"></xs:element>
+     <xs:element ref="email" minOccurs="0" maxOccurs="unbounded"></xs:element>
+     <xs:element ref="url" minOccurs="0" maxOccurs="unbounded"></xs:element>
+     <xs:element ref="link" minOccurs="0" maxOccurs="1"></xs:element>
+   </xs:sequence>
+   <xs:attribute name="id" type="xs:ID" use="required"></xs:attribute>
+   <xs:attribute name="note" type="xs:string"></xs:attribute>
+   <xs:attribute name="contr" default="false">
+    <xs:simpleType>
+     <xs:restriction base="xs:string">
+       <xs:enumeration value="true"></xs:enumeration>
+       <xs:enumeration value="false"></xs:enumeration>
+     </xs:restriction>
+    </xs:simpleType>
+   </xs:attribute>
+   <xs:attribute name="salary" type="xs:integer"></xs:attribute>
+   <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="skip"></xs:anyAttribute>
+  </xs:complexType>
+ </xs:element>
+
+ <xs:element name="name">
+  <xs:complexType>
+   <xs:all>
+    <xs:element ref="family"></xs:element>
+    <xs:element ref="given"></xs:element>
+   </xs:all>
+   <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="skip"></xs:anyAttribute>
+  </xs:complexType>
+ </xs:element>
+
+ <xs:element name="family">
+   <xs:complexType>
+     <xs:simpleContent>
+       <xs:extension base="xs:string">
+          <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="skip"></xs:anyAttribute>
+        </xs:extension>
+     </xs:simpleContent>
+   </xs:complexType>
+ </xs:element>
+
+ <xs:element name="given">
+   <xs:complexType>
+     <xs:simpleContent>
+       <xs:extension base="xs:string">
+          <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="skip"></xs:anyAttribute>
+        </xs:extension>
+     </xs:simpleContent>
+   </xs:complexType>
+ </xs:element>
+
+ <xs:element name="email" type="xs:string"></xs:element>
+
+ <xs:element name="url">
+  <xs:complexType>
+   <xs:attribute name="href" type="xs:string" default="http://"></xs:attribute>
+  </xs:complexType>
+ </xs:element>
+
+ <xs:element name="link">
+  <xs:complexType>
+   <xs:attribute name="manager" type="xs:IDREF"></xs:attribute>
+   <xs:attribute name="subordinates" type="xs:IDREFS"></xs:attribute>
+  </xs:complexType>
+ </xs:element>
+
+ <xs:notation name="gif" public="-//APP/Photoshop/4.0" system="photoshop.exe"></xs:notation>
+
+</xs:schema>
diff --git a/samples/expected/SAX2Print5.log b/samples/expected/SAX2Print5.log
new file mode 100644
index 0000000..8dd2f58
--- /dev/null
+++ b/samples/expected/SAX2Print5.log
@@ -0,0 +1,108 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<xs:schema>
+
+ <xs:import namespace="http://www.w3.org/XML/1998/namespace">
+   <xs:annotation>
+     <xs:documentation>
+        The schemaLocation of the relevant file is
+        "http://www.w3.org/2001/xml.xsd" however,
+        we don't want to assume people are always
+        connected to the 'net when playing with this file.
+     </xs:documentation>
+   </xs:annotation>
+ </xs:import>
+
+ <xs:element name="personnel">
+  <xs:complexType>
+   <xs:sequence>
+     <xs:element maxOccurs="unbounded" minOccurs="1" ref="person"></xs:element>
+   </xs:sequence>
+  </xs:complexType>
+
+  <xs:unique name="unique1">
+   <xs:selector xpath="person"></xs:selector>
+   <xs:field xpath="name/given"></xs:field>
+   <xs:field xpath="name/family"></xs:field>
+  </xs:unique>
+  <xs:key name="empid">
+   <xs:selector xpath="person"></xs:selector>
+   <xs:field xpath="@id"></xs:field>
+  </xs:key>
+  <xs:keyref name="keyref1" refer="empid">
+   <xs:selector xpath="person"></xs:selector> 
+   <xs:field xpath="link/@manager"></xs:field>  
+  </xs:keyref>
+
+ </xs:element>
+
+ <xs:element name="person">
+  <xs:complexType>
+   <xs:sequence>
+     <xs:element ref="name"></xs:element>
+     <xs:element maxOccurs="unbounded" minOccurs="0" ref="email"></xs:element>
+     <xs:element maxOccurs="unbounded" minOccurs="0" ref="url"></xs:element>
+     <xs:element maxOccurs="1" minOccurs="0" ref="link"></xs:element>
+   </xs:sequence>
+   <xs:attribute name="id" type="xs:ID" use="required"></xs:attribute>
+   <xs:attribute name="note" type="xs:string"></xs:attribute>
+   <xs:attribute default="false" name="contr">
+    <xs:simpleType>
+     <xs:restriction base="xs:string">
+       <xs:enumeration value="true"></xs:enumeration>
+       <xs:enumeration value="false"></xs:enumeration>
+     </xs:restriction>
+    </xs:simpleType>
+   </xs:attribute>
+   <xs:attribute name="salary" type="xs:integer"></xs:attribute>
+   <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="skip"></xs:anyAttribute>
+  </xs:complexType>
+ </xs:element>
+
+ <xs:element name="name">
+  <xs:complexType>
+   <xs:all>
+    <xs:element ref="family"></xs:element>
+    <xs:element ref="given"></xs:element>
+   </xs:all>
+   <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="skip"></xs:anyAttribute>
+  </xs:complexType>
+ </xs:element>
+
+ <xs:element name="family">
+   <xs:complexType>
+     <xs:simpleContent>
+       <xs:extension base="xs:string">
+          <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="skip"></xs:anyAttribute>
+        </xs:extension>
+     </xs:simpleContent>
+   </xs:complexType>
+ </xs:element>
+
+ <xs:element name="given">
+   <xs:complexType>
+     <xs:simpleContent>
+       <xs:extension base="xs:string">
+          <xs:anyAttribute namespace="http://www.w3.org/XML/1998/namespace" processContents="skip"></xs:anyAttribute>
+        </xs:extension>
+     </xs:simpleContent>
+   </xs:complexType>
+ </xs:element>
+
+ <xs:element name="email" type="xs:string"></xs:element>
+
+ <xs:element name="url">
+  <xs:complexType>
+   <xs:attribute default="http://" name="href" type="xs:string"></xs:attribute>
+  </xs:complexType>
+ </xs:element>
+
+ <xs:element name="link">
+  <xs:complexType>
+   <xs:attribute name="manager" type="xs:IDREF"></xs:attribute>
+   <xs:attribute name="subordinates" type="xs:IDREFS"></xs:attribute>
+  </xs:complexType>
+ </xs:element>
+
+ <xs:notation name="gif" public="-//APP/Photoshop/4.0" system="photoshop.exe"></xs:notation>
+
+</xs:schema>
diff --git a/samples/expected/SAXCount.log b/samples/expected/SAXCount.log
new file mode 100644
index 0000000..fd8abc4
--- /dev/null
+++ b/samples/expected/SAXCount.log
@@ -0,0 +1,20 @@
+
+Usage:
+    SAXCount [options] <XML file | List file>
+
+This program invokes the SAX Parser, and then prints the
+number of elements, attributes, spaces and characters found
+in each XML file, using SAX API.
+
+Options:
+    -l          Indicate the input file is a List File that has a list of xml files.
+                Default to off (Input file is an XML file).
+    -v=xxx      Validation scheme [always | never | auto*].
+    -n          Enable namespace processing. Defaults to off.
+    -s          Enable schema processing. Defaults to off.
+    -f          Enable full schema constraint checking. Defaults to off.
+    -locale=ll_CC specify the locale, default: en_US.
+    -?          Show this help.
+
+  * = Default if not provided explicitly.
+
diff --git a/samples/expected/SAXCount1.log b/samples/expected/SAXCount1.log
new file mode 100644
index 0000000..d930474
--- /dev/null
+++ b/samples/expected/SAXCount1.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems, 12 attrs, 0 spaces, 268 chars)
diff --git a/samples/expected/SAXCount2.log b/samples/expected/SAXCount2.log
new file mode 100644
index 0000000..553e03c
--- /dev/null
+++ b/samples/expected/SAXCount2.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems, 12 attrs, 134 spaces, 134 chars)
diff --git a/samples/expected/SAXCount3.log b/samples/expected/SAXCount3.log
new file mode 100644
index 0000000..48ddba3
--- /dev/null
+++ b/samples/expected/SAXCount3.log
@@ -0,0 +1 @@
+personal-schema.xml:{timing removed}(37 elems, 29 attrs, 140 spaces, 128 chars)
diff --git a/samples/expected/SAXPrint.log b/samples/expected/SAXPrint.log
new file mode 100644
index 0000000..b0a0c09
--- /dev/null
+++ b/samples/expected/SAXPrint.log
@@ -0,0 +1,23 @@
+
+Usage:
+    SAXPrint [options] <XML file>
+
+This program invokes the SAX Parser, and then prints the
+data returned by the various SAX handlers for the specified
+XML file.
+
+Options:
+    -u=xxx      Handle unrepresentable chars [fail | rep | ref*].
+    -v=xxx      Validation scheme [always | never | auto*].
+    -n          Enable namespace processing.
+    -s          Enable schema processing.
+    -f          Enable full schema constraint checking.
+    -x=XXX      Use a particular encoding for output (LATIN1*).
+    -?          Show this help.
+
+  * = Default if not provided explicitly.
+
+The parser has intrinsic support for the following encodings:
+    UTF-8, US-ASCII, ISO8859-1, UTF-16[BL]E, UCS-4[BL]E,
+    WINDOWS-1252, IBM1140, IBM037, IBM1047.
+
diff --git a/samples/expected/SAXPrint1.log b/samples/expected/SAXPrint1.log
new file mode 100644
index 0000000..602d4bf
--- /dev/null
+++ b/samples/expected/SAXPrint1.log
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<personnel>
+
+  <person id="Big.Boss">
+    <name><family>Boss</family> <given>Big</given></name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"></link>
+  </person>
+
+  <person id="one.worker">
+    <name><family>Worker</family> <given>One</given></name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="two.worker">
+    <name><family>Worker</family> <given>Two</given></name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="three.worker">
+    <name><family>Worker</family> <given>Three</given></name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="four.worker">
+    <name><family>Worker</family> <given>Four</given></name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="five.worker">
+    <name><family>Worker</family> <given>Five</given></name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+</personnel>
diff --git a/samples/expected/SAXPrint2.log b/samples/expected/SAXPrint2.log
new file mode 100644
index 0000000..602d4bf
--- /dev/null
+++ b/samples/expected/SAXPrint2.log
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<personnel>
+
+  <person id="Big.Boss">
+    <name><family>Boss</family> <given>Big</given></name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"></link>
+  </person>
+
+  <person id="one.worker">
+    <name><family>Worker</family> <given>One</given></name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="two.worker">
+    <name><family>Worker</family> <given>Two</given></name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="three.worker">
+    <name><family>Worker</family> <given>Three</given></name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="four.worker">
+    <name><family>Worker</family> <given>Four</given></name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="five.worker">
+    <name><family>Worker</family> <given>Five</given></name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+</personnel>
diff --git a/samples/expected/SAXPrint3.log b/samples/expected/SAXPrint3.log
new file mode 100644
index 0000000..2314836
--- /dev/null
+++ b/samples/expected/SAXPrint3.log
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<?proc-inst-1 'foo' ?><personnel xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="personal.xsd">
+
+  <person id="Big.Boss" contr="false">
+    <name xml:base="foo/bar"><family xml:base="bar/bar">Boss</family> <given xml:base="car/bar">Big</given><?proc-inst-2 'foobar' ?></name>
+    <email>chief@foo.com</email>
+    <link subordinates="one.worker two.worker three.worker four.worker five.worker"></link>
+  </person>
+
+  <person id="one.worker" xml:base="/auto/bar" contr="false">
+    <name xml:base="/car/foo/"><family xml:base="bar/bar">Worker</family> <given>One</given></name>
+    <email>one@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="two.worker" xml:base="http://www.example.com/car/car" contr="false">
+    <name xml:base="/bar/foo/"><family xml:base="foo/bar">Worker</family> <given>Two</given></name>
+    <email>two@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="three.worker" contr="false">
+    <name><family>Worker</family> <given>Three</given></name>
+    <email>three@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="four.worker" contr="false">
+    <name><family>Worker</family> <given>Four</given></name>
+    <email>four@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+  <person id="five.worker" contr="false">
+    <name><family>Worker</family> <given>Five</given></name>
+    <email>five@foo.com</email>
+    <link manager="Big.Boss"></link>
+  </person>
+
+</personnel>
diff --git a/samples/expected/SAXPrintLong.log b/samples/expected/SAXPrintLong.log
new file mode 100644
index 0000000..e279343
--- /dev/null
+++ b/samples/expected/SAXPrintLong.log
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="LATIN1"?>
+<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" soap:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><soap:Body><n:getQuoteResponse xmlns:n="urn:xmethods-delayed-quotes">< xsi:type="xsd:float">89.63</uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuubbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccoiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii></n:getQuoteResponse></soap:Body></soap:Envelope>
diff --git a/samples/expected/SEnumVal.log b/samples/expected/SEnumVal.log
new file mode 100644
index 0000000..44f99aa
--- /dev/null
+++ b/samples/expected/SEnumVal.log
@@ -0,0 +1,8 @@
+
+Usage:
+    SEnumVal <XML file>
+
+This program parses a file, then shows how to enumerate the
+contents of the Schema Grammar. Essentially, shows how one can
+access the Schema information stored in internal data structures.
+
diff --git a/samples/expected/SEnumVal1.log b/samples/expected/SEnumVal1.log
new file mode 100644
index 0000000..f049b87
--- /dev/null
+++ b/samples/expected/SEnumVal1.log
@@ -0,0 +1,108 @@
+Name:			personnel
+Model Type:		Children
+Create Reason:	Declared
+ContentType:	Sequence
+Content Model:	(person+)
+ComplexType:
+	TypeName:	,__AnonC0
+	ContentType:	Sequence
+--------------------------------------------
+Name:			person
+Model Type:		Children
+Create Reason:	Declared
+ContentType:	Sequence
+Content Model:	(name,email*,url*,link?)
+ComplexType:
+	TypeName:	,__AnonC1
+	ContentType:	Sequence
+Attributes:
+	Name:			id
+	Type:			ID
+	Default Type:	#REQUIRED
+	Base Datatype:		ID
+
+	Name:			note
+	Type:			CDATA
+	Default Type:	#IMPLIED
+	Base Datatype:		string
+
+	Name:			contr
+	Type:			CDATA
+	Default Type:	#DEFAULT
+	Value:			false
+	Base Datatype:		string
+Enumeration:		
+	true
+	false
+
+	Name:			salary
+	Type:			CDATA
+	Default Type:	#IMPLIED
+	Base Datatype:		Decimal
+Facets:		
+	fractionDigits=0
+	pattern=[+\-]?[0-9]+
+
+--------------------------------------------
+Name:			name
+Model Type:		Children
+Create Reason:	Declared
+ContentType:	All
+Content Model:	All(family,given)
+ComplexType:
+	TypeName:	,__AnonC2
+	ContentType:	All
+--------------------------------------------
+Name:			family
+Model Type:		Simple
+Create Reason:	Declared
+ComplexType:
+	TypeName:	,__AnonC3
+Base Datatype:		string
+--------------------------------------------
+Name:			given
+Model Type:		Simple
+Create Reason:	Declared
+ComplexType:
+	TypeName:	,__AnonC4
+Base Datatype:		string
+--------------------------------------------
+Name:			email
+Model Type:		Simple
+Create Reason:	Declared
+Base Datatype:		string
+--------------------------------------------
+Name:			url
+Model Type:		Empty
+Create Reason:	Declared
+Content Model:	EMPTY
+ComplexType:
+	TypeName:	,__AnonC5
+Attributes:
+	Name:			href
+	Type:			CDATA
+	Default Type:	#DEFAULT
+	Value:			http://
+	Base Datatype:		string
+
+--------------------------------------------
+Name:			link
+Model Type:		Empty
+Create Reason:	Declared
+Content Model:	EMPTY
+ComplexType:
+	TypeName:	,__AnonC6
+Attributes:
+	Name:			manager
+	Type:			IDREF
+	Default Type:	#IMPLIED
+	Base Datatype:		IDREF
+
+	Name:			subordinates
+	Type:			IDREFS
+	Default Type:	#IMPLIED
+	Base Datatype:		List
+Facets:		
+	minLength=1
+
+--------------------------------------------
diff --git a/samples/expected/StdInParse1.log b/samples/expected/StdInParse1.log
new file mode 100644
index 0000000..db6b518
--- /dev/null
+++ b/samples/expected/StdInParse1.log
@@ -0,0 +1 @@
+stdin:{timing removed}(37 elems, 12 attrs, 134 spaces, 134 chars)
diff --git a/samples/expected/StdInParse2.log b/samples/expected/StdInParse2.log
new file mode 100644
index 0000000..db6b518
--- /dev/null
+++ b/samples/expected/StdInParse2.log
@@ -0,0 +1 @@
+stdin:{timing removed}(37 elems, 12 attrs, 134 spaces, 134 chars)
diff --git a/samples/expected/StdInParse3.log b/samples/expected/StdInParse3.log
new file mode 100644
index 0000000..19ccb20
--- /dev/null
+++ b/samples/expected/StdInParse3.log
@@ -0,0 +1 @@
+stdin:{timing removed}(37 elems, 23 attrs, 0 spaces, 268 chars)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
new file mode 100644
index 0000000..e5f1c7e
--- /dev/null
+++ b/src/CMakeLists.txt
@@ -0,0 +1,1323 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+set(EXTRA_DIST
+  stricmp.h
+  strnicmp.h
+  towlower.h
+  towupper.h
+  xercesc/NLS
+  xercesc/util/Xerces_autoconf_config.hpp.cmake.in
+  xercesc/util/Xerces_autoconf_config.hpp.in
+  xercesc/util/Xerces_autoconf_config.msvc.hpp
+  xercesc/util/Xerces_autoconf_config.borland.hpp
+  xercesc/util/MsgLoaders/Win32
+  xercesc/util/MsgLoaders/ICU/resources
+)
+
+set(missing_sources
+  stricmp.c
+  stricmp.h
+  strnicmp.c
+  strnicmp.h
+  towlower.c
+  towlower.h
+  towupper.c
+  towupper.h
+)
+
+add_custom_target(xerces-c-missing SOURCES ${missing_sources})
+set_target_properties(xerces-c-missing PROPERTIES FOLDER "Library")
+
+#libxerces_c_la_LIBADD = ${LTLIBOBJS}
+
+#
+# Definition of sources/headers
+#
+
+#
+#	A line like the following will generate a list of headers
+#	for a given directory: (must be issued from src directory)
+#		find xercesc/framework -name '*.hpp' -exec echo {} \\ ";"
+#		find xercesc/framework -name '*.cpp' -exec echo {} \\ ";"
+#
+
+set(dom_headers
+  xercesc/dom/DOM.hpp
+  xercesc/dom/DOMAttr.hpp
+  xercesc/dom/DOMCDATASection.hpp
+  xercesc/dom/DOMCharacterData.hpp
+  xercesc/dom/DOMComment.hpp
+  xercesc/dom/DOMConfiguration.hpp
+  xercesc/dom/DOMDocument.hpp
+  xercesc/dom/DOMDocumentFragment.hpp
+  xercesc/dom/DOMDocumentRange.hpp
+  xercesc/dom/DOMDocumentTraversal.hpp
+  xercesc/dom/DOMDocumentType.hpp
+  xercesc/dom/DOMElement.hpp
+  xercesc/dom/DOMEntity.hpp
+  xercesc/dom/DOMEntityReference.hpp
+  xercesc/dom/DOMError.hpp
+  xercesc/dom/DOMErrorHandler.hpp
+  xercesc/dom/DOMException.hpp
+  xercesc/dom/DOMImplementation.hpp
+  xercesc/dom/DOMImplementationList.hpp
+  xercesc/dom/DOMImplementationLS.hpp
+  xercesc/dom/DOMImplementationRegistry.hpp
+  xercesc/dom/DOMImplementationSource.hpp
+  xercesc/dom/DOMLocator.hpp
+  xercesc/dom/DOMLSException.hpp
+  xercesc/dom/DOMLSInput.hpp
+  xercesc/dom/DOMLSOutput.hpp
+  xercesc/dom/DOMLSParser.hpp
+  xercesc/dom/DOMLSParserFilter.hpp
+  xercesc/dom/DOMLSResourceResolver.hpp
+  xercesc/dom/DOMLSSerializer.hpp
+  xercesc/dom/DOMLSSerializerFilter.hpp
+  xercesc/dom/DOMMemoryManager.hpp
+  xercesc/dom/DOMNamedNodeMap.hpp
+  xercesc/dom/DOMNode.hpp
+  xercesc/dom/DOMNodeFilter.hpp
+  xercesc/dom/DOMNodeIterator.hpp
+  xercesc/dom/DOMNodeList.hpp
+  xercesc/dom/DOMNotation.hpp
+  xercesc/dom/DOMProcessingInstruction.hpp
+  xercesc/dom/DOMPSVITypeInfo.hpp
+  xercesc/dom/DOMRange.hpp
+  xercesc/dom/DOMRangeException.hpp
+  xercesc/dom/DOMStringList.hpp
+  xercesc/dom/DOMText.hpp
+  xercesc/dom/DOMTreeWalker.hpp
+  xercesc/dom/DOMTypeInfo.hpp
+  xercesc/dom/DOMUserDataHandler.hpp
+  xercesc/dom/DOMXPathEvaluator.hpp
+  xercesc/dom/DOMXPathException.hpp
+  xercesc/dom/DOMXPathExpression.hpp
+  xercesc/dom/DOMXPathNamespace.hpp
+  xercesc/dom/DOMXPathNSResolver.hpp
+  xercesc/dom/DOMXPathResult.hpp
+  xercesc/dom/StDOMNode.hpp
+)
+
+set(dom_sources
+  xercesc/dom/DOMException.cpp
+  xercesc/dom/DOMLSException.cpp
+  xercesc/dom/DOMRangeException.cpp
+  xercesc/dom/DOMXPathException.cpp
+)
+
+
+set(domimpl_headers
+  xercesc/dom/impl/DOMAttrImpl.hpp
+  xercesc/dom/impl/DOMAttrMapImpl.hpp
+  xercesc/dom/impl/DOMAttrNSImpl.hpp
+  xercesc/dom/impl/DOMCasts.hpp
+  xercesc/dom/impl/DOMCDATASectionImpl.hpp
+  xercesc/dom/impl/DOMCharacterDataImpl.hpp
+  xercesc/dom/impl/DOMChildNode.hpp
+  xercesc/dom/impl/DOMCommentImpl.hpp
+  xercesc/dom/impl/DOMConfigurationImpl.hpp
+  xercesc/dom/impl/DOMDeepNodeListImpl.hpp
+  xercesc/dom/impl/DOMDeepNodeListPool.hpp
+  xercesc/dom/impl/DOMDeepNodeListPool.c
+  xercesc/dom/impl/DOMDocumentFragmentImpl.hpp
+  xercesc/dom/impl/DOMDocumentImpl.hpp
+  xercesc/dom/impl/DOMDocumentTypeImpl.hpp
+  xercesc/dom/impl/DOMElementImpl.hpp
+  xercesc/dom/impl/DOMElementNSImpl.hpp
+  xercesc/dom/impl/DOMEntityImpl.hpp
+  xercesc/dom/impl/DOMEntityReferenceImpl.hpp
+  xercesc/dom/impl/DOMErrorImpl.hpp
+  xercesc/dom/impl/DOMImplementationImpl.hpp
+  xercesc/dom/impl/DOMImplementationListImpl.hpp
+  xercesc/dom/impl/DOMLocatorImpl.hpp
+  xercesc/dom/impl/DOMNamedNodeMapImpl.hpp
+  xercesc/dom/impl/DOMNodeIDMap.hpp
+  xercesc/dom/impl/DOMNodeImpl.hpp
+  xercesc/dom/impl/DOMNodeIteratorImpl.hpp
+  xercesc/dom/impl/DOMNodeListImpl.hpp
+  xercesc/dom/impl/DOMNodeVector.hpp
+  xercesc/dom/impl/DOMNormalizer.hpp
+  xercesc/dom/impl/DOMNotationImpl.hpp
+  xercesc/dom/impl/DOMParentNode.hpp
+  xercesc/dom/impl/DOMProcessingInstructionImpl.hpp
+  xercesc/dom/impl/DOMRangeImpl.hpp
+  xercesc/dom/impl/DOMStringListImpl.hpp
+  xercesc/dom/impl/DOMStringPool.hpp
+  xercesc/dom/impl/DOMTextImpl.hpp
+  xercesc/dom/impl/DOMTreeWalkerImpl.hpp
+  xercesc/dom/impl/DOMTypeInfoImpl.hpp
+  xercesc/dom/impl/DOMLSSerializerImpl.hpp
+  xercesc/dom/impl/DOMLSInputImpl.hpp
+  xercesc/dom/impl/DOMLSOutputImpl.hpp
+  xercesc/dom/impl/DOMXPathExpressionImpl.hpp
+  xercesc/dom/impl/DOMXPathNSResolverImpl.hpp
+  xercesc/dom/impl/DOMXPathResultImpl.hpp
+  xercesc/dom/impl/XSDElementNSImpl.hpp
+)
+
+set(domimpl_sources
+  xercesc/dom/impl/DOMAttrImpl.cpp
+  xercesc/dom/impl/DOMAttrMapImpl.cpp
+  xercesc/dom/impl/DOMAttrNSImpl.cpp
+  xercesc/dom/impl/DOMCDATASectionImpl.cpp
+  xercesc/dom/impl/DOMCharacterDataImpl.cpp
+  xercesc/dom/impl/DOMChildNode.cpp
+  xercesc/dom/impl/DOMCommentImpl.cpp
+  xercesc/dom/impl/DOMConfigurationImpl.cpp
+  xercesc/dom/impl/DOMDeepNodeListImpl.cpp
+  xercesc/dom/impl/DOMDocumentFragmentImpl.cpp
+  xercesc/dom/impl/DOMDocumentImpl.cpp
+  xercesc/dom/impl/DOMDocumentTypeImpl.cpp
+  xercesc/dom/impl/DOMElementImpl.cpp
+  xercesc/dom/impl/DOMElementNSImpl.cpp
+  xercesc/dom/impl/DOMEntityImpl.cpp
+  xercesc/dom/impl/DOMEntityReferenceImpl.cpp
+  xercesc/dom/impl/DOMErrorImpl.cpp
+  xercesc/dom/impl/DOMImplementationImpl.cpp
+  xercesc/dom/impl/DOMImplementationListImpl.cpp
+  xercesc/dom/impl/DOMImplementationRegistry.cpp
+  xercesc/dom/impl/DOMLocatorImpl.cpp
+  xercesc/dom/impl/DOMNamedNodeMapImpl.cpp
+  xercesc/dom/impl/DOMNodeIDMap.cpp
+  xercesc/dom/impl/DOMNodeImpl.cpp
+  xercesc/dom/impl/DOMNodeIteratorImpl.cpp
+  xercesc/dom/impl/DOMNodeListImpl.cpp
+  xercesc/dom/impl/DOMNodeVector.cpp
+  xercesc/dom/impl/DOMNormalizer.cpp
+  xercesc/dom/impl/DOMNotationImpl.cpp
+  xercesc/dom/impl/DOMParentNode.cpp
+  xercesc/dom/impl/DOMProcessingInstructionImpl.cpp
+  xercesc/dom/impl/DOMRangeImpl.cpp
+  xercesc/dom/impl/DOMStringListImpl.cpp
+  xercesc/dom/impl/DOMStringPool.cpp
+  xercesc/dom/impl/DOMTextImpl.cpp
+  xercesc/dom/impl/DOMTreeWalkerImpl.cpp
+  xercesc/dom/impl/DOMTypeInfoImpl.cpp
+  xercesc/dom/impl/DOMLSSerializerImpl.cpp
+  xercesc/dom/impl/DOMLSInputImpl.cpp
+  xercesc/dom/impl/DOMLSOutputImpl.cpp
+  xercesc/dom/impl/DOMXPathExpressionImpl.cpp
+  xercesc/dom/impl/DOMXPathNSResolverImpl.cpp
+  xercesc/dom/impl/DOMXPathResultImpl.cpp
+  xercesc/dom/impl/XSDElementNSImpl.cpp
+)
+
+set(framework_headers
+  xercesc/framework/BinOutputStream.hpp
+  xercesc/framework/LocalFileFormatTarget.hpp
+  xercesc/framework/LocalFileInputSource.hpp
+  xercesc/framework/MemBufFormatTarget.hpp
+  xercesc/framework/MemBufInputSource.hpp
+  xercesc/framework/MemoryManager.hpp
+  xercesc/framework/psvi/PSVIAttribute.hpp
+  xercesc/framework/psvi/PSVIAttributeList.hpp
+  xercesc/framework/psvi/PSVIElement.hpp
+  xercesc/framework/psvi/PSVIHandler.hpp
+  xercesc/framework/psvi/PSVIItem.hpp
+  xercesc/framework/psvi/XSAnnotation.hpp
+  xercesc/framework/psvi/XSAttributeDeclaration.hpp
+  xercesc/framework/psvi/XSAttributeGroupDefinition.hpp
+  xercesc/framework/psvi/XSAttributeUse.hpp
+  xercesc/framework/psvi/XSComplexTypeDefinition.hpp
+  xercesc/framework/psvi/XSConstants.hpp
+  xercesc/framework/psvi/XSElementDeclaration.hpp
+  xercesc/framework/psvi/XSFacet.hpp
+  xercesc/framework/psvi/XSIDCDefinition.hpp
+  xercesc/framework/psvi/XSModel.hpp
+  xercesc/framework/psvi/XSModelGroup.hpp
+  xercesc/framework/psvi/XSModelGroupDefinition.hpp
+  xercesc/framework/psvi/XSMultiValueFacet.hpp
+  xercesc/framework/psvi/XSNamedMap.hpp
+  xercesc/framework/psvi/XSNamedMap.c
+  xercesc/framework/psvi/XSNamespaceItem.hpp
+  xercesc/framework/psvi/XSNotationDeclaration.hpp
+  xercesc/framework/psvi/XSObject.hpp
+  xercesc/framework/psvi/XSParticle.hpp
+  xercesc/framework/psvi/XSSimpleTypeDefinition.hpp
+  xercesc/framework/psvi/XSTypeDefinition.hpp
+  xercesc/framework/psvi/XSValue.hpp
+  xercesc/framework/psvi/XSWildcard.hpp
+  xercesc/framework/StdInInputSource.hpp
+  xercesc/framework/StdOutFormatTarget.hpp
+  xercesc/framework/URLInputSource.hpp
+  xercesc/framework/ValidationContext.hpp
+  xercesc/framework/Wrapper4DOMLSInput.hpp
+  xercesc/framework/Wrapper4InputSource.hpp
+  xercesc/framework/XMLAttDef.hpp
+  xercesc/framework/XMLAttDefList.hpp
+  xercesc/framework/XMLAttr.hpp
+  xercesc/framework/XMLBuffer.hpp
+  xercesc/framework/XMLBufferMgr.hpp
+  xercesc/framework/XMLContentModel.hpp
+  xercesc/framework/XMLDocumentHandler.hpp
+  xercesc/framework/XMLDTDDescription.hpp
+  xercesc/framework/XMLElementDecl.hpp
+  xercesc/framework/XMLEntityDecl.hpp
+  xercesc/framework/XMLEntityHandler.hpp
+  xercesc/framework/XMLErrorCodes.hpp
+  xercesc/framework/XMLErrorReporter.hpp
+  xercesc/framework/XMLFormatter.hpp
+  xercesc/framework/XMLGrammarDescription.hpp
+  xercesc/framework/XMLGrammarPool.hpp
+  xercesc/framework/XMLGrammarPoolImpl.hpp
+  xercesc/framework/XMLNotationDecl.hpp
+  xercesc/framework/XMLPScanToken.hpp
+  xercesc/framework/XMLRecognizer.hpp
+  xercesc/framework/XMLRefInfo.hpp
+  xercesc/framework/XMLSchemaDescription.hpp
+  xercesc/framework/XMLValidator.hpp
+  xercesc/framework/XMLValidityCodes.hpp
+)
+
+set(framework_sources
+  xercesc/framework/BinOutputStream.cpp
+  xercesc/framework/LocalFileFormatTarget.cpp
+  xercesc/framework/LocalFileInputSource.cpp
+  xercesc/framework/MemBufFormatTarget.cpp
+  xercesc/framework/MemBufInputSource.cpp
+  xercesc/framework/psvi/PSVIAttribute.cpp
+  xercesc/framework/psvi/PSVIAttributeList.cpp
+  xercesc/framework/psvi/PSVIElement.cpp
+  xercesc/framework/psvi/PSVIItem.cpp
+  xercesc/framework/psvi/XSAnnotation.cpp
+  xercesc/framework/psvi/XSAttributeDeclaration.cpp
+  xercesc/framework/psvi/XSAttributeGroupDefinition.cpp
+  xercesc/framework/psvi/XSAttributeUse.cpp
+  xercesc/framework/psvi/XSComplexTypeDefinition.cpp
+  xercesc/framework/psvi/XSElementDeclaration.cpp
+  xercesc/framework/psvi/XSFacet.cpp
+  xercesc/framework/psvi/XSIDCDefinition.cpp
+  xercesc/framework/psvi/XSModel.cpp
+  xercesc/framework/psvi/XSModelGroup.cpp
+  xercesc/framework/psvi/XSModelGroupDefinition.cpp
+  xercesc/framework/psvi/XSMultiValueFacet.cpp
+  xercesc/framework/psvi/XSNamespaceItem.cpp
+  xercesc/framework/psvi/XSNotationDeclaration.cpp
+  xercesc/framework/psvi/XSObject.cpp
+  xercesc/framework/psvi/XSParticle.cpp
+  xercesc/framework/psvi/XSSimpleTypeDefinition.cpp
+  xercesc/framework/psvi/XSTypeDefinition.cpp
+  xercesc/framework/psvi/XSValue.cpp
+  xercesc/framework/psvi/XSWildcard.cpp
+  xercesc/framework/StdInInputSource.cpp
+  xercesc/framework/StdOutFormatTarget.cpp
+  xercesc/framework/URLInputSource.cpp
+  xercesc/framework/Wrapper4DOMLSInput.cpp
+  xercesc/framework/Wrapper4InputSource.cpp
+  xercesc/framework/XMLAttDef.cpp
+  xercesc/framework/XMLAttDefList.cpp
+  xercesc/framework/XMLAttr.cpp
+  xercesc/framework/XMLBuffer.cpp
+  xercesc/framework/XMLBufferMgr.cpp
+  xercesc/framework/XMLContentModel.cpp
+  xercesc/framework/XMLDTDDescription.cpp
+  xercesc/framework/XMLElementDecl.cpp
+  xercesc/framework/XMLEntityDecl.cpp
+  xercesc/framework/XMLFormatter.cpp
+  xercesc/framework/XMLGrammarDescription.cpp
+  xercesc/framework/XMLGrammarPoolImpl.cpp
+  xercesc/framework/XMLNotationDecl.cpp
+  xercesc/framework/XMLRecognizer.cpp
+  xercesc/framework/XMLRefInfo.cpp
+  xercesc/framework/XMLSchemaDescription.cpp
+  xercesc/framework/XMLValidator.cpp
+)
+
+set(internal_headers
+  xercesc/internal/BinFileOutputStream.hpp
+  xercesc/internal/BinMemOutputStream.hpp
+  xercesc/internal/CharTypeTables.hpp
+  xercesc/internal/DGXMLScanner.hpp
+  xercesc/internal/ElemStack.hpp
+  xercesc/internal/EndOfEntityException.hpp
+  xercesc/internal/IANAEncodings.hpp
+  xercesc/internal/IGXMLScanner.hpp
+  xercesc/internal/MemoryManagerImpl.hpp
+  xercesc/internal/ReaderMgr.hpp
+  xercesc/internal/SGXMLScanner.hpp
+  xercesc/internal/ValidationContextImpl.hpp
+  xercesc/internal/VecAttributesImpl.hpp
+  xercesc/internal/VecAttrListImpl.hpp
+  xercesc/internal/WFXMLScanner.hpp
+  xercesc/internal/XMLInternalErrorHandler.hpp
+  xercesc/internal/XMLReader.hpp
+  xercesc/internal/XMLScanner.hpp
+  xercesc/internal/XMLScannerResolver.hpp
+  xercesc/internal/XProtoType.hpp
+  xercesc/internal/XSAXMLScanner.hpp
+  xercesc/internal/XSerializable.hpp
+  xercesc/internal/XSerializationException.hpp
+  xercesc/internal/XSerializeEngine.hpp
+  xercesc/internal/XSObjectFactory.hpp
+  xercesc/internal/XTemplateSerializer.hpp
+)
+
+set(internal_sources
+  xercesc/internal/BinFileOutputStream.cpp
+  xercesc/internal/BinMemOutputStream.cpp
+  xercesc/internal/DGXMLScanner.cpp
+  xercesc/internal/ElemStack.cpp
+  xercesc/internal/IGXMLScanner.cpp
+  xercesc/internal/IGXMLScanner2.cpp
+  xercesc/internal/MemoryManagerImpl.cpp
+  xercesc/internal/ReaderMgr.cpp
+  xercesc/internal/SGXMLScanner.cpp
+  xercesc/internal/ValidationContextImpl.cpp
+  xercesc/internal/VecAttributesImpl.cpp
+  xercesc/internal/VecAttrListImpl.cpp
+  xercesc/internal/WFXMLScanner.cpp
+  xercesc/internal/XMLReader.cpp
+  xercesc/internal/XMLScanner.cpp
+  xercesc/internal/XMLScannerResolver.cpp
+  xercesc/internal/XProtoType.cpp
+  xercesc/internal/XSAXMLScanner.cpp
+  xercesc/internal/XSerializeEngine.cpp
+  xercesc/internal/XSObjectFactory.cpp
+  xercesc/internal/XTemplateSerializer.cpp
+)
+
+set(parsers_headers
+  xercesc/parsers/AbstractDOMParser.hpp
+  xercesc/parsers/DOMLSParserImpl.hpp
+  xercesc/parsers/SAX2XMLFilterImpl.hpp
+  xercesc/parsers/SAX2XMLReaderImpl.hpp
+  xercesc/parsers/SAXParser.hpp
+  xercesc/parsers/XercesDOMParser.hpp
+)
+
+set(parsers_sources
+  xercesc/parsers/AbstractDOMParser.cpp
+  xercesc/parsers/DOMLSParserImpl.cpp
+  xercesc/parsers/SAX2XMLFilterImpl.cpp
+  xercesc/parsers/SAX2XMLReaderImpl.cpp
+  xercesc/parsers/SAXParser.cpp
+  xercesc/parsers/XercesDOMParser.cpp
+)
+
+set(sax_headers
+  xercesc/sax/AttributeList.hpp
+  xercesc/sax/DocumentHandler.hpp
+  xercesc/sax/DTDHandler.hpp
+  xercesc/sax/EntityResolver.hpp
+  xercesc/sax/ErrorHandler.hpp
+  xercesc/sax/HandlerBase.hpp
+  xercesc/sax/InputSource.hpp
+  xercesc/sax/Locator.hpp
+  xercesc/sax/Parser.hpp
+  xercesc/sax/SAXException.hpp
+  xercesc/sax/SAXParseException.hpp
+)
+
+set(sax_sources
+  xercesc/sax/Dummy.cpp
+  xercesc/sax/InputSource.cpp
+  xercesc/sax/SAXException.cpp
+  xercesc/sax/SAXParseException.cpp
+)
+
+set(sax2_headers
+  xercesc/sax2/Attributes.hpp
+  xercesc/sax2/ContentHandler.hpp
+  xercesc/sax2/DeclHandler.hpp
+  xercesc/sax2/DefaultHandler.hpp
+  xercesc/sax2/LexicalHandler.hpp
+  xercesc/sax2/SAX2XMLFilter.hpp
+  xercesc/sax2/SAX2XMLReader.hpp
+  xercesc/sax2/XMLReaderFactory.hpp
+)
+
+set(sax2_sources
+  xercesc/sax2/sax2Dummy.cpp
+)
+
+set(util_headers
+  xercesc/util/ArrayIndexOutOfBoundsException.hpp
+  xercesc/util/Base64.hpp
+  xercesc/util/BaseRefVectorOf.hpp
+  xercesc/util/BaseRefVectorOf.c
+  xercesc/util/BinFileInputStream.hpp
+  xercesc/util/BinInputStream.hpp
+  xercesc/util/BinMemInputStream.hpp
+  xercesc/util/BitOps.hpp
+  xercesc/util/BitSet.hpp
+  xercesc/util/CountedPointer.hpp
+  xercesc/util/CountedPointer.c
+  xercesc/util/DefaultPanicHandler.hpp
+  xercesc/util/EmptyStackException.hpp
+  xercesc/util/EncodingValidator.hpp
+  xercesc/util/FlagJanitor.hpp
+  xercesc/util/FlagJanitor.c
+  xercesc/util/Hashers.hpp
+  xercesc/util/Hash2KeysSetOf.hpp
+  xercesc/util/Hash2KeysSetOf.c
+  xercesc/util/HexBin.hpp
+  xercesc/util/IllegalArgumentException.hpp
+  xercesc/util/InvalidCastException.hpp
+  xercesc/util/IOException.hpp
+  xercesc/util/Janitor.hpp
+  xercesc/util/Janitor.c
+  xercesc/util/KeyRefPair.hpp
+  xercesc/util/KeyRefPair.c
+  xercesc/util/KeyValuePair.hpp
+  xercesc/util/KeyValuePair.c
+  xercesc/util/KVStringPair.hpp
+  xercesc/util/Mutexes.hpp
+  xercesc/util/LogicalPath.c
+  xercesc/util/NameIdPool.hpp
+  xercesc/util/NameIdPool.c
+  xercesc/util/NoSuchElementException.hpp
+  xercesc/util/NullPointerException.hpp
+  xercesc/util/NumberFormatException.hpp
+  xercesc/util/OutOfMemoryException.hpp
+  xercesc/util/PanicHandler.hpp
+  xercesc/util/ParseException.hpp
+  xercesc/util/PlatformUtils.hpp
+  xercesc/util/PSVIUni.hpp
+  xercesc/util/QName.hpp
+  xercesc/util/RefArrayOf.hpp
+  xercesc/util/RefArrayOf.c
+  xercesc/util/RefArrayVectorOf.hpp
+  xercesc/util/RefArrayVectorOf.c
+  xercesc/util/RefHash2KeysTableOf.hpp
+  xercesc/util/RefHash2KeysTableOf.c
+  xercesc/util/RefHash3KeysIdPool.hpp
+  xercesc/util/RefHash3KeysIdPool.c
+  xercesc/util/RefHashTableOf.hpp
+  xercesc/util/RefHashTableOf.c
+  xercesc/util/RefStackOf.hpp
+  xercesc/util/RefStackOf.c
+  xercesc/util/RefVectorOf.hpp
+  xercesc/util/RefVectorOf.c
+  xercesc/util/regx/ASCIIRangeFactory.hpp
+  xercesc/util/regx/BlockRangeFactory.hpp
+  xercesc/util/regx/BMPattern.hpp
+  xercesc/util/regx/CharToken.hpp
+  xercesc/util/regx/ClosureToken.hpp
+  xercesc/util/regx/ConcatToken.hpp
+  xercesc/util/regx/Match.hpp
+  xercesc/util/regx/Op.hpp
+  xercesc/util/regx/OpFactory.hpp
+  xercesc/util/regx/ParenToken.hpp
+  xercesc/util/regx/ParserForXMLSchema.hpp
+  xercesc/util/regx/RangeFactory.hpp
+  xercesc/util/regx/RangeToken.hpp
+  xercesc/util/regx/RangeTokenMap.hpp
+  xercesc/util/regx/RegularExpression.hpp
+  xercesc/util/regx/RegxDefs.hpp
+  xercesc/util/regx/RegxParser.hpp
+  xercesc/util/regx/RegxUtil.hpp
+  xercesc/util/regx/StringToken.hpp
+  xercesc/util/regx/Token.hpp
+  xercesc/util/regx/TokenFactory.hpp
+  xercesc/util/regx/TokenInc.hpp
+  xercesc/util/regx/UniCharTable.hpp
+  xercesc/util/regx/UnicodeRangeFactory.hpp
+  xercesc/util/regx/UnionToken.hpp
+  xercesc/util/regx/XMLRangeFactory.hpp
+  xercesc/util/regx/XMLUniCharacter.hpp
+  xercesc/util/RuntimeException.hpp
+  xercesc/util/SchemaDateTimeException.hpp
+  xercesc/util/SecurityManager.hpp
+  xercesc/util/StringPool.hpp
+  xercesc/util/SynchronizedStringPool.hpp
+  xercesc/util/TranscodingException.hpp
+  xercesc/util/TransENameMap.hpp
+  xercesc/util/TransENameMap.c
+  xercesc/util/TransService.hpp
+  xercesc/util/UnexpectedEOFException.hpp
+  xercesc/util/UnsupportedEncodingException.hpp
+  xercesc/util/UTFDataFormatException.hpp
+  xercesc/util/ValueArrayOf.hpp
+  xercesc/util/ValueArrayOf.c
+  xercesc/util/ValueHashTableOf.hpp
+  xercesc/util/ValueHashTableOf.c
+  xercesc/util/ValueStackOf.hpp
+  xercesc/util/ValueStackOf.c
+  xercesc/util/ValueVectorOf.hpp
+  xercesc/util/ValueVectorOf.c
+  xercesc/util/XercesDefs.hpp
+  xercesc/util/XercesVersion.hpp
+  xercesc/util/XMemory.hpp
+  xercesc/util/XML256TableTranscoder.hpp
+  xercesc/util/XML88591Transcoder.hpp
+  xercesc/util/XMLAbstractDoubleFloat.hpp
+  xercesc/util/XMLASCIITranscoder.hpp
+  xercesc/util/XMLBigDecimal.hpp
+  xercesc/util/XMLBigInteger.hpp
+  xercesc/util/XMLChar.hpp
+  xercesc/util/XMLChTranscoder.hpp
+  xercesc/util/XMLDateTime.hpp
+  xercesc/util/XMLDOMMsg.hpp
+  xercesc/util/XMLDouble.hpp
+  xercesc/util/XMLEBCDICTranscoder.hpp
+  xercesc/util/XMLEntityResolver.hpp
+  xercesc/util/XMLEnumerator.hpp
+  xercesc/util/XMLException.hpp
+  xercesc/util/XMLExceptMsgs.hpp
+  xercesc/util/XMLFileMgr.hpp
+  xercesc/util/XMLFloat.hpp
+  xercesc/util/XMLIBM1047Transcoder.hpp
+  xercesc/util/XMLIBM1140Transcoder.hpp
+  xercesc/util/XMLInitializer.hpp
+  xercesc/util/XMLInteger.hpp
+  xercesc/util/XMLMutexMgr.hpp
+  xercesc/util/XMLMsgLoader.hpp
+  xercesc/util/XMLNetAccessor.hpp
+  xercesc/util/XMLNumber.hpp
+  xercesc/util/XMLResourceIdentifier.hpp
+  xercesc/util/XMLString.hpp
+  xercesc/util/XMLStringTokenizer.hpp
+  xercesc/util/XMLUCS4Transcoder.hpp
+  xercesc/util/XMLUni.hpp
+  xercesc/util/XMLUniDefs.hpp
+  xercesc/util/XMLUri.hpp
+  xercesc/util/XMLURL.hpp
+  xercesc/util/XMLUTF16Transcoder.hpp
+  xercesc/util/XMLUTF8Transcoder.hpp
+  xercesc/util/XMLWin1252Transcoder.hpp
+)
+
+set(util_sources
+  xercesc/util/Base64.cpp
+  xercesc/util/BinFileInputStream.cpp
+  xercesc/util/BinInputStream.cpp
+  xercesc/util/BinMemInputStream.cpp
+  xercesc/util/BitSet.cpp
+  xercesc/util/DefaultPanicHandler.cpp
+  xercesc/util/EncodingValidator.cpp
+  xercesc/util/HeaderDummy.cpp
+  xercesc/util/HexBin.cpp
+  xercesc/util/KVStringPair.cpp
+  xercesc/util/Mutexes.cpp
+  xercesc/util/PanicHandler.cpp
+  xercesc/util/PlatformUtils.cpp
+  xercesc/util/PSVIUni.cpp
+  xercesc/util/QName.cpp
+  xercesc/util/regx/ASCIIRangeFactory.cpp
+  xercesc/util/regx/BlockRangeFactory.cpp
+  xercesc/util/regx/BMPattern.cpp
+  xercesc/util/regx/CharToken.cpp
+  xercesc/util/regx/ClosureToken.cpp
+  xercesc/util/regx/ConcatToken.cpp
+  xercesc/util/regx/Match.cpp
+  xercesc/util/regx/Op.cpp
+  xercesc/util/regx/OpFactory.cpp
+  xercesc/util/regx/ParenToken.cpp
+  xercesc/util/regx/ParserForXMLSchema.cpp
+  xercesc/util/regx/RangeFactory.cpp
+  xercesc/util/regx/RangeToken.cpp
+  xercesc/util/regx/RangeTokenMap.cpp
+  xercesc/util/regx/RegularExpression.cpp
+  xercesc/util/regx/RegxParser.cpp
+  xercesc/util/regx/RegxUtil.cpp
+  xercesc/util/regx/StringToken.cpp
+  xercesc/util/regx/Token.cpp
+  xercesc/util/regx/TokenFactory.cpp
+  xercesc/util/regx/UnicodeRangeFactory.cpp
+  xercesc/util/regx/UnionToken.cpp
+  xercesc/util/regx/XMLRangeFactory.cpp
+  xercesc/util/regx/XMLUniCharacter.cpp
+  xercesc/util/StringPool.cpp
+  xercesc/util/SynchronizedStringPool.cpp
+  xercesc/util/TransService.cpp
+  xercesc/util/XMemory.cpp
+  xercesc/util/XML256TableTranscoder.cpp
+  xercesc/util/XML88591Transcoder.cpp
+  xercesc/util/XMLAbstractDoubleFloat.cpp
+  xercesc/util/XMLASCIITranscoder.cpp
+  xercesc/util/XMLBigDecimal.cpp
+  xercesc/util/XMLBigInteger.cpp
+  xercesc/util/XMLChar.cpp
+  xercesc/util/XMLChTranscoder.cpp
+  xercesc/util/XMLDateTime.cpp
+  xercesc/util/XMLDouble.cpp
+  xercesc/util/XMLEBCDICTranscoder.cpp
+  xercesc/util/XMLException.cpp
+  xercesc/util/XMLFloat.cpp
+  xercesc/util/XMLIBM1047Transcoder.cpp
+  xercesc/util/XMLIBM1140Transcoder.cpp
+  xercesc/util/XMLInitializer.cpp
+  xercesc/util/XMLMsgLoader.cpp
+  xercesc/util/XMLNumber.cpp
+  xercesc/util/XMLString.cpp
+  xercesc/util/XMLStringTokenizer.cpp
+  xercesc/util/XMLUCS4Transcoder.cpp
+  xercesc/util/XMLUni.cpp
+  xercesc/util/XMLUri.cpp
+  xercesc/util/XMLURL.cpp
+  xercesc/util/XMLUTF16Transcoder.cpp
+  xercesc/util/XMLUTF8Transcoder.cpp
+  xercesc/util/XMLWin1252Transcoder.cpp
+)
+
+set(validators_headers
+  xercesc/validators/common/AllContentModel.hpp
+  xercesc/validators/common/CMAny.hpp
+  xercesc/validators/common/CMBinaryOp.hpp
+  xercesc/validators/common/CMLeaf.hpp
+  xercesc/validators/common/CMRepeatingLeaf.hpp
+  xercesc/validators/common/CMNode.hpp
+  xercesc/validators/common/CMStateSet.hpp
+  xercesc/validators/common/CMUnaryOp.hpp
+  xercesc/validators/common/ContentLeafNameTypeVector.hpp
+  xercesc/validators/common/ContentSpecNode.hpp
+  xercesc/validators/common/DFAContentModel.hpp
+  xercesc/validators/common/Grammar.hpp
+  xercesc/validators/common/GrammarResolver.hpp
+  xercesc/validators/common/MixedContentModel.hpp
+  xercesc/validators/common/SimpleContentModel.hpp
+  xercesc/validators/datatype/AbstractNumericFacetValidator.hpp
+  xercesc/validators/datatype/AbstractNumericValidator.hpp
+  xercesc/validators/datatype/AbstractStringValidator.hpp
+  xercesc/validators/datatype/AnySimpleTypeDatatypeValidator.hpp
+  xercesc/validators/datatype/AnyURIDatatypeValidator.hpp
+  xercesc/validators/datatype/Base64BinaryDatatypeValidator.hpp
+  xercesc/validators/datatype/BooleanDatatypeValidator.hpp
+  xercesc/validators/datatype/DatatypeValidator.hpp
+  xercesc/validators/datatype/DatatypeValidatorFactory.hpp
+  xercesc/validators/datatype/DateDatatypeValidator.hpp
+  xercesc/validators/datatype/DateTimeDatatypeValidator.hpp
+  xercesc/validators/datatype/DateTimeValidator.hpp
+  xercesc/validators/datatype/DayDatatypeValidator.hpp
+  xercesc/validators/datatype/DecimalDatatypeValidator.hpp
+  xercesc/validators/datatype/DoubleDatatypeValidator.hpp
+  xercesc/validators/datatype/DurationDatatypeValidator.hpp
+  xercesc/validators/datatype/ENTITYDatatypeValidator.hpp
+  xercesc/validators/datatype/FloatDatatypeValidator.hpp
+  xercesc/validators/datatype/HexBinaryDatatypeValidator.hpp
+  xercesc/validators/datatype/IDDatatypeValidator.hpp
+  xercesc/validators/datatype/IDREFDatatypeValidator.hpp
+  xercesc/validators/datatype/InvalidDatatypeFacetException.hpp
+  xercesc/validators/datatype/InvalidDatatypeValueException.hpp
+  xercesc/validators/datatype/ListDatatypeValidator.hpp
+  xercesc/validators/datatype/MonthDatatypeValidator.hpp
+  xercesc/validators/datatype/MonthDayDatatypeValidator.hpp
+  xercesc/validators/datatype/NameDatatypeValidator.hpp
+  xercesc/validators/datatype/NCNameDatatypeValidator.hpp
+  xercesc/validators/datatype/NOTATIONDatatypeValidator.hpp
+  xercesc/validators/datatype/QNameDatatypeValidator.hpp
+  xercesc/validators/datatype/StringDatatypeValidator.hpp
+  xercesc/validators/datatype/TimeDatatypeValidator.hpp
+  xercesc/validators/datatype/UnionDatatypeValidator.hpp
+  xercesc/validators/datatype/XMLCanRepGroup.hpp
+  xercesc/validators/datatype/YearDatatypeValidator.hpp
+  xercesc/validators/datatype/YearMonthDatatypeValidator.hpp
+  xercesc/validators/DTD/DocTypeHandler.hpp
+  xercesc/validators/DTD/DTDAttDef.hpp
+  xercesc/validators/DTD/DTDAttDefList.hpp
+  xercesc/validators/DTD/DTDElementDecl.hpp
+  xercesc/validators/DTD/DTDEntityDecl.hpp
+  xercesc/validators/DTD/DTDGrammar.hpp
+  xercesc/validators/DTD/DTDScanner.hpp
+  xercesc/validators/DTD/DTDValidator.hpp
+  xercesc/validators/DTD/XMLDTDDescriptionImpl.hpp
+  xercesc/validators/schema/ComplexTypeInfo.hpp
+  xercesc/validators/schema/GeneralAttributeCheck.hpp
+  xercesc/validators/schema/identity/FieldActivator.hpp
+  xercesc/validators/schema/identity/FieldValueMap.hpp
+  xercesc/validators/schema/identity/IC_Field.hpp
+  xercesc/validators/schema/identity/IC_Key.hpp
+  xercesc/validators/schema/identity/IC_KeyRef.hpp
+  xercesc/validators/schema/identity/IC_Selector.hpp
+  xercesc/validators/schema/identity/IC_Unique.hpp
+  xercesc/validators/schema/identity/IdentityConstraint.hpp
+  xercesc/validators/schema/identity/IdentityConstraintHandler.hpp
+  xercesc/validators/schema/identity/ValueStore.hpp
+  xercesc/validators/schema/identity/ValueStoreCache.hpp
+  xercesc/validators/schema/identity/XercesXPath.hpp
+  xercesc/validators/schema/identity/XPathException.hpp
+  xercesc/validators/schema/identity/XPathMatcher.hpp
+  xercesc/validators/schema/identity/XPathMatcherStack.hpp
+  xercesc/validators/schema/identity/XPathSymbols.hpp
+  xercesc/validators/schema/NamespaceScope.hpp
+  xercesc/validators/schema/PSVIDefs.hpp
+  xercesc/validators/schema/SchemaAttDef.hpp
+  xercesc/validators/schema/SchemaAttDefList.hpp
+  xercesc/validators/schema/SchemaElementDecl.hpp
+  xercesc/validators/schema/SchemaGrammar.hpp
+  xercesc/validators/schema/SchemaInfo.hpp
+  xercesc/validators/schema/SchemaSymbols.hpp
+  xercesc/validators/schema/SchemaValidator.hpp
+  xercesc/validators/schema/SubstitutionGroupComparator.hpp
+  xercesc/validators/schema/TraverseSchema.hpp
+  xercesc/validators/schema/XercesAttGroupInfo.hpp
+  xercesc/validators/schema/XercesElementWildcard.hpp
+  xercesc/validators/schema/XercesGroupInfo.hpp
+  xercesc/validators/schema/XMLSchemaDescriptionImpl.hpp
+  xercesc/validators/schema/XSDDOMParser.hpp
+  xercesc/validators/schema/XSDErrorReporter.hpp
+  xercesc/validators/schema/XSDLocator.hpp
+  xercesc/validators/schema/XUtil.hpp
+)
+
+set(validators_sources
+  xercesc/validators/common/AllContentModel.cpp
+  xercesc/validators/common/CMAny.cpp
+  xercesc/validators/common/CMBinaryOp.cpp
+  xercesc/validators/common/CMUnaryOp.cpp
+  xercesc/validators/common/ContentLeafNameTypeVector.cpp
+  xercesc/validators/common/ContentSpecNode.cpp
+  xercesc/validators/common/DFAContentModel.cpp
+  xercesc/validators/common/Grammar.cpp
+  xercesc/validators/common/GrammarResolver.cpp
+  xercesc/validators/common/MixedContentModel.cpp
+  xercesc/validators/common/SimpleContentModel.cpp
+  xercesc/validators/datatype/AbstractNumericFacetValidator.cpp
+  xercesc/validators/datatype/AbstractNumericValidator.cpp
+  xercesc/validators/datatype/AbstractStringValidator.cpp
+  xercesc/validators/datatype/AnySimpleTypeDatatypeValidator.cpp
+  xercesc/validators/datatype/AnyURIDatatypeValidator.cpp
+  xercesc/validators/datatype/Base64BinaryDatatypeValidator.cpp
+  xercesc/validators/datatype/BooleanDatatypeValidator.cpp
+  xercesc/validators/datatype/DatatypeValidator.cpp
+  xercesc/validators/datatype/DatatypeValidatorFactory.cpp
+  xercesc/validators/datatype/DateDatatypeValidator.cpp
+  xercesc/validators/datatype/DateTimeDatatypeValidator.cpp
+  xercesc/validators/datatype/DateTimeValidator.cpp
+  xercesc/validators/datatype/DayDatatypeValidator.cpp
+  xercesc/validators/datatype/DecimalDatatypeValidator.cpp
+  xercesc/validators/datatype/DoubleDatatypeValidator.cpp
+  xercesc/validators/datatype/DurationDatatypeValidator.cpp
+  xercesc/validators/datatype/ENTITYDatatypeValidator.cpp
+  xercesc/validators/datatype/FloatDatatypeValidator.cpp
+  xercesc/validators/datatype/HexBinaryDatatypeValidator.cpp
+  xercesc/validators/datatype/IDDatatypeValidator.cpp
+  xercesc/validators/datatype/IDREFDatatypeValidator.cpp
+  xercesc/validators/datatype/ListDatatypeValidator.cpp
+  xercesc/validators/datatype/MonthDatatypeValidator.cpp
+  xercesc/validators/datatype/MonthDayDatatypeValidator.cpp
+  xercesc/validators/datatype/NameDatatypeValidator.cpp
+  xercesc/validators/datatype/NCNameDatatypeValidator.cpp
+  xercesc/validators/datatype/NOTATIONDatatypeValidator.cpp
+  xercesc/validators/datatype/QNameDatatypeValidator.cpp
+  xercesc/validators/datatype/StringDatatypeValidator.cpp
+  xercesc/validators/datatype/TimeDatatypeValidator.cpp
+  xercesc/validators/datatype/UnionDatatypeValidator.cpp
+  xercesc/validators/datatype/XMLCanRepGroup.cpp
+  xercesc/validators/datatype/YearDatatypeValidator.cpp
+  xercesc/validators/datatype/YearMonthDatatypeValidator.cpp
+  xercesc/validators/DTD/DTDAttDef.cpp
+  xercesc/validators/DTD/DTDAttDefList.cpp
+  xercesc/validators/DTD/DTDElementDecl.cpp
+  xercesc/validators/DTD/DTDEntityDecl.cpp
+  xercesc/validators/DTD/DTDGrammar.cpp
+  xercesc/validators/DTD/DTDScanner.cpp
+  xercesc/validators/DTD/DTDValidator.cpp
+  xercesc/validators/DTD/XMLDTDDescriptionImpl.cpp
+  xercesc/validators/schema/ComplexTypeInfo.cpp
+  xercesc/validators/schema/GeneralAttributeCheck.cpp
+  xercesc/validators/schema/identity/FieldActivator.cpp
+  xercesc/validators/schema/identity/FieldValueMap.cpp
+  xercesc/validators/schema/identity/IC_Field.cpp
+  xercesc/validators/schema/identity/IC_Key.cpp
+  xercesc/validators/schema/identity/IC_KeyRef.cpp
+  xercesc/validators/schema/identity/IC_Selector.cpp
+  xercesc/validators/schema/identity/IC_Unique.cpp
+  xercesc/validators/schema/identity/IdentityConstraint.cpp
+  xercesc/validators/schema/identity/IdentityConstraintHandler.cpp
+  xercesc/validators/schema/identity/ValueStore.cpp
+  xercesc/validators/schema/identity/ValueStoreCache.cpp
+  xercesc/validators/schema/identity/XercesXPath.cpp
+  xercesc/validators/schema/identity/XPathMatcher.cpp
+  xercesc/validators/schema/identity/XPathMatcherStack.cpp
+  xercesc/validators/schema/identity/XPathSymbols.cpp
+  xercesc/validators/schema/NamespaceScope.cpp
+  xercesc/validators/schema/SchemaAttDef.cpp
+  xercesc/validators/schema/SchemaAttDefList.cpp
+  xercesc/validators/schema/SchemaElementDecl.cpp
+  xercesc/validators/schema/SchemaGrammar.cpp
+  xercesc/validators/schema/SchemaInfo.cpp
+  xercesc/validators/schema/SchemaSymbols.cpp
+  xercesc/validators/schema/SchemaValidator.cpp
+  xercesc/validators/schema/SubstitutionGroupComparator.cpp
+  xercesc/validators/schema/TraverseSchema.cpp
+  xercesc/validators/schema/XercesAttGroupInfo.cpp
+  xercesc/validators/schema/XercesElementWildcard.cpp
+  xercesc/validators/schema/XercesGroupInfo.cpp
+  xercesc/validators/schema/XMLSchemaDescriptionImpl.cpp
+  xercesc/validators/schema/XSDDOMParser.cpp
+  xercesc/validators/schema/XSDErrorReporter.cpp
+  xercesc/validators/schema/XSDLocator.cpp
+  xercesc/validators/schema/XUtil.cpp
+)
+
+set(xinclude_headers
+  xercesc/xinclude/XIncludeDOMDocumentProcessor.hpp
+  xercesc/xinclude/XIncludeLocation.hpp
+  xercesc/xinclude/XIncludeUtils.hpp
+)
+
+set(xinclude_sources
+  xercesc/xinclude/XIncludeDOMDocumentProcessor.cpp
+  xercesc/xinclude/XIncludeLocation.cpp
+  xercesc/xinclude/XIncludeUtils.cpp
+)
+
+set(icu_headers
+  xercesc/util/Transcoders/ICU/ICUTransService.hpp
+)
+
+set(icu_sources
+  xercesc/util/Transcoders/ICU/ICUTransService.cpp
+)
+
+set(gnuiconv_headers
+  xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.hpp
+)
+
+set(gnuiconv_sources
+  xercesc/util/Transcoders/IconvGNU/IconvGNUTransService.cpp
+)
+
+set(iconv_headers
+  xercesc/util/Transcoders/Iconv/IconvTransService.hpp
+)
+
+set(iconv_sources
+  xercesc/util/Transcoders/Iconv/IconvTransService.cpp
+)
+
+set(macosunicodeconverter_headers
+  xercesc/util/Transcoders/MacOSUnicodeConverter/MacOSUnicodeConverter.hpp
+)
+
+set(macosunicodeconverter_sources
+  xercesc/util/Transcoders/MacOSUnicodeConverter/MacOSUnicodeConverter.cpp
+)
+
+set(wintrans_headers
+  xercesc/util/Transcoders/Win32/Win32TransService.hpp
+)
+
+set(wintrans_sources
+  xercesc/util/Transcoders/Win32/Win32TransService.cpp
+)
+
+set(curl_headers
+  xercesc/util/NetAccessors/Curl/CurlNetAccessor.hpp
+  xercesc/util/NetAccessors/Curl/CurlURLInputStream.hpp
+)
+
+set(curl_sources
+  xercesc/util/NetAccessors/Curl/CurlNetAccessor.cpp
+  xercesc/util/NetAccessors/Curl/CurlURLInputStream.cpp
+)
+
+set(sockets_headers
+  xercesc/util/NetAccessors/Socket/SocketNetAccessor.hpp
+  xercesc/util/NetAccessors/Socket/UnixHTTPURLInputStream.hpp
+  xercesc/util/NetAccessors/BinHTTPInputStreamCommon.hpp
+)
+
+set(sockets_sources
+  xercesc/util/NetAccessors/Socket/SocketNetAccessor.cpp
+  xercesc/util/NetAccessors/Socket/UnixHTTPURLInputStream.cpp
+  xercesc/util/NetAccessors/BinHTTPInputStreamCommon.cpp
+)
+
+set(cfurl_headers
+  xercesc/util/NetAccessors/MacOSURLAccessCF/MacOSURLAccessCF.hpp
+  xercesc/util/NetAccessors/MacOSURLAccessCF/URLAccessCFBinInputStream.hpp
+)
+
+set(cfurl_sources
+  xercesc/util/NetAccessors/MacOSURLAccessCF/MacOSURLAccessCF.cpp
+  xercesc/util/NetAccessors/MacOSURLAccessCF/URLAccessCFBinInputStream.cpp
+)
+
+set(winsock_headers
+  xercesc/util/NetAccessors/WinSock/WinSockNetAccessor.hpp
+  xercesc/util/NetAccessors/WinSock/BinHTTPURLInputStream.hpp
+  xercesc/util/NetAccessors/BinHTTPInputStreamCommon.hpp
+)
+
+set(winsock_sources
+  xercesc/util/NetAccessors/WinSock/WinSockNetAccessor.cpp
+  xercesc/util/NetAccessors/WinSock/BinHTTPURLInputStream.cpp
+  xercesc/util/NetAccessors/BinHTTPInputStreamCommon.cpp
+)
+
+set(msginmemory_headers
+  xercesc/util/MsgLoaders/InMemory/InMemMsgLoader.hpp
+  xercesc/util/MsgLoaders/InMemory/XercesMessages_en_US.hpp
+)
+
+set(msginmemory_sources
+  xercesc/util/MsgLoaders/InMemory/InMemMsgLoader.cpp
+)
+
+set(msgicu_headers
+  xercesc/util/MsgLoaders/ICU/ICUMsgLoader.hpp
+)
+
+set(msgicu_sources
+  xercesc/util/MsgLoaders/ICU/ICUMsgLoader.cpp
+)
+
+set(msgicu_nodist_sources
+  "${CMAKE_CURRENT_BINARY_DIR}/xercesc_messages.c"
+  "${CMAKE_CURRENT_BINARY_DIR}/root_res.c"
+)
+
+set(msgiconv_headers
+  xercesc/util/MsgLoaders/MsgCatalog/MsgCatalogLoader.hpp
+  xercesc/util/MsgLoaders/MsgCatalog/XMLMsgCat_Ids.hpp
+)
+
+set(msgiconv_sources
+  xercesc/util/MsgLoaders/MsgCatalog/MsgCatalogLoader.cpp
+)
+
+set(posixfmgr_headers
+  xercesc/util/FileManagers/PosixFileMgr.hpp
+)
+
+set(posixfmgr_sources
+  xercesc/util/FileManagers/PosixFileMgr.cpp
+)
+
+set(winfmgr_headers
+  xercesc/util/FileManagers/WindowsFileMgr.hpp
+)
+
+set(winfmgr_sources
+  xercesc/util/FileManagers/WindowsFileMgr.cpp
+)
+
+set(nothreadmmgr_headers
+  xercesc/util/MutexManagers/NoThreadMutexMgr.hpp
+)
+
+set(nothreadmmgr_sources
+  xercesc/util/MutexManagers/NoThreadMutexMgr.cpp
+)
+
+set(posixmmgr_headers
+  xercesc/util/MutexManagers/PosixMutexMgr.hpp
+)
+
+set(posixmmgr_sources
+  xercesc/util/MutexManagers/PosixMutexMgr.cpp
+)
+
+set(winmmgr_headers
+  xercesc/util/MutexManagers/WindowsMutexMgr.hpp
+)
+
+set(winmmgr_sources
+  xercesc/util/MutexManagers/WindowsMutexMgr.cpp
+)
+
+set(libxerces_c_SOURCES
+  ${util_sources}
+  ${dom_sources}
+  ${domimpl_sources}
+  ${framework_sources}
+  ${internal_sources}
+  ${parsers_sources}
+  ${sax_sources}
+  ${sax2_sources}
+  ${validators_sources}
+  ${xinclude_sources}
+)
+
+set(libxerces_c_HEADERS
+  ${util_headers}
+  ${dom_headers}
+  ${domimpl_headers}
+  ${framework_headers}
+  ${internal_headers}
+  ${parsers_headers}
+  ${sax_headers}
+  ${sax2_headers}
+  ${validators_headers}
+  ${xinclude_headers}
+)
+
+# Add replacement functions
+if(NOT HAVE_STRICMP)
+  list(APPEND xerces_replacement_funcs stricmp.c)
+endif()
+if(NOT HAVE_STRNICMP)
+  list(APPEND xerces_replacement_funcs strnicmp.c)
+endif()
+if(NOT HAVE_TOWLOWER)
+  list(APPEND xerces_replacement_funcs towlower.c)
+endif()
+if(NOT HAVE_TOWUPPER)
+  list(APPEND xerces_replacement_funcs towupper.c)
+endif()
+list(APPEND libxerces_c_SOURCES ${xerces_replacement_funcs})
+
+# NetAccessors, conditionally built based on selection
+if(SOCKET_LIBRARY)
+  list(APPEND libxerces_c_DEPS ${SOCKET_LIBRARY})
+endif()
+if(NSL_LIBRARY)
+  list(APPEND libxerces_c_DEPS ${NSL_LIBRARY})
+endif()
+
+if(XERCES_USE_NETACCESSOR_CURL)
+  list(APPEND libxerces_c_SOURCES ${curl_sources})
+  list(APPEND libxerces_c_HEADERS ${curl_headers})
+  list(APPEND libxerces_c_DEPS ${CURL_LIBRARIES})
+  include_directories(${CURL_INCLUDE_DIRS})
+endif()
+
+if(XERCES_USE_NETACCESSOR_SOCKET)
+  list(APPEND libxerces_c_SOURCES ${sockets_sources})
+  list(APPEND libxerces_c_HEADERS ${sockets_headers})
+endif()
+
+if(XERCES_USE_NETACCESSOR_CFURL)
+  list(APPEND libxerces_c_SOURCES ${cfurl_sources})
+  list(APPEND libxerces_c_HEADERS ${cfurl_headers})
+  list(APPEND libxerces_c_DEPS ${CORE_SERVICES_LIBRARY})
+endif()
+
+if(XERCES_USE_NETACCESSOR_WINSOCK)
+  list(APPEND libxerces_c_SOURCES ${winsock_sources})
+  list(APPEND libxerces_c_HEADERS ${winsock_headers})
+endif()
+
+
+# Transcoders, conditionally built based on selection
+#
+if(XERCES_USE_TRANSCODER_ICU)
+  list(APPEND libxerces_c_SOURCES ${icu_sources})
+  list(APPEND libxerces_c_HEADERS ${icu_headers})
+  list(APPEND libxerces_c_DEPS ICU::uc ICU::data)
+endif()
+
+if(XERCES_USE_TRANSCODER_GNUICONV)
+  list(APPEND libxerces_c_SOURCES ${gnuiconv_sources})
+  list(APPEND libxerces_c_HEADERS ${gnuiconv_headers})
+endif()
+
+if(XERCES_USE_TRANSCODER_ICONV)
+  list(APPEND libxerces_c_SOURCES ${iconv_sources})
+  list(APPEND libxerces_c_HEADERS ${iconv_headers})
+endif()
+
+if(XERCES_USE_TRANSCODER_MACOSUNICODECONVERTER)
+  list(APPEND libxerces_c_SOURCES ${macosunicodeconverter_sources})
+  list(APPEND libxerces_c_HEADERS ${macosunicodeconverter_headers})
+  list(APPEND libxerces_c_DEPS ${CORE_SERVICES_LIBRARY})
+endif()
+
+if(XERCES_USE_TRANSCODER_WINDOWS)
+  list(APPEND libxerces_c_SOURCES ${wintrans_sources})
+  list(APPEND libxerces_c_HEADERS ${wintrans_headers})
+endif()
+
+
+# MsgLoaders, conditionally built based on selection
+#
+if(XERCES_USE_MSGLOADER_INMEMORY)
+  list(APPEND libxerces_c_SOURCES ${msginmemory_sources})
+  list(APPEND libxerces_c_HEADERS ${msginmemory_headers})
+endif()
+
+if(XERCES_USE_MSGLOADER_ICU)
+  list(APPEND libxerces_c_SOURCES ${msgicu_sources} ${msgicu_nodist_sources})
+  list(APPEND libxerces_c_HEADERS ${msgicu_headers})
+  list(APPEND libxerces_c_DEPS ICU::uc ICU::data)
+
+  # Resource shortname
+  set(PKGNAME xercesc_messages_${LIB_INTERFACE_VER_U})
+
+  add_custom_command(
+    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/xercesc_messages.c"
+    COMMAND "${ICU_GENCMN_EXECUTABLE}" --name "${PKGNAME}" -S "${PKGNAME}_dat.c" -d .
+    "${CMAKE_CURRENT_SOURCE_DIR}/xercesc/util/MsgLoaders/ICU/resources/res-file-list.txt"
+    COMMAND "${CMAKE_COMMAND}" -E rename "${PKGNAME}_dat.c" xercesc_messages.c
+    DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/xercesc/util/MsgLoaders/ICU/resources/res-file-list.txt"
+    WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
+
+  add_custom_command(
+    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/root.res"
+    COMMAND "${ICU_GENRB_EXECUTABLE}" -d .
+    "${CMAKE_CURRENT_SOURCE_DIR}/xercesc/util/MsgLoaders/ICU/resources/root.txt"
+    DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/xercesc/util/MsgLoaders/ICU/resources/root.txt"
+    WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
+
+  add_custom_command(
+    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/root_res.c"
+    COMMAND "${ICU_GENCCODE_EXECUTABLE}" --name ${PKGNAME} -d . root.res
+    DEPENDS "${CMAKE_CURRENT_BINARY_DIR}/root.res"
+    WORKING_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
+
+  add_custom_target(
+    genicu
+    DEPENDS xercesc_messages.c root_res.c)
+  set_target_properties(genicu PROPERTIES FOLDER "Library")
+endif()
+
+if(XERCES_USE_MSGLOADER_ICONV)
+  list(APPEND libxerces_c_SOURCES ${msgiconv_sources})
+  list(APPEND libxerces_c_HEADERS ${msgiconv_headers})
+
+  set(PKGNAME XercesMessages)
+
+  set(RESTARGET ${CMAKE_CURRENT_BINARY_DIR}/${PKGNAME}_en_US.cat)
+  set(RESFILE ${CMAKE_CURRENT_SOURCE_DIR}/xercesc/util/MsgLoaders/MsgCatalog/XercesMessages_en_US.Msg)
+
+  add_custom_command(
+    OUTPUT ${RESTARGET}
+    COMMAND gencat ${RESTARGET} ${RESFILE}
+    DEPENDS ${RESFILE})
+
+  add_custom_target(
+    gencat ALL
+    DEPENDS ${RESTARGET})
+  set_target_properties(gencat PROPERTIES FOLDER "Library")
+
+  install(
+    FILES "${RESTARGET}"
+    DESTINATION "${CMAKE_INSTALL_PREFIX}/msg"
+    COMPONENT "runtime")
+endif()
+
+# Mutex Managers, conditionally built based on selection
+#
+if(XERCES_USE_MUTEXMGR_NOTHREAD)
+  list(APPEND libxerces_c_SOURCES ${nothreadmmgr_sources})
+  list(APPEND libxerces_c_HEADERS ${nothreadmmgr_headers})
+endif()
+
+if(XERCES_USE_MUTEXMGR_POSIX)
+  list(APPEND libxerces_c_SOURCES ${posixmmgr_sources})
+  list(APPEND libxerces_c_HEADERS ${posixmmgr_headers})
+  list(APPEND libxerces_c_DEPS Threads::Threads)
+endif()
+
+if(XERCES_USE_MUTEXMGR_WINDOWS)
+  list(APPEND libxerces_c_SOURCES ${winmmgr_sources})
+  list(APPEND libxerces_c_HEADERS ${winmmgr_headers})
+endif()
+
+
+# File Managers, conditionally built based on selection
+#
+if(XERCES_USE_FILEMGR_POSIX)
+  list(APPEND libxerces_c_SOURCES ${posixfmgr_sources})
+  list(APPEND libxerces_c_HEADERS ${posixfmgr_headers})
+endif()
+
+if(XERCES_USE_FILEMGR_WINDOWS)
+  list(APPEND libxerces_c_SOURCES ${winfmgr_sources})
+  list(APPEND libxerces_c_HEADERS ${winfmgr_headers})
+endif()
+
+# Definitions required for building
+add_definitions(
+  -DHAVE_CONFIG_H
+  -DXERCES_BUILDING_LIBRARY
+)
+
+# Search the project binary dir for config.h
+include_directories(
+  ${PROJECT_BINARY_DIR}
+  ${CMAKE_CURRENT_SOURCE_DIR}
+  ${CMAKE_CURRENT_BINARY_DIR}
+)
+
+add_custom_target(xerces-c-headers SOURCES ${libxerces_c_HEADERS})
+set_target_properties(xerces-c-headers PROPERTIES FOLDER "Library")
+
+add_library(xerces-c ${libxerces_c_SOURCES})
+target_link_libraries(xerces-c ${libxerces_c_DEPS})
+set_target_properties(xerces-c PROPERTIES SOVERSION ${LIB_INTERFACE_VER_D})
+set_target_properties(xerces-c PROPERTIES FOLDER "Library")
+if(NOT CYGWIN)
+    # This property causes shared libraries on Linux to have the full
+    # version encoded into their final filename.  We disable this on
+    # Cygwin because it causes xerces-c-${XERCES_C_FULL_VERSION}.dll
+    # to be created when xerces-c.dll seems to be the default.
+    set_target_properties(xerces-c PROPERTIES VERSION ${LIB_INTERFACE_VER_D})
+endif()
+
+if(WIN32)
+  set(xerces_config_dir "cmake")
+else()
+  set(xerces_config_dir "${CMAKE_INSTALL_LIBDIR}/cmake/XercesC")
+endif()
+
+install(TARGETS xerces-c
+  EXPORT XercesCConfigInternal
+  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+  COMPONENT "runtime"
+  INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
+install(EXPORT XercesCConfigInternal
+        DESTINATION "${xerces_config_dir}"
+        NAMESPACE "xerces_"
+        COMPONENT "development")
+
+include(CMakePackageConfigHelpers)
+configure_package_config_file(
+  "${CMAKE_CURRENT_SOURCE_DIR}/XercesCConfig.cmake.in"
+  "${CMAKE_CURRENT_BINARY_DIR}/XercesCConfig.cmake"
+  INSTALL_DESTINATION "${xerces_config_dir}")
+write_basic_package_version_file(
+  ${CMAKE_CURRENT_BINARY_DIR}/XercesCConfigVersion.cmake
+  VERSION "${PROJECT_VERSION}"
+  COMPATIBILITY SameMajorVersion)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/XercesCConfig.cmake
+              ${CMAKE_CURRENT_BINARY_DIR}/XercesCConfigVersion.cmake
+              DESTINATION "${xerces_config_dir}")
+
+foreach(hdr IN LISTS libxerces_c_HEADERS)
+  get_filename_component(hdrdir "${hdr}" DIRECTORY)
+  install(
+    FILES "${hdr}"
+    DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/${hdrdir}"
+    COMPONENT "development")
+endforeach()
+
+# Source file grouping (for IDE project layout)
+set(source_files ${libxerces_c_SOURCES} ${libxerces_c_HEADERS})
+list(SORT source_files)
+unset(group_dir)
+unset(group_files)
+foreach(file IN LISTS source_files)
+  get_filename_component(dir "${file}" PATH)
+  if(group_dir AND NOT dir STREQUAL group_dir)
+    if(group_files)
+      source_group("${group_dir}" FILES ${group_files})
+    endif()
+    unset(group_files)
+  endif()
+  list(APPEND group_files "${file}")
+  set(group_dir "${dir}")
+endforeach()
+if(group_files)
+  source_group("${group_dir}" FILES ${group_files})
+endif()
+unset(group_dir)
+unset(group_files)
+
+# Make sure cmake-generated Xerces_autoconf_config.hpp ends up in a
+# proper place when installed.
+install(
+  FILES "${CMAKE_CURRENT_BINARY_DIR}/xercesc/util/Xerces_autoconf_config.hpp"
+  DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/xercesc/util"
+  COMPONENT "development")
diff --git a/src/Makefile.am b/src/Makefile.am
index 6cad819..7ec83d6 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -56,8 +56,11 @@ nodist_autoconfheaders_HEADERS = ${top_builddir}/src/xercesc/util/Xerces_autocon
 
 # Compatibility library.
 #
-EXTRA_DIST = stricmp.h strnicmp.h towlower.h towupper.h \
+EXTRA_DIST = CMakeLists.txt \
+        XercesCConfig.cmake.in \
+        stricmp.h strnicmp.h towlower.h towupper.h \
         xercesc/NLS \
+        xercesc/util/Xerces_autoconf_config.hpp.cmake.in \
 	xercesc/util/Xerces_autoconf_config.msvc.hpp \
 	xercesc/util/Xerces_autoconf_config.borland.hpp \
         xercesc/util/MsgLoaders/Win32 \
diff --git a/src/XercesCConfig.cmake.in b/src/XercesCConfig.cmake.in
new file mode 100644
index 0000000..aa8fc2e
--- /dev/null
+++ b/src/XercesCConfig.cmake.in
@@ -0,0 +1,11 @@
+@PACKAGE_INIT@
+
+include(${CMAKE_CURRENT_LIST_DIR}/XercesCConfigInternal.cmake)
+
+add_library(XercesC::XercesC INTERFACE IMPORTED)
+set_target_properties(XercesC::XercesC PROPERTIES INTERFACE_LINK_LIBRARIES xerces_xerces-c)
+
+# For compatibility with FindXercesC.
+set(XercesC_VERSION "@xerces-c_VERSION@")
+get_target_property(XercesC_INCLUDE_DIRS xerces_xerces-c INTERFACE_INCLUDE_DIRECTORIES)
+set(XercesC_LIBRARIES XercesC::XercesC)
diff --git a/src/xercesc/util/Xerces_autoconf_config.hpp.cmake.in b/src/xercesc/util/Xerces_autoconf_config.hpp.cmake.in
new file mode 100644
index 0000000..18b73c7
--- /dev/null
+++ b/src/xercesc/util/Xerces_autoconf_config.hpp.cmake.in
@@ -0,0 +1,151 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ * 
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/*
+ * $Id: Xerces_autoconf_config.hpp.in 834826 2009-11-11 10:03:53Z borisk $
+ */
+
+//
+// There are two primary xerces configuration header files:
+//
+//	Xerces_autoconf_config.hpp
+//
+//      For configuration of items that must be accessable
+//	through public headers. This file has limited information
+//	and carefully works to avoid collision of macro names, etc.
+//
+//	This file is included by XercesDefs.h. In the event
+//	of a non-configured platform, a similar header specific
+//	to the platform will be included instead.
+//
+//	config.h
+//
+//      Generalized cmake-generated header file, with much more
+//	information, used to supply configuration information
+//	for use in implementation files.
+//
+// For CMake-based builds, this header is configured by cmake from the
+// .cmake.in template file of the same name.
+
+
+#ifndef XERCES_AUTOCONFIG_CONFIG_HPP
+#define XERCES_AUTOCONFIG_CONFIG_HPP
+
+// ---------------------------------------------------------------------------
+//  These defines are set by cmake as appropriate for the platform.
+// ---------------------------------------------------------------------------
+#define XERCES_AUTOCONF 1
+#cmakedefine XERCES_HAVE_SYS_TYPES_H 1
+#cmakedefine XERCES_HAVE_CSTDINT 1
+#cmakedefine XERCES_HAVE_STDINT_H 1
+#cmakedefine XERCES_HAVE_INTTYPES_H 1
+#cmakedefine XERCES_HAVE_INTRIN_H 1
+#cmakedefine XERCES_HAVE_EMMINTRIN_H 1
+#cmakedefine XERCES_INCLUDE_WCHAR_H 1
+
+#define XERCES_S16BIT_INT @XERCES_S16BIT_INT@
+#define XERCES_S32BIT_INT @XERCES_S32BIT_INT@
+#define XERCES_S64BIT_INT @XERCES_S64BIT_INT@
+#define XERCES_U16BIT_INT @XERCES_U16BIT_INT@
+#define XERCES_U32BIT_INT @XERCES_U32BIT_INT@
+#define XERCES_U64BIT_INT @XERCES_U64BIT_INT@
+#define XERCES_XMLCH_T @XERCES_XMLCH_T@
+#define XERCES_SIZE_T @XERCES_SIZE_T@
+#define XERCES_SSIZE_T @XERCES_SSIZE_T@
+
+#cmakedefine XERCES_HAS_CPP_NAMESPACE 1
+#cmakedefine XERCES_STD_NAMESPACE 1
+#cmakedefine XERCES_NEW_IOSTREAMS 1
+#cmakedefine XERCES_NO_NATIVE_BOOL 1
+#cmakedefine XERCES_LSTRSUPPORT 1
+
+#cmakedefine XERCES_HAVE_CPUID_INTRINSIC 1
+#cmakedefine XERCES_HAVE_SSE2_INTRINSIC 1
+#cmakedefine XERCES_HAVE_GETCPUID 1
+
+#cmakedefine XERCES_NO_MATCHING_DELETE_OPERATOR 1
+
+#cmakedefine XERCES_DLL_EXPORT 1
+#cmakedefine XERCES_STATIC_LIBRARY 1
+#define XERCES_PLATFORM_EXPORT @XERCES_PLATFORM_EXPORT@
+#define XERCES_PLATFORM_IMPORT @XERCES_PLATFORM_IMPORT@
+#ifdef XERCES_DLL_EXPORT
+#  define DLL_EXPORT
+#endif
+
+// ---------------------------------------------------------------------------
+//  Include standard headers, if available, that we may rely on below.
+// ---------------------------------------------------------------------------
+#if defined(__cplusplus) && defined(HAVE_CSTDINT)
+#  include <cstdint>
+#endif
+#if XERCES_HAVE_STDINT_H
+#  include <stdint.h>
+#endif
+#if XERCES_HAVE_INTTYPES_H
+#  include <inttypes.h>
+#endif
+#if XERCES_HAVE_SYS_TYPES_H
+#  include <sys/types.h>
+#endif
+#if XERCES_INCLUDE_WCHAR_H
+#  include <wchar.h>
+#endif
+
+// ---------------------------------------------------------------------------
+//  XMLSize_t is the unsigned integral type.
+// ---------------------------------------------------------------------------
+typedef XERCES_SIZE_T				XMLSize_t;
+typedef XERCES_SSIZE_T				XMLSSize_t;
+
+// ---------------------------------------------------------------------------
+//  Define our version of the XML character
+// ---------------------------------------------------------------------------
+typedef XERCES_XMLCH_T				XMLCh;
+
+// ---------------------------------------------------------------------------
+//  Define unsigned 16, 32, and 64 bit integers
+// ---------------------------------------------------------------------------
+typedef XERCES_U16BIT_INT			XMLUInt16;
+typedef XERCES_U32BIT_INT			XMLUInt32;
+typedef XERCES_U64BIT_INT			XMLUInt64;
+
+// ---------------------------------------------------------------------------
+//  Define signed 16, 32, and 64 bit integers
+// ---------------------------------------------------------------------------
+typedef XERCES_S16BIT_INT			XMLInt16;
+typedef XERCES_S32BIT_INT			XMLInt32;
+typedef XERCES_S64BIT_INT			XMLInt64;
+
+// ---------------------------------------------------------------------------
+//  XMLFilePos is the type used to represent a file position.
+// ---------------------------------------------------------------------------
+typedef XMLUInt64			        XMLFilePos;
+
+// ---------------------------------------------------------------------------
+//  XMLFileLoc is the type used to represent a file location (line/column).
+// ---------------------------------------------------------------------------
+typedef XMLUInt64			        XMLFileLoc;
+
+// ---------------------------------------------------------------------------
+//  Force on the Xerces debug token if it is on in the build environment
+// ---------------------------------------------------------------------------
+#if defined(_DEBUG)
+#define XERCES_DEBUG
+#endif
+
+#endif
diff --git a/tests/CMakeLists.txt b/tests/CMakeLists.txt
new file mode 100644
index 0000000..c045f0d
--- /dev/null
+++ b/tests/CMakeLists.txt
@@ -0,0 +1,197 @@
+# CMake build for xerces-c
+#
+# Written by Roger Leigh <rleigh@codelibre.net>
+#
+# Licensed to the Apache Software Foundation (ASF) under one or more
+# contributor license agreements.  See the NOTICE file distributed with
+# this work for additional information regarding copyright ownership.
+# The ASF licenses this file to You under the Apache License, Version 2.0
+# (the "License"); you may not use this file except in compliance with
+# the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+# Definitions required for building
+add_definitions(
+  -DHAVE_CONFIG_H
+)
+
+# Search the project binary dir for config.h
+include_directories(
+  ${PROJECT_BINARY_DIR}
+  ${PROJECT_SOURCE_DIR}/src
+  ${PROJECT_BINARY_DIR}/src
+  ${CMAKE_CURRENT_SOURCE_DIR}
+)
+
+set(EXTRA_DIST
+  src/DOM/Normalizer/expectedOutput
+  src/DOM/TypeInfo/data/combined.dtd
+  src/DOM/TypeInfo/data/combined.xml
+  src/DOM/TypeInfo/data/combined.xsd
+  src/DOM/TypeInfo/data/SecondSchema.xsd
+  src/DOM/TypeInfo/data/TypeInfo.dtd
+  src/DOM/TypeInfo/data/TypeInfo.xml
+  src/DOM/TypeInfo/data/TypeInfo.xsd
+  src/DOM/TypeInfo/data/TypeInfoJustDTD.xml
+  src/DOM/TypeInfo/data/TypeInfoNoDTD.xml
+  src/DOM/TypeInfo/data/TypeInfoNoDTD.xsd
+  src/XSTSHarness/regression
+  src/xinclude
+)
+
+macro(add_test_executable name)
+  add_executable(${name} ${ARGN})
+  target_link_libraries(${name} xerces-c)
+  set_target_properties(${name} PROPERTIES FOLDER "Tests")
+  list(APPEND test_programs ${name})
+endmacro()
+
+add_test_executable(DOMTest
+  src/DOM/DOMTest/DTest.cpp
+  src/DOM/DOMTest/DTest.h
+)
+
+add_test_executable(DOMMemTest
+  src/DOM/DOMMemTest/DOMMemTest.cpp
+)
+
+add_test_executable(Normalizer
+  src/DOM/Normalizer/Normalizer.cpp
+  src/DOM/Normalizer/Normalizer.hpp
+)
+
+add_test_executable(RangeTest
+  src/DOM/RangeTest/RangeTest.cpp
+  )
+
+add_test_executable(DOMTraversalTest
+  src/DOM/Traversal/Traversal.cpp
+)
+
+add_test_executable(DOMTypeInfoTest
+  src/DOM/TypeInfo/TypeInfo.cpp
+  src/DOM/TypeInfo/TypeInfo.hpp
+)
+
+add_test_executable(EncodingTest
+  src/EncodingTest/EncodingTest.cpp
+)
+
+add_test_executable(InitTermTest
+  src/InitTermTest/InitTermTest.cpp
+  src/InitTermTest/InitTermTest.hpp
+)
+
+add_test_executable(MemHandlerTest
+  src/MemHandlerTest/MemoryMonitor.cpp
+  src/MemHandlerTest/MemoryMonitor.hpp
+  src/MemHandlerTest/SimpleValueHashTableOf.hpp
+)
+
+add_test_executable(NetAccessorTest
+  src/NetAccessorTest/NetAccessorTest.cpp
+)
+
+# Doesn't compile under gcc4 for some reason
+# dcargill says this is obsolete and we can delete it.
+#add_test_executable(ParserTest
+#  src/ParserTest/ParserTest.cpp
+#  src/ParserTest/ParserTest.hpp
+#  src/ParserTest/ParserTest_Parser.cpp
+#  src/ParserTest/ParserTest_Parser.hpp
+#)
+
+add_test_executable(ThreadTest
+  src/ThreadTest/ThreadTest.cpp
+)
+
+# Fails to compile under gcc 4 (ambiguous calls to NullPointerException)
+# dcargill says this is obsolete and we can delete it.
+#add_test_executable(UtilTests
+#  src/UtilTests/CoreTests_BitSet.cpp
+#  src/UtilTests/CoreTests_CountedPointer.cpp
+#  src/UtilTests/CoreTests_RefArray.cpp
+#  src/UtilTests/CoreTests_RefHashTable.cpp
+#  src/UtilTests/CoreTests_RefStack.cpp
+#  src/UtilTests/CoreTests_RefVector.cpp
+#  src/UtilTests/CoreTests_String.cpp
+#  src/UtilTests/CoreTests_Transcoders.cpp
+#  src/UtilTests/CoreTests_URL.cpp
+#  src/UtilTests/CoreTests_ValueArray.cpp
+#  src/UtilTests/CoreTests_ValueStack.cpp
+#  src/UtilTests/CoreTests_ValueVector.cpp
+#  src/UtilTests/CoreTestsMain.cpp
+#  src/UtilTests/CoreTests.hpp
+#)
+
+add_test_executable(XSerializerTest
+  src/XSerializerTest/XSerializerHandlers.cpp
+  src/XSerializerTest/XSerializerHandlers.hpp
+  src/XSerializerTest/XSerializerTest.cpp
+  src/XSerializerTest/XSerializerTest.hpp
+)
+
+add_test_executable(XSTSHarness
+  src/XSTSHarness/XSTSHarness.cpp
+  src/XSTSHarness/XSTSHarness.hpp
+  src/XSTSHarness/XSTSHarnessHandlers.cpp
+  src/XSTSHarness/XSTSHarnessHandlers.hpp
+  src/XSTSHarness/XMLHarnessHandlers.cpp
+  src/XSTSHarness/XMLHarnessHandlers.hpp
+)
+
+# Fails to compile under gcc4 (values too long for long type)
+add_test_executable(XSValueTest
+  src/XSValueTest/XSValueTest.cpp
+  src/XSValueTest/XSValueTest.hpp
+)
+
+# Run tests
+include(XercesTest)
+
+add_xerces_test(DOMTest          COMMAND DOMTest)
+add_xerces_test(DOMMemTest       COMMAND DOMMemTest)
+add_xerces_test(RangeTest        COMMAND RangeTest)
+add_xerces_test(DOMTraversalTest COMMAND DOMTraversalTest)
+add_xerces_test(XSerializerTest  COMMAND XSerializerTest EXPECT_FAIL)
+add_xerces_test(XSerializerTest1 COMMAND XSerializerTest -v=never  personal.xml)
+add_xerces_test(XSerializerTest2 COMMAND XSerializerTest -v=always personal.xml)
+add_xerces_test(XSerializerTest3 COMMAND XSerializerTest -v=never  personal-schema.xml)
+add_xerces_test(XSerializerTest4 COMMAND XSerializerTest -v=always personal-schema.xml)
+add_xerces_test(XSerializerTest5 COMMAND XSerializerTest -v=always -f personal-schema.xml)
+add_xerces_test(XSValueTest      COMMAND XSValueTest)
+
+add_xerces_test(InitTermTest     COMMAND InitTermTest EXPECT_FAIL)
+add_xerces_test(InitTermTest1    COMMAND InitTermTest  personal.xml)
+add_xerces_test(InitTermTest2    COMMAND InitTermTest -n -s personal-schema.xml)
+add_xerces_test(InitTermTest3    COMMAND InitTermTest -n -s -f personal-schema.xml)
+
+add_xerces_test(ThreadTest       COMMAND ThreadTest EXPECT_FAIL)
+add_xerces_test(ThreadTest1      COMMAND ThreadTest -parser=sax               -v=never  -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest2      COMMAND ThreadTest -parser=dom               -v=never  -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest3      COMMAND ThreadTest -parser=sax2              -v=never  -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest4      COMMAND ThreadTest -parser=sax               -v=always -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest5      COMMAND ThreadTest -parser=dom               -v=always -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest6      COMMAND ThreadTest -parser=sax2              -v=always -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest7      COMMAND ThreadTest -parser=sax  -gc          -v=always -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest8      COMMAND ThreadTest -parser=dom  -gc          -v=always -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest9      COMMAND ThreadTest -parser=sax2 -gc          -v=always -quiet -threads 10 -time 20 personal.xml)
+add_xerces_test(ThreadTest10     COMMAND ThreadTest -parser=sax  -n -s -f     -v=always -quiet -threads 10 -time 20 personal-schema.xml)
+add_xerces_test(ThreadTest11     COMMAND ThreadTest -parser=dom  -n -s -f     -v=always -quiet -threads 10 -time 20 personal-schema.xml)
+add_xerces_test(ThreadTest12     COMMAND ThreadTest -parser=sax2 -n -s -f     -v=always -quiet -threads 10 -time 20 personal-schema.xml)
+add_xerces_test(ThreadTest13     COMMAND ThreadTest -parser=sax  -gc -n -s -f -v=always -quiet -threads 10 -time 20 personal-schema.xml)
+add_xerces_test(ThreadTest14     COMMAND ThreadTest -parser=dom  -gc -n -s -f -v=always -quiet -threads 10 -time 20 personal-schema.xml)
+add_xerces_test(ThreadTest15     COMMAND ThreadTest -parser=sax2 -gc -n -s -f -v=always -quiet -threads 10 -time 20 personal-schema.xml)
+
+add_xerces_test(MemHandlerTest   COMMAND MemHandlerTest EXPECT_FAIL)
+add_xerces_test(MemHandlerTest1  COMMAND MemHandlerTest -v=always -n -r=2 personal.xml)
+add_xerces_test(MemHandlerTest2  COMMAND MemHandlerTest -v=always -n -r=2 -s -f personal-schema.xml)
+
+add_xerces_test(DOMTypeInfoTest WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/src/DOM/TypeInfo" COMMAND DOMTypeInfoTest)
diff --git a/tests/Makefile.am b/tests/Makefile.am
index d440c1c..0ffcc60 100644
--- a/tests/Makefile.am
+++ b/tests/Makefile.am
@@ -26,7 +26,9 @@ LDADD =	                                        ${top_builddir}/src/libxerces-c.
 # header file when doing out-of-tree builds
 AM_CPPFLAGS =                                   -I${top_builddir}/src -I${top_srcdir}/src
 
-EXTRA_DIST =                                    src/DOM/Normalizer/expectedOutput \
+EXTRA_DIST =                                    CMakeLists.txt \
+                                                expected \
+                                                src/DOM/Normalizer/expectedOutput \
                                                 src/DOM/TypeInfo/data/combined.dtd \
                                                 src/DOM/TypeInfo/data/combined.xml \
                                                 src/DOM/TypeInfo/data/combined.xsd \
diff --git a/tests/expected/DOMMemTest.log b/tests/expected/DOMMemTest.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/DOMMemTest.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/DOMTest.log b/tests/expected/DOMTest.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/DOMTest.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/DOMTraversalTest.log b/tests/expected/DOMTraversalTest.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/DOMTraversalTest.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/DOMTypeInfoTest.log b/tests/expected/DOMTypeInfoTest.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/DOMTypeInfoTest.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/InitTermTest.log b/tests/expected/InitTermTest.log
new file mode 100644
index 0000000..403bf66
--- /dev/null
+++ b/tests/expected/InitTermTest.log
@@ -0,0 +1,12 @@
+
+Usage:
+    InitTermTest [options] <XML file>
+
+This program tests the XMLPlatformUtils::Initialize()/Terminate()
+pair by calling it a number of times.
+Options:
+    -n          Enable namespace processing. Default is off.
+    -s          Enable schema processing. Default is off.
+    -f          Enable full schema constraint checking. Defaults to off.
+    -?          Show this help.
+
diff --git a/tests/expected/InitTermTest1.log b/tests/expected/InitTermTest1.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/InitTermTest1.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/InitTermTest2.log b/tests/expected/InitTermTest2.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/InitTermTest2.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/InitTermTest3.log b/tests/expected/InitTermTest3.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/InitTermTest3.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/MemHandlerTest.log b/tests/expected/MemHandlerTest.log
new file mode 100644
index 0000000..584c7c7
--- /dev/null
+++ b/tests/expected/MemHandlerTest.log
@@ -0,0 +1,21 @@
+
+Usage:
+    MemHandlerTest [options] <XML file | List file>
+
+This program invokes the XercesDOMParser, DOMLSParser, SAXParser ,
+and the SAX2XMLReader, and ensures that MemoryManagers set on these
+domBuilders are called to delete just as many bytes as they allocate.
+This is done for each XML file, and each file is processed
+as many times as indicated.
+Options:
+    -l          Indicate the input file is a List File that has a list of xml files.
+                Default to off (Input file is an XML file).
+    -v=xxx      Validation scheme [always | never | auto*].
+    -n          Enable namespace processing. Defaults to off.
+    -s          Enable schema processing. Defaults to off.
+    -f          Enable full schema constraint checking. Defaults to off.
+    -r=n        Run file through domBuilders n times.
+    -?          Show this help.
+
+  * = Default if not provided explicitly.
+
diff --git a/tests/expected/MemHandlerTest1.log b/tests/expected/MemHandlerTest1.log
new file mode 100644
index 0000000..a7bba55
--- /dev/null
+++ b/tests/expected/MemHandlerTest1.log
@@ -0,0 +1,4 @@
+At destruction, domBuilderMemMonitor has 0 bytes.
+At destruction, sax2MemMonitor has 0 bytes.
+At destruction, sax1MemMonitor has 0 bytes.
+At destruction, staticMemMonitor has 0 bytes.
diff --git a/tests/expected/MemHandlerTest2.log b/tests/expected/MemHandlerTest2.log
new file mode 100644
index 0000000..a7bba55
--- /dev/null
+++ b/tests/expected/MemHandlerTest2.log
@@ -0,0 +1,4 @@
+At destruction, domBuilderMemMonitor has 0 bytes.
+At destruction, sax2MemMonitor has 0 bytes.
+At destruction, sax1MemMonitor has 0 bytes.
+At destruction, staticMemMonitor has 0 bytes.
diff --git a/tests/expected/RangeTest.log b/tests/expected/RangeTest.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/RangeTest.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest.log b/tests/expected/ThreadTest.log
new file mode 100644
index 0000000..49e8229
--- /dev/null
+++ b/tests/expected/ThreadTest.log
@@ -0,0 +1,20 @@
+No input XML file specified on command line.
+usage:  ThreadTest [-v] [-threads nnn] [-time nnn] [-quiet] [-verbose] xmlfile...
+     -v=xxx         Validation scheme [always | never | auto].  Default is AUTO.
+     -n             Enable namespace processing. Defaults to off.
+     -s             Enable schema processing. Defaults to off.
+     -f             Enable full schema constraint checking. Defaults to off.
+     -parser=xxx    Parser Type [dom | sax | sax2].  Default is SAX (SAX1).
+     -p             Enable namespace prefixes. Defaults to off.
+                    (Only used with -parser=sax2, ignored otherwise.)
+     -quiet         Suppress periodic status display.
+     -verbose       Display extra messages.
+     -reuse         Retain and reuse parser.  Default creates new for each parse.
+     -threads nnn   Number of threads.  Default is 2.
+     -time nnn      Total time to run, in seconds.  Default is forever.
+     -parses nnn    Run for nnn parses instead of time.  Default is to use time
+     -dump          Dump DOM tree on error.
+     -mem           Read files into memory once only, and parse them from there.
+     -gc            Enable grammar caching (i.e. grammar cached and used in subsequent parses). Defaults to off.
+     -init          Perform an initial parse of the file(s) before starting up the individual threads.
+
diff --git a/tests/expected/ThreadTest1.log b/tests/expected/ThreadTest1.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest1.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest10.log b/tests/expected/ThreadTest10.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest10.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest11.log b/tests/expected/ThreadTest11.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest11.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest12.log b/tests/expected/ThreadTest12.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest12.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest13.log b/tests/expected/ThreadTest13.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest13.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest14.log b/tests/expected/ThreadTest14.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest14.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest15.log b/tests/expected/ThreadTest15.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest15.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest2.log b/tests/expected/ThreadTest2.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest2.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest3.log b/tests/expected/ThreadTest3.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest3.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest4.log b/tests/expected/ThreadTest4.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest4.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest5.log b/tests/expected/ThreadTest5.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest5.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest6.log b/tests/expected/ThreadTest6.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest6.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest7.log b/tests/expected/ThreadTest7.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest7.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest8.log b/tests/expected/ThreadTest8.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest8.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/ThreadTest9.log b/tests/expected/ThreadTest9.log
new file mode 100644
index 0000000..2066382
--- /dev/null
+++ b/tests/expected/ThreadTest9.log
@@ -0,0 +1 @@
+Test Run Successfully
diff --git a/tests/expected/XSValueTest.log b/tests/expected/XSValueTest.log
new file mode 100644
index 0000000..ed1f190
--- /dev/null
+++ b/tests/expected/XSValueTest.log
@@ -0,0 +1,2 @@
+
+XSValueTest Pass
diff --git a/tests/expected/XSerializerTest.log b/tests/expected/XSerializerTest.log
new file mode 100644
index 0000000..44ae4a5
--- /dev/null
+++ b/tests/expected/XSerializerTest.log
@@ -0,0 +1,23 @@
+
+Usage:
+    XSerializerTest [options] <XML file | List file>
+
+This program invokes the SAX2XMLReader, and then prints the
+number of elements, attributes, spaces and characters found
+in each XML file, using SAX2 API.
+
+Options:
+    -l          Indicate the input file is a List File that has a list of xml files.
+                Default to off (Input file is an XML file).
+    -v=xxx      Validation scheme [always | never | auto*].
+    -f          Enable full schema constraint checking processing. Defaults to off.
+    -p          Enable namespace-prefixes feature. Defaults to off.
+    -n          Disable namespace processing. Defaults to on.
+                NOTE: THIS IS OPPOSITE FROM OTHER SAMPLES.
+    -s          Disable schema processing. Defaults to on.
+                NOTE: THIS IS OPPOSITE FROM OTHER SAMPLES.
+    -locale=ll_CC specify the locale, default: en_US.
+    -?          Show this help.
+
+  * = Default if not provided explicitly.
+
diff --git a/tests/expected/XSerializerTest1.log b/tests/expected/XSerializerTest1.log
new file mode 100644
index 0000000..d930474
--- /dev/null
+++ b/tests/expected/XSerializerTest1.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems, 12 attrs, 0 spaces, 268 chars)
diff --git a/tests/expected/XSerializerTest2.log b/tests/expected/XSerializerTest2.log
new file mode 100644
index 0000000..553e03c
--- /dev/null
+++ b/tests/expected/XSerializerTest2.log
@@ -0,0 +1 @@
+personal.xml:{timing removed}(37 elems, 12 attrs, 134 spaces, 134 chars)
diff --git a/tests/expected/XSerializerTest3.log b/tests/expected/XSerializerTest3.log
new file mode 100644
index 0000000..dfc074c
--- /dev/null
+++ b/tests/expected/XSerializerTest3.log
@@ -0,0 +1 @@
+personal-schema.xml:{timing removed}(37 elems, 28 attrs, 0 spaces, 268 chars)
diff --git a/tests/expected/XSerializerTest4.log b/tests/expected/XSerializerTest4.log
new file mode 100644
index 0000000..a045858
--- /dev/null
+++ b/tests/expected/XSerializerTest4.log
@@ -0,0 +1 @@
+personal-schema.xml:{timing removed}(37 elems, 28 attrs, 140 spaces, 128 chars)
diff --git a/tests/expected/XSerializerTest5.log b/tests/expected/XSerializerTest5.log
new file mode 100644
index 0000000..a045858
--- /dev/null
+++ b/tests/expected/XSerializerTest5.log
@@ -0,0 +1 @@
+personal-schema.xml:{timing removed}(37 elems, 28 attrs, 140 spaces, 128 chars)
-- 
2.7.4

